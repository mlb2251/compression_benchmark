[
    "(lam (app car (app cdr (app cdr (app cdr (app cdr $0))))))",
    "(lam (app cdr (app cdr (app (app prev_dc_inv_2 (app cdr $0)) (app prev_dc_inv_0 prev_dc_inv_1)))))",
    "(lam (app cdr (app (app prev_dc_inv_2 $0) prev_dc_inv_1)))",
    "(lam (app cdr (app (app prev_dc_inv_2 (app cdr $0)) (app prev_dc_inv_0 prev_dc_inv_1))))",
    "(lam (app (app cons (app car $0)) $0))",
    "(lam (app (app cons (app car $0)) (app (app cons (app car (app cdr $0))) (app (app cons (app car (app cdr (app cdr $0)))) (app cdr (app cdr (app cdr (app cdr $0))))))))",
    "(lam (app (app cons (app car $0)) (app (app cons (app car (app cdr $0))) (app (app cons (app (app index (app prev_dc_inv_0 0)) $0)) (app cdr (app cdr (app cdr (app cdr $0))))))))",
    "(lam (app (app cons (app car (app cdr (app cdr (app cdr $0))))) $0))",
    "(lam (app (app cons (app (app index 0) $0)) $0))",
    "(lam (app (app cons (app (app index prev_dc_inv_1) $0)) $0))",
    "(lam (app (app eq? (app (app (app fold $0) prev_dc_inv_1) (lam (lam (app (app mod $0) $1))))) 0))",
    "(lam (app (app (app fold $0) (app cdr (app cdr (app (app prev_dc_inv_2 $0) prev_dc_inv_1)))) (lam (lam (app (app cons $1) $0)))))",
    "(lam (app (app (app fold $0) (app (app cons (app prev_dc_inv_0 (app (app mod prev_dc_inv_1) (app prev_dc_inv_0 prev_dc_inv_1)))) empty)) (lam (lam (app (app cons $1) $0)))))",
    "(lam (app (app (app fold $0) (app (app cons (app prev_dc_inv_0 prev_dc_inv_1)) empty)) (lam (lam (app (app cons $1) $0)))))",
    "(lam (app (app (app fold $0) (app (app cons 0) empty)) (lam (lam (app (app cons $1) $0)))))",
    "(lam (app (app (app fold $0) (app is-square 0)) (lam (lam (app (app (app if $0) (app is-prime $1)) $0)))))",
    "(lam (app (app (app fold $0) (app is-square 1)) (lam (lam (app (app (app if $0) (app is-prime $1)) $0)))))",
    "(lam (app (app (app fold $0) (app (app prev_dc_inv_2 (app cdr (app cdr $0))) 1)) (lam (lam (app (app cons $1) $0)))))",
    "(lam (app (app (app fold $0) (app range 1)) (lam (lam (app (app cons $1) $0)))))",
    "(lam (app (app (app fold $0) 0) (lam (lam (app (app (app if (app (app gt? $0) $1)) $0) $1)))))",
    "(lam (app (app (app fold $0) 0) (lam (lam (app (app (app if (app (app gt? $1) $0)) $1) $0)))))",
    "(lam (app (app (app fold $0) 1) (lam (lam (app (app * $0) $1)))))",
    "(lam (app (app (app fold $0) 1) (lam (lam (app (app * $1) $0)))))",
    "(lam (app (app (app fold $0) empty) (lam (lam (app (app cons (app (app mod $1) (app prev_dc_inv_0 prev_dc_inv_1))) $0)))))",
    "(lam (app (app (app fold (app cdr $0)) 0) (lam (lam (app (app + $0) (app (app (app if (app (app eq? $1) (app car $2))) 1) 0))))))",
    "(lam (app (app (app fold (app cdr $0)) 0) (lam (lam (app (app (app if (app (app eq? $1) (app car $2))) (app (app + $0) 1)) $0)))))",
    "(lam (app (app index 1) (app cdr (app cdr (app cdr $0)))))",
    "(lam (app is-prime (app (app + 1) (app prev_dc_inv_0 (app (app index (app length $0)) (app (app cons 0) $0))))))",
    "(lam (app is-prime (app (app (app fold $0) (app (app + 1) 1)) (lam (lam (app (app - $0) (app (app mod $1) $0)))))))",
    "(lam (app is-square (app (app (app fold $0) prev_dc_inv_1) (lam (lam (app (app mod $0) $1))))))",
    "(lam (app (app map (lam (app (app * $0) (app prev_dc_inv_0 0)))) $0))",
    "(lam (app (app map (lam (app (app * $0) prev_dc_inv_1))) $0))",
    "(lam (app (app map (lam (app (app * prev_dc_inv_1) $0))) $0))",
    "(lam (app (app map (lam (app (app + $0) $0))) $0))",
    "(lam (app (app map (lam (app (app + $0) prev_dc_inv_1))) $0))",
    "(lam (app (app map (lam (app (app + prev_dc_inv_1) $0))) $0))",
    "(lam (app (app map (lam (app car $1))) $0))",
    "(lam (app (app map (lam (app (app eq? $0) prev_dc_inv_1))) $0))",
    "(lam (app (app map (lam (app (app eq? prev_dc_inv_1) $0))) $0))",
    "(lam (app (app map (lam (app (app index $0) (app (app cons prev_dc_inv_1) (app range $0))))) $0))",
    "(lam (app (app map (lam (app (app index $0) (app (app cons prev_dc_inv_1) (app range prev_dc_inv_1))))) $0))",
    "(lam (app (app map (lam (app (app index (app prev_dc_inv_0 (app prev_dc_inv_0 $0))) $1))) (app range (app prev_dc_inv_0 (app (app + 1) 1)))))",
    "(lam (app (app map (lam (app (app index (app prev_dc_inv_0 (app prev_dc_inv_0 $0))) $1))) (app range (app prev_dc_inv_0 (app prev_dc_inv_0 0)))))",
    "(lam (app (app map (lam (app (app index (app prev_dc_inv_0 1)) $1))) $0))",
    "(lam (app (app map (lam (app (app index 0) $1))) $0))",
    "(lam (app (app map (lam (app (app index prev_dc_inv_1) $1))) $0))",
    "(lam (app (app map (lam (app length empty))) $0))",
    "(lam (app (app map (lam (app (app mod $0) (app (app + prev_dc_inv_1) 1)))) $0))",
    "(lam (app (app map (lam (app (app mod $0) (app prev_dc_inv_0 (app prev_dc_inv_0 0))))) $0))",
    "(lam (app (app map (lam (app (app mod $0) (app prev_dc_inv_0 0)))) $0))",
    "(lam (app (app map (lam (app (app mod $0) (app prev_dc_inv_0 prev_dc_inv_1)))) $0))",
    "(lam (app (app map (lam (app (app mod (app prev_dc_inv_0 $0)) (app prev_dc_inv_0 0)))) $0))",
    "(lam (app (app map (lam (app (app mod (app prev_dc_inv_0 $0)) (app prev_dc_inv_0 1)))) $0))",
    "(lam (app (app map (lam (app (app mod (app prev_dc_inv_0 $0)) prev_dc_inv_1))) $0))",
    "(lam (app (app map (lam 0)) $0))",
    "(lam (app (app prev_dc_inv_2 $0) (app (app + prev_dc_inv_1) 1)))",
    "(lam (app (app prev_dc_inv_2 $0) (app (app + prev_dc_inv_1) 1)))",
    "(lam (app (app prev_dc_inv_2 $0) (app (app - (app length $0)) 1)))",
    "(lam (app (app prev_dc_inv_2 $0) (app length (app cdr $0))))",
    "(lam (app (app prev_dc_inv_2 $0) (app prev_dc_inv_0 (app length empty))))",
    "(lam (app (app prev_dc_inv_2 $0) (app prev_dc_inv_0 (app prev_dc_inv_0 0))))",
    "(lam (app (app prev_dc_inv_2 $0) (app prev_dc_inv_0 (app prev_dc_inv_0 0))))",
    "(lam (app (app prev_dc_inv_2 $0) (app prev_dc_inv_0 0)))",
    "(lam (app (app prev_dc_inv_2 (app cdr $0)) (app prev_dc_inv_0 0)))",
    "(lam (app (app prev_dc_inv_2 (app cdr (app cdr $0))) (app prev_dc_inv_0 (app prev_dc_inv_0 0))))",
    "(lam (app (app prev_dc_inv_2 (app cdr (app cdr (app cdr $0)))) prev_dc_inv_1))"
]