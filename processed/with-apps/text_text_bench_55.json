[
    "(lam (app (app cons (app car $0)) (app (app cons LPAREN) empty)))",
    "(lam (app (app cons (app (app index 0) $0)) (app (app cons LPAREN) empty)))",
    "(lam (app (app (app fold $0) $0) (lam (lam (app cdr (app (app (app if (app (app char-eq? $1) RPAREN)) $2) $0))))))",
    "(lam (app (app (app fold (app cdr $0)) $0) (lam (lam (app cdr (app (app (app if (app (app char-eq? $1) RPAREN)) (app cdr $2)) $0))))))",
    "(lam (app (app (app fold STRING) $0) (lam (lam (app (app cons $1) $0)))))",
    "(lam (app (app (app fold STRING) (app (app map (lam $0)) $0)) (lam (lam (app (app cons $1) $0)))))",
    "(lam (lam (app (app cons (app car $1)) (app (app cons '.') (app (app cons (app car $0)) (app (app cons '.') empty))))))",
    "(lam (lam (app (app cons (app car $1)) (app (app cons '.') (app (app cons (app (app index 0) $0)) (app (app cons '.') empty))))))",
    "(lam (lam (app (app (app fold $1) $0) (lam (lam (app (app cons $1) $0))))))",
    "(lam (lam (app (app (app fold $1) $0) (lam (lam (app (app cons $1) $0))))))",
    "(lam (lam (app (app (app fold $1) (app (app map (lam $0)) $0)) (lam (lam (app (app cons $1) $0))))))",
    "(lam (lam (app (app (app fold $1) (app (app map (lam $0)) $0)) (lam (lam (app (app cons $1) $0))))))",
    "(lam (app (app map (lam (app (app (app if (app (app char-eq? $0) '.')) RPAREN) $0))) $0))",
    "(lam (app (app map (lam (app (app (app if (app (app char-eq? '.') $0)) RPAREN) $0))) $0))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app (app + (app (app index 1) (app cdr (app cdr (app cdr (app range (app length $0))))))) 1))))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app (app - (app length $0)) 1))))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app (app (app fold (app cdr $0)) 0) (lam (lam (app (app + (app (app (app if (app (app char-eq? $1) ',')) 0) $0)) 1)))))))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app (app index 1) (app cdr (app cdr (app cdr (app cdr (app range (app length $0))))))))))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app length (app cdr $0)))))",
    "(lam (app (app (app (app unfold $0) (lam (app (app char-eq? (app car $0)) ','))) (lam (app car $0))) (lam (app cdr $0))))"
]