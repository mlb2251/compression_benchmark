[
    "(lam (cons (car $0) (map (lam ',') (range 1))))",
    "(lam (cons (car $0) (map (lam '-') (range 1))))",
    "(lam (cons LPAREN (prev_dc_inv_1 $0 (cons RPAREN empty))))",
    "(lam (fold $0 $0 (lam (lam (cdr (if (char-eq? '.' $1) $2 $0))))))",
    "(lam (fold $0 $0 (lam (lam (cdr (if (char-eq? RPAREN $1) $2 $0))))))",
    "(lam (fold (cdr $0) $0 (lam (lam (cdr (if (char-eq? '.' $1) (cdr $2) $0))))))",
    "(lam (lam (cons (car $1) (cons '.' (prev_dc_inv_0 $0 '.')))))",
    "(lam (lam (cons (index 0 $1) (cons '.' (prev_dc_inv_0 $0 '.')))))",
    "(lam (lam (prev_dc_inv_1 $1 $0)))",
    "(lam (lam (prev_dc_inv_1 $1 $0)))",
    "(lam (lam (prev_dc_inv_1 $1 (cons SPACE $0))))",
    "(lam (lam (prev_dc_inv_1 $1 (cons SPACE (cons SPACE $0)))))",
    "(lam (lam (prev_dc_inv_1 $1 (cons SPACE (map (lam $0) $0)))))",
    "(lam (lam (prev_dc_inv_1 $1 (map (lam $0) $0))))",
    "(lam (lam (prev_dc_inv_1 $1 (map (lam $0) $0))))",
    "(lam (map (lam (if (char-eq? $0 ',') LPAREN $0)) $0))",
    "(lam (map (lam (if (char-eq? $0 '-') ',' $0)) $0))",
    "(lam (map (lam (if (char-eq? ',' $0) LPAREN $0)) $0))",
    "(lam (map (lam (if (char-eq? '-' $0) ',' $0)) $0))",
    "(lam (prev_dc_inv_0 $0 ','))",
    "(lam (prev_dc_inv_0 $0 '-'))",
    "(lam (prev_dc_inv_1 $0 (map (lam $0) STRING)))",
    "(lam (prev_dc_inv_1 $0 STRING))",
    "(lam (prev_dc_inv_1 (cons LPAREN $0) (cons RPAREN empty)))",
    "(lam (prev_dc_inv_1 (map (lam $0) STRING) $0))",
    "(lam (prev_dc_inv_1 (map (lam $0) STRING) $0))",
    "(lam (prev_dc_inv_1 (map (lam $0) STRING) $0))",
    "(lam (prev_dc_inv_1 STRING $0))",
    "(lam (prev_dc_inv_1 STRING $0))",
    "(lam (prev_dc_inv_1 STRING $0))"
]