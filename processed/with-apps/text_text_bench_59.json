[
    "(lam (cons (car $0) (map (lam LPAREN) (range 1))))",
    "(lam (cons LPAREN (prev_dc_inv_2 (cons RPAREN empty) $0)))",
    "(lam (fold $0 $0 (lam (lam (cdr (if (char-eq? $1 RPAREN) $2 $0))))))",
    "(lam (fold (cdr $0) $0 (lam (lam (cdr (if (char-eq? $1 RPAREN) (cdr $2) $0))))))",
    "(lam (lam (cons (car $1) (cons '.' (prev_dc_inv_0 $0 '.')))))",
    "(lam (lam (cons (car $1) (cons '.' (prev_dc_inv_0 $0 '.')))))",
    "(lam (lam (cons (index 0 $1) (cons '.' (prev_dc_inv_0 $0 '.')))))",
    "(lam (lam (prev_dc_inv_2 $0 $1)))",
    "(lam (lam (prev_dc_inv_2 $0 $1)))",
    "(lam (lam (prev_dc_inv_2 (map (lam $0) $0) $1)))",
    "(lam (lam (prev_dc_inv_2 (map (lam $0) $0) $1)))",
    "(lam (lam (prev_dc_inv_2 (prev_dc_inv_0 $0 '.') (prev_dc_inv_0 $1 '.'))))",
    "(lam (map (lam (if (char-eq? $0 '.') RPAREN $0)) $0))",
    "(lam (map (lam (if (char-eq? '.' $0) RPAREN $0)) $0))",
    "(lam (prev_dc_inv_0 $0 ','))",
    "(lam (prev_dc_inv_0 $0 LPAREN))",
    "(lam (prev_dc_inv_0 (prev_dc_inv_1 1 $0) ','))",
    "(lam (prev_dc_inv_1 (+ (index 1 (cdr (cdr (cdr (range (length $0)))))) 1) $0))",
    "(lam (prev_dc_inv_1 (- (length $0) 1) $0))",
    "(lam (prev_dc_inv_1 (- (length (cdr (cdr $0))) 1) $0))",
    "(lam (prev_dc_inv_1 (fold (cdr $0) 1 (lam (lam (+ (if (char-eq? $1 ',') 0 $0) 1)))) $0))",
    "(lam (prev_dc_inv_1 (index 1 (cdr (cdr (cdr (cdr (range (length $0))))))) $0))",
    "(lam (prev_dc_inv_1 (length (cdr $0)) $0))",
    "(lam (prev_dc_inv_1 (length (cdr (cdr (cdr $0)))) $0))",
    "(lam (prev_dc_inv_2 $0 STRING))",
    "(lam (prev_dc_inv_2 (cons RPAREN empty) (cons LPAREN $0)))",
    "(lam (prev_dc_inv_2 (fold (cdr $0) empty (lam (lam (if (char-eq? (car $2) $1) STRING $0)))) $0))",
    "(lam (prev_dc_inv_2 (map (lam $0) $0) STRING))",
    "(lam (unfold $0 (lam (char-eq? '.' (car $0))) (lam (car $0)) (lam (cdr $0))))",
    "(lam (unfold $0 (lam (char-eq? (car $0) ',')) (lam (car $0)) (lam (cdr $0))))",
    "(lam (unfold $0 (lam (char-eq? (car $0) '.')) (lam (car $0)) (lam (cdr $0))))",
    "(lam (unfold $0 (lam (char-eq? (car $0) SPACE)) (lam (car $0)) (lam (cdr $0))))",
    "(lam (unfold $0 (lam (char-eq? (car $0) SPACE)) (lam (car $0)) (lam (cdr (prev_dc_inv_2 $0 $0)))))"
]