[
    "(lam (app (app cons (app car $0)) (app (app cons '-') empty)))",
    "(lam (app (app cons (app (app index 0) $0)) (app (app cons '-') empty)))",
    "(lam (app (app (app fold $0) $0) (lam (lam (app (app (app if (app (app char-eq? ',') $1)) empty) (app (app cons $1) $0))))))",
    "(lam (lam (app (app (app fold $1) $0) (lam (lam (app (app cons $1) $0))))))",
    "(lam (lam (app (app (app fold $1) (app (app cons (app (app (app fold $0) ',') (lam (lam LPAREN)))) $0)) (lam (lam (app (app cons $1) $0))))))",
    "(lam (lam (app (app (app fold $1) (app (app cons LPAREN) $0)) (lam (lam (app (app cons $1) $0))))))",
    "(lam (lam (app (app (app fold $1) (app (app map (lam $0)) $0)) (lam (lam (app (app cons $1) $0))))))",
    "(lam (app (app map (lam (app (app (app if (app (app char-eq? $0) ',')) '.') $0))) $0))",
    "(lam (app (app map (lam (app (app (app if (app (app char-eq? ',') $0)) '.') $0))) $0))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app (app + 1) (app (app + 1) (app (app + 1) 1))))))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app (app + 1) (app (app + 1) (app (app (app fold (app cdr $0)) (app (app + 1) 1)) (lam (lam $0))))))))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app (app - (app length (app cdr $0))) 1))))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app (app (app fold (app cdr $0)) 0) (lam (lam (app (app + (app (app (app if (app (app char-eq? ',') $1)) 0) $0)) 1)))))))",
    "(lam (app (app map (lam (app (app index $0) $1))) (app range (app length (app cdr (app cdr $0))))))"
]