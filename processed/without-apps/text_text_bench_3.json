[
    "(lam (cons (car $0) (cons '-' empty)))",
    "(lam (cons (car $0) (cons SPACE empty)))",
    "(lam (cons (car $0) (map (lam '-') (range 1))))",
    "(lam (cons (car $0) (map (lam SPACE) (range 1))))",
    "(lam (cons LPAREN (prev_dc_inv_0 (cons RPAREN empty) $0)))",
    "(lam (fold $0 $0 (lam (lam (cons $1 (if (char-eq? '.' (car $0)) empty $0))))))",
    "(lam (lam (prev_dc_inv_0 $0 $1)))",
    "(lam (lam (prev_dc_inv_0 $0 (map (lam $0) $1))))",
    "(lam (lam (prev_dc_inv_0 (cons ',' $0) $1)))",
    "(lam (lam (prev_dc_inv_0 (cons '.' (cons '.' $0)) $1)))",
    "(lam (lam (prev_dc_inv_0 (cons '.' (cons '.' $0)) (map (lam $0) $1))))",
    "(lam (lam (prev_dc_inv_0 (cons LPAREN $0) $1)))",
    "(lam (lam (prev_dc_inv_0 (cons LPAREN $0) (map (lam $0) $1))))",
    "(lam (lam (prev_dc_inv_0 (cons LPAREN (cons ',' $0)) $1)))",
    "(lam (lam (prev_dc_inv_0 (cons LPAREN (cons ',' (map (lam $0) $0))) $1)))",
    "(lam (lam (prev_dc_inv_0 (map (lam $0) (cons ',' $0)) $1)))",
    "(lam (map (lam $0) (prev_dc_inv_1 $0)))",
    "(lam (map (lam (if (char-eq? $0 LPAREN) RPAREN $0)) $0))",
    "(lam (map (lam (if (char-eq? $0 SPACE) LPAREN $0)) $0))",
    "(lam (map (lam (if (char-eq? LPAREN $0) RPAREN $0)) $0))",
    "(lam (map (lam (if (char-eq? SPACE $0) LPAREN $0)) $0))",
    "(lam (prev_dc_inv_0 $0 STRING))",
    "(lam (prev_dc_inv_0 $0 STRING))",
    "(lam (prev_dc_inv_0 (cons RPAREN empty) (cons LPAREN $0)))",
    "(lam (prev_dc_inv_0 (map (lam $0) $0) STRING))",
    "(lam (prev_dc_inv_0 (map (lam $0) $0) STRING))",
    "(lam (prev_dc_inv_1 $0))",
    "(lam (prev_dc_inv_1 $0))",
    "(lam (prev_dc_inv_1 $0))",
    "(lam (prev_dc_inv_1 (map (lam $0) $0)))",
    "(lam (prev_dc_inv_1 (map (lam $0) $0)))",
    "(lam (unfold $0 (lam (char-eq? '.' (car $0))) (lam (car $0)) (lam (cdr $0))))"
]