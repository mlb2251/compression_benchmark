Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 198845
Constructed version spaces and coalesced candidates in 4.64195m.
Timing point -1 right before normalizing: 5.01436m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 5.01439m.
Timing Comparison Point A (vspace+beam) (millis): 300863
Rewrote topK in 2.64269m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 2.64269m.
sanity check for timing comparison, should be same as comparison point: 7.65709m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 459425
Initial score: -523.055625
Initial language score: 0.000000
Initial joint score: -523.055625 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.17385s.
Best MDL score: -501.032307 with (lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0)))))))
Scored candidates with language and grammar in 1.01735s.
Best joint score: -501.032307 with (lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0)))))))
Timing point 3 (all scoring): 2.2026s.
Improved score to -501.032307 (dScore=22.023318) w/ new primitive
	#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) : tlength -> int -> tangle -> turtle -> turtle
rewrote all of the frontiers in 2.11434m.
Timing point 4 (rewrite final frontiers): 2.11434m.
Completed one step of memory consolidation in 9.80838m.
New primitive is used 17 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL 5 logo_epsA (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL logo_IFTY (logo_DIVA logo_UA 3) $0)))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 7 (logo_DIVA logo_UA 7) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_DIVL logo_UL 2) 8 (logo_DIVA logo_UA 8) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 4) 6 (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 4) 9 (logo_DIVA (logo_MULA logo_UA 4) 9) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL logo_IFTY logo_epsA (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL logo_IFTY (logo_DIVA logo_epsA 2) $0)))
  (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 8) (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL logo_IFTY logo_epsA $0)))
  (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL 6 logo_epsA $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 3) logo_IFTY logo_epsA $0))
  (lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 4) logo_IFTY logo_epsA $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 5) logo_IFTY logo_epsA $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 6) logo_IFTY (logo_SUBA logo_UA logo_epsA) $0))
  (lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 6) logo_IFTY logo_epsA $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 3) logo_IFTY logo_epsA (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 3) logo_IFTY (logo_SUBA logo_UA logo_epsA) $0)))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 4 (logo_DIVA logo_UA 4) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 3) 4 (logo_DIVA logo_UA 4) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL $1) 4 (logo_DIVA logo_UA 4) $0))) $0))
Total number of candidates: 86249
Constructed version spaces and coalesced candidates in 4.27695m.
Timing point -1 right before normalizing: 4.5936m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 4.59363m.
Timing Comparison Point A (vspace+beam) (millis): 275617
Rewrote topK in 2.61395m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 2.61396m.
sanity check for timing comparison, should be same as comparison point: 7.20759m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 432455
Initial score: -500.765474
Initial language score: 0.000000
Initial joint score: -500.765474 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.12998s.
Best MDL score: -485.854720 with (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY))
Scored candidates with language and grammar in 1.07955s.
Best joint score: -485.854720 with (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY))
Timing point 3 (all scoring): 2.22878s.
Improved score to -485.854720 (dScore=14.910754) w/ new primitive
	#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) : int -> tangle -> turtle -> turtle
rewrote all of the frontiers in 2.02749m.
Timing point 4 (rewrite final frontiers): 2.0275m.
Completed one step of memory consolidation in 9.27234m.
New primitive is used 6 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 3 logo_epsA $0))
  (lambda (logo_forLoop 6 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 4 logo_epsA $0))) $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 5 logo_epsA $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 6 (logo_SUBA logo_UA logo_epsA) $0))
  (lambda (logo_forLoop 6 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 6 logo_epsA $0))) $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 3 logo_epsA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 3 (logo_SUBA logo_UA logo_epsA) $0)))
Total number of candidates: 59280
Constructed version spaces and coalesced candidates in 4.1276m.
Timing point -1 right before normalizing: 4.46535m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 4.4654m.
Timing Comparison Point A (vspace+beam) (millis): 267924
Rewrote topK in 2.60651m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 2.60651m.
sanity check for timing comparison, should be same as comparison point: 7.07192m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 424315
Initial score: -485.634936
Initial language score: 0.000000
Initial joint score: -485.634936 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 930.777ms.
Best MDL score: -471.929373 with (logo_DIVA logo_UA)
Scored candidates with language and grammar in 905.216ms.
Best joint score: -471.929373 with (logo_DIVA logo_UA)
Timing point 3 (all scoring): 1.84379s.
Improved score to -471.929373 (dScore=13.705563) w/ new primitive
	#(logo_DIVA logo_UA) : int -> tangle
rewrote all of the frontiers in 1.98641m.
Timing point 4 (rewrite final frontiers): 1.98641m.
Completed one step of memory consolidation in 9.08914m.
New primitive is used 13 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL 5 logo_epsA (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL logo_IFTY (#(logo_DIVA logo_UA) 3) $0)))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 8 (#(logo_DIVA logo_UA) 7) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_DIVL logo_UL 2) 8 (#(logo_DIVA logo_UA) 8) $0))
  (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 8) (logo_FWRT (logo_MULL logo_UL 3) logo_epsA $0)))
  (lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT (logo_MULL logo_UL $1) (#(logo_DIVA logo_UA) 4) $0))) $0))
  (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (#(logo_DIVA logo_UA) 8) $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 4) 9 (logo_MULA (#(logo_DIVA logo_UA) 9) 4) $0))
  (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 8) (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL logo_IFTY logo_epsA $0)))
  (lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) (#(logo_DIVA logo_UA) 4) $0)) (logo_FWRT logo_UL (#(logo_DIVA logo_UA) 4) $0)))) $0))
  (lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 7) (logo_GETSET (lambda (logo_FWRT logo_UL logo_UA $0)) $0)))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 4 (#(logo_DIVA logo_UA) 4) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 3) 4 (#(logo_DIVA logo_UA) 4) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL $1) 4 (#(logo_DIVA logo_UA) 4) $0))) $0))
Total number of candidates: 45178
Constructed version spaces and coalesced candidates in 2.38861m.
Timing point -1 right before normalizing: 2.56078m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.56082m.
Timing Comparison Point A (vspace+beam) (millis): 153649
Rewrote topK in 1.48997m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.48997m.
sanity check for timing comparison, should be same as comparison point: 4.05079m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 243047
Initial score: -471.800635
Initial language score: 0.000000
Initial joint score: -471.800635 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 932.767ms.
Best MDL score: -472.390665 with (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $1 $0 (#(logo_DIVA logo_UA) $0))))
No improvement possible with MDL.
Scored candidates with language and grammar in 918.644ms.
Best joint score: -472.390665 with (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $1 $0 (#(logo_DIVA logo_UA) $0))))
Timing point 3 (all scoring): 1.85896s.
No improvement possible with joint score.
Completed one step of memory consolidation in 4.08179m.
completed ocaml compression in 32.2518m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/logo_logo_batch_50_1h_ellisk_2019-03-23T14.13.04/bench000_it0.json"
	User time (seconds): 231.48
	System time (seconds): 8.33
	Percent of CPU this job got: 12%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 32:15.33
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 6177316
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 8746563
	Voluntary context switches: 851
	Involuntary context switches: 23957
	Swaps: 0
	File system inputs: 0
	File system outputs: 40
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
