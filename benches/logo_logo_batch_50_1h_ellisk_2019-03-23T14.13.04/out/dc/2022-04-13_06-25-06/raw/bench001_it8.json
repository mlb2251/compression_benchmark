{
  "DSL": {
    "logVariable": -0.76954963482273,
    "productions": [
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) logo_IFTY (logo_MULA logo_epsA $0) logo_epsL))",
        "logProbability": -2.1277224683190537
      },
      {
        "expression": "#(lambda (logo_FWRT logo_UL logo_UA $0))",
        "logProbability": -1.9655891984172218
      },
      {
        "expression":
          "#(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) $0)))",
        "logProbability": -2.097865657314672
      },
      {
        "expression":
          "#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA)",
        "logProbability": -1.9606195882597142
      },
      {
        "expression":
          "#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA))",
        "logProbability": -2.0134585091157406
      },
      {
        "expression":
          "#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0)))",
        "logProbability": -2.069308836967938
      },
      {
        "expression":
          "#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA)))",
        "logProbability": -2.068841019748133
      },
      {
        "expression": "#(#(logo_DIVA logo_UA) 4)",
        "logProbability": -0.5547089314276827
      },
      {
        "expression":
          "#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0)))))))",
        "logProbability": -2.127624950438521
      },
      {
        "expression":
          "#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2))",
        "logProbability": -2.097794684617618
      },
      {
        "expression": "#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)))",
        "logProbability": -2.0128232254801417
      },
      {
        "expression":
          "#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0))))))))",
        "logProbability": -1.9606196762306585
      },
      { "expression": "logo_epsA", "logProbability": -0.7354437107240641 },
      { "expression": "logo_UL", "logProbability": -0.616418173394786 },
      { "expression": "logo_MULL", "logProbability": -0.932917306235582 },
      { "expression": "4", "logProbability": -0.9738065965944025 },
      { "expression": "logo_epsL", "logProbability": -0.8353148069615859 },
      { "expression": "3", "logProbability": -0.9867303876397959 },
      { "expression": "logo_UA", "logProbability": -0.8806271909526906 },
      { "expression": "logo_MULA", "logProbability": -0.9585039629592704 },
      { "expression": "logo_SUBA", "logProbability": -0.9916343113104538 },
      { "expression": "7", "logProbability": -1.1143419492634 },
      { "expression": "5", "logProbability": -0.9625929035005041 },
      { "expression": "logo_ZA", "logProbability": -1.007101192783188 },
      { "expression": "8", "logProbability": -1.2775784956458192 },
      { "expression": "logo_DIVA", "logProbability": -1.021797328968101 },
      { "expression": "logo_ADDA", "logProbability": -1.020503302828295 },
      { "expression": "logo_ZL", "logProbability": -0.9471327943074925 },
      { "expression": "6", "logProbability": -1.2028151051357692 },
      { "expression": "2", "logProbability": -1.043332358408703 },
      { "expression": "9", "logProbability": -1.405774268628817 },
      { "expression": "logo_IFTY", "logProbability": -1.4384762276391871 },
      { "expression": "logo_DIVL", "logProbability": -1.1894978873213424 },
      { "expression": "0", "logProbability": -1.4379486432708166 },
      { "expression": "1", "logProbability": -1.4385640914518079 },
      { "expression": "logo_FWRT", "logProbability": -1.821726051956876 },
      { "expression": "logo_forLoop", "logProbability": -1.839991469596081 },
      { "expression": "logo_GETSET", "logProbability": -2.040525550105802 },
      { "expression": "logo_PT", "logProbability": -2.1901825093891496 },
      {
        "expression": "#(logo_DIVA logo_UA)",
        "logProbability": -0.5729289622122313
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY))",
        "logProbability": -1.6493756978542176
      },
      {
        "expression":
          "#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0)))))))",
        "logProbability": -1.9825890920485536
      },
      {
        "expression":
          "#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0)))))",
        "logProbability": -1.8167799174438262
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 8) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL (#(logo_DIVA logo_UA) 3) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL 5 logo_epsA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL (#(logo_DIVA logo_UA) 3) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL 3) #(#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 3) 4 #(#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL (#(logo_DIVA logo_UA) 5) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL (logo_MULA logo_epsA 8) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_epsL (#(logo_DIVA logo_UA) 5) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL 2) (#(logo_DIVA logo_UA) 6) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 5) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL 2) (#(logo_DIVA logo_UA) 6) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL (#(logo_DIVA logo_UA) 7) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL (logo_DIVA logo_UA 7) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_DIVL logo_UL 2) (#(logo_DIVA logo_UA) 8) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_DIVL logo_UL 2) (logo_MULA logo_epsA 5) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) (logo_FWRT logo_UL logo_epsA $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 2 #(#(logo_DIVA logo_UA) 4) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_UL logo_ZA (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 2 #(#(logo_DIVA logo_UA) 4) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL 2 #(#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL 2 (logo_DIVA logo_UA 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (logo_FWRT logo_UL logo_epsA $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_epsL (#(logo_DIVA logo_UA) 3) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL #(#(logo_DIVA logo_UA) 4) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 3) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL #(#(logo_DIVA logo_UA) 4) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 5) (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 4 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL 8 logo_epsA (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 6) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) 7 #(#(logo_DIVA logo_UA) 4) logo_UL $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT (logo_MULL logo_UL 0) (#(logo_DIVA logo_UA) 6) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) 7 #(#(logo_DIVA logo_UA) 4) logo_UL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 7) (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 4 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 7) (#(lambda (logo_FWRT logo_UL logo_UA $0)) (logo_GETSET (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 4 $0)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 8) (logo_FWRT (logo_MULL logo_UL 3) logo_epsA $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL 5 logo_epsA (logo_FWRT (logo_MULL logo_UL 3) logo_epsA $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) 7 #(#(logo_DIVA logo_UA) 4) logo_UL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT (logo_MULL logo_UL $1) logo_epsA (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_ZL $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) 8 #(#(logo_DIVA logo_UA) 4) logo_UL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT (logo_MULL logo_UL $1) logo_epsA (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_ZL $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) logo_IFTY (logo_MULA logo_epsA $0) logo_epsL)) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) logo_IFTY (logo_ADDA (#(logo_DIVA logo_UA) logo_IFTY) logo_epsA) logo_epsL $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) logo_IFTY (#(logo_DIVA logo_UA) 8) logo_epsL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) logo_IFTY (logo_MULA logo_epsA $0) logo_epsL)) 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 2) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $3 $0))))))) logo_IFTY (logo_MULA logo_epsA $0) logo_epsL)) 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL 4) (logo_MULA (#(logo_DIVA logo_UA) 5) 7) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL 4) (logo_MULA (#(logo_DIVA logo_UA) 5) 2) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL 4) (logo_MULA (#(logo_DIVA logo_UA) 9) 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL 4) (logo_ADDA (#(logo_DIVA logo_UA) 3) (#(logo_DIVA logo_UA) 9)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA #(#(logo_DIVA logo_UA) 4) logo_IFTY) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL logo_epsA (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL logo_epsA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA #(#(logo_DIVA logo_UA) 4) logo_IFTY) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) $0))) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) $0))) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) $0))) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) $0))) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) $0))) 4 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) $0))) 7 3 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_FWRT logo_ZL #(#(logo_DIVA logo_UA) 4) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_DIVA logo_epsA 2)) $0))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 2 #(#(logo_DIVA logo_UA) 4) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL logo_epsA $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 2 #(#(logo_DIVA logo_UA) 4) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL (#(logo_DIVA logo_UA) 8) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 3 #(#(logo_DIVA logo_UA) 4) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL logo_epsA (logo_FWRT logo_UL logo_epsA $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 3 #(#(logo_DIVA logo_UA) 4) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL logo_epsA (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 8) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL 5 logo_epsA (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL 2) (logo_SUBA logo_ZA logo_epsA) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 3) logo_IFTY logo_epsA $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_MULL logo_epsL 3) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_MULL logo_epsL 3) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_ZL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL 4) (logo_SUBA logo_ZA logo_epsA) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_MULL logo_epsL 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_DIVL logo_UL 5) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_DIVL logo_UL 4) logo_epsA $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_MULL logo_epsL 5) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_DIVL logo_UL 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL 6) (logo_SUBA logo_ZA logo_epsA) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_MULL logo_epsL 6) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_MULL (logo_MULL logo_epsL 2) 3) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_MULL logo_epsL $2) $0)) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_MULL logo_epsL $2) $0)) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_MULL logo_epsL 4) $0)) 7 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) (logo_DIVL logo_UL 5) $0)) 7 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL (#(logo_DIVA logo_UA) 3) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL (#(logo_DIVA logo_UA) 3) (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_SUBA logo_UA logo_epsA) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL (logo_SUBA logo_ZA logo_epsA) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 2 (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL 3) (logo_SUBA logo_ZA logo_epsA) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT logo_UL logo_epsA $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (logo_FWRT logo_UL logo_epsA $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (logo_FWRT (logo_DIVL logo_UL 2) logo_UA $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_DIVL logo_epsL 2) logo_UA $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) (logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT logo_UL logo_epsA $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_FWRT logo_UL logo_epsA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_UL logo_UA $0)) (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0)) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0)) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) #(#(logo_DIVA logo_UA) 4) $0)) (logo_FWRT logo_UL #(#(logo_DIVA logo_UA) 4) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_GETSET (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $3) #(#(logo_DIVA logo_UA) 4) $0)) (logo_FWRT logo_UL logo_epsA $0))) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0)) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0)) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL #(#(logo_DIVA logo_UA) 4) $0))) 4 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL #(#(logo_DIVA logo_UA) 4) $0))) 5 3 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (logo_FWRT logo_UL logo_epsA $0))) 5 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (logo_FWRT logo_UL logo_epsA $0))) 8 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) 7 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) 5 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_DIVL logo_UL 4) 4 logo_UA (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0))) 7 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 4) 5 logo_UA (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0))) 7 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 4) 5 logo_UA (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0))) 8 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0))) 7 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(logo_PT (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_UA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $2 7 logo_epsA $0))))) logo_epsL $0))) 8 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) $2) (logo_GETSET $4 $0)))))))) (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0)) 7 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_epsL logo_epsA) $0)) (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 6) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL (#(logo_DIVA logo_UA) 2) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL (#(logo_DIVA logo_UA) 7) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_ZL (#(logo_DIVA logo_UA) 7) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL (#(logo_DIVA logo_UA) 2) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL #(#(logo_DIVA logo_UA) 4) (#(lambda (logo_FWRT logo_UL logo_UA $0)) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL #(#(logo_DIVA logo_UA) 4) (logo_FWRT logo_UL logo_ZA $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) logo_UL #(#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 4 #(#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL 2) #(#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 2) 4 #(#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL 3) #(#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 3) 4 #(#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL $1) #(#(logo_DIVA logo_UA) 4) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) $0 logo_IFTY)) (logo_MULL logo_UL $1) (logo_DIVA logo_UA 4) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}