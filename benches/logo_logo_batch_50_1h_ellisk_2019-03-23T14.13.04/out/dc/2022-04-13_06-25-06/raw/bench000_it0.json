{
  "DSL": {
    "logVariable": -0.5575918273197846,
    "productions": [
      {
        "expression": "#(logo_DIVA logo_UA)",
        "logProbability": -0.46496317853620495
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY))",
        "logProbability": -1.0250287261872124
      },
      {
        "expression":
          "#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0)))))))",
        "logProbability": -0.8751675185125714
      },
      { "expression": "logo_epsA", "logProbability": -0.45174177577426944 },
      { "expression": "logo_UL", "logProbability": -0.3438673693348133 },
      { "expression": "logo_MULL", "logProbability": -0.4905670045295927 },
      { "expression": "4", "logProbability": -0.6778830827664368 },
      { "expression": "logo_epsL", "logProbability": -0.6004674489879944 },
      { "expression": "3", "logProbability": -0.8470254308181309 },
      { "expression": "logo_UA", "logProbability": -0.7335243344978082 },
      { "expression": "logo_MULA", "logProbability": -0.7763026275923033 },
      { "expression": "logo_SUBA", "logProbability": -0.7746820996772015 },
      { "expression": "7", "logProbability": -0.8621169267742452 },
      { "expression": "5", "logProbability": -0.8692635178878056 },
      { "expression": "logo_ZA", "logProbability": -0.7782830179894535 },
      { "expression": "8", "logProbability": -0.8387688839046334 },
      { "expression": "logo_DIVA", "logProbability": -0.7922103112231933 },
      { "expression": "logo_ADDA", "logProbability": -0.8064307979917817 },
      { "expression": "logo_ZL", "logProbability": -0.5729035951763044 },
      { "expression": "6", "logProbability": -0.8662159379243497 },
      { "expression": "2", "logProbability": -0.9648084664745142 },
      { "expression": "9", "logProbability": -0.9645114057640818 },
      { "expression": "logo_IFTY", "logProbability": -0.873769510424625 },
      { "expression": "logo_DIVL", "logProbability": -0.6939883169195111 },
      { "expression": "0", "logProbability": -1.0293469876120853 },
      { "expression": "1", "logProbability": -1.0293469876120853 },
      { "expression": "logo_FWRT", "logProbability": -0.9445021300342034 },
      { "expression": "logo_forLoop", "logProbability": -0.9980278759344854 },
      { "expression": "logo_GETSET", "logProbability": -1.2008771247335703 },
      { "expression": "logo_PT", "logProbability": -1.2016268311757248 }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL 5 logo_epsA (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL logo_IFTY (#(logo_DIVA logo_UA) 3) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL 5 (logo_MULA logo_epsA 9) (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL logo_IFTY (#(logo_DIVA logo_UA) 3) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 7 (#(logo_DIVA logo_UA) 7) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 8 (#(logo_DIVA logo_UA) 7) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_DIVL logo_UL 2) 8 (#(logo_DIVA logo_UA) 8) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_DIVL logo_UL 2) 8 (logo_MULA logo_epsA 5) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (logo_FWRT logo_UL logo_UA $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (logo_FWRT logo_UL logo_ZA $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 8) (logo_FWRT (logo_MULL logo_UL 3) logo_ZA $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 8) (logo_FWRT (logo_MULL logo_UL 3) logo_epsA $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT (logo_MULL logo_UL $1) (#(logo_DIVA logo_UA) 4) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT (logo_MULL logo_UL $1) (#(logo_DIVA logo_UA) 4) $0))) (logo_GETSET (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (#(logo_DIVA logo_UA) 8) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA 5) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 4) 5 (logo_MULA (logo_ADDA logo_epsA logo_epsA) 8) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 4) 6 (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 4) 9 (logo_DIVA (logo_MULA logo_UA 4) 9) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 4) 9 (logo_MULA (#(logo_DIVA logo_UA) 9) 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_ZL logo_IFTY logo_epsA (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL logo_IFTY (logo_DIVA logo_epsA 2) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 8) (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL logo_IFTY logo_epsA $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (logo_MULA logo_epsA 5) (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL logo_IFTY logo_epsA $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT logo_epsL logo_epsA (logo_FWRT logo_epsL logo_epsA $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_epsL 6 logo_epsA $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 3 logo_epsA $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 3 logo_epsA (logo_GETSET (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 4 logo_epsA $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_DIVL logo_UL 5) 7 logo_epsA $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_DIVL logo_UL 4) logo_IFTY logo_epsA $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 5 logo_epsA $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 6 (logo_SUBA logo_UA logo_epsA) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 6 (logo_SUBA logo_ZA logo_epsA) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 6 logo_epsA $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL 6) 6 logo_epsA $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 3 logo_epsA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_epsL $0) logo_IFTY)) 3 (logo_SUBA logo_UA logo_epsA) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) (#(logo_DIVA logo_UA) 4) $0)) (logo_FWRT logo_UL (#(logo_DIVA logo_UA) 4) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) (#(logo_DIVA logo_UA) 4) $0)) (logo_GETSET (lambda (logo_FWRT logo_UL (#(logo_DIVA logo_UA) 4) $0)) (logo_FWRT logo_UL (#(logo_DIVA logo_UA) 4) $0))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 7) (logo_GETSET (lambda (logo_FWRT logo_UL logo_UA $0)) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT logo_ZL (#(logo_DIVA logo_UA) 7) (logo_GETSET (lambda (logo_FWRT logo_UL logo_ZA $0)) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 4 (#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) logo_UL 5 (#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 3) 4 (#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL 3) 5 (#(logo_DIVA logo_UA) 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL $1) 4 (#(logo_DIVA logo_UA) 4) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT $4 $2 $0))))))) (logo_MULL logo_UL $1) 8 (#(logo_DIVA logo_UA) 4) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}