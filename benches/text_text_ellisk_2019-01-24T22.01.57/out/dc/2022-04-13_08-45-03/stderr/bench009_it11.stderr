Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 56961
Constructed version spaces and coalesced candidates in 1.23514m.
Timing point -1 right before normalizing: 1.37794m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.37798m.
Timing Comparison Point A (vspace+beam) (millis): 82678
Rewrote topK in 1.25809m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.2581m.
sanity check for timing comparison, should be same as comparison point: 2.63608m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 158164
Initial score: -1188.170843
Initial language score: 0.000000
Initial joint score: -1188.170843 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 6.38991s.
Best MDL score: -1187.101207 with (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1)))
Scored candidates with language and grammar in 5.86886s.
Best joint score: -1187.101207 with (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1)))
Timing point 3 (all scoring): 12.2938s.
Improved score to -1187.101207 (dScore=1.069636) w/ new primitive
	#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1)))) : list(t0) -> t0 -> list(t0) -> list(t0)
rewrote all of the frontiers in 51.4941s.
Timing point 4 (rewrite final frontiers): 51.4941s.
Completed one step of memory consolidation in 3.69975m.
New primitive is used 5 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1)))) $0 '.' $1)))
  (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1)))) $0 ',' $1)))
  (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1)))) $0 SPACE $1)))
  (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1)))) $0 LPAREN $1)))
  (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1)))) $0 RPAREN $1)))
Total number of candidates: 56761
Constructed version spaces and coalesced candidates in 1.24613m.
Timing point -1 right before normalizing: 1.37952m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.37975m.
Timing Comparison Point A (vspace+beam) (millis): 82785
Rewrote topK in 1.23922m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.23922m.
sanity check for timing comparison, should be same as comparison point: 2.61897m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 157138
Initial score: -1187.025652
Initial language score: 0.000000
Initial joint score: -1187.025652 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 6.16228s.
Best MDL score: -1190.348320 with (lambda (lambda (#(lambda (lambda (cons (car $0) (cons '.' (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.'))))) (#(lambda (lambda (fold (#(lambda (lambda (unfold $1 (lambda (char-eq? (car $0) $1)) (lambda (car $0)) (lambda (cdr $0))))) $1 $0) (cdr $1) (lambda (lambda (cdr $0)))))) $1 $0) $1)))
No improvement possible with MDL.
Scored candidates with language and grammar in 6.08235s.
Best joint score: -1190.348320 with (lambda (lambda (#(lambda (lambda (cons (car $0) (cons '.' (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.'))))) (#(lambda (lambda (fold (#(lambda (lambda (unfold $1 (lambda (char-eq? (car $0) $1)) (lambda (car $0)) (lambda (cdr $0))))) $1 $0) (cdr $1) (lambda (lambda (cdr $0)))))) $1 $0) $1)))
Timing point 3 (all scoring): 12.3006s.
No improvement possible with joint score.
Completed one step of memory consolidation in 2.824m.
completed ocaml compression in 6.524m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-24T22.01.57/bench009_it11.json"
	User time (seconds): 44.12
	System time (seconds): 0.99
	Percent of CPU this job got: 11%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 6:31.50
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 1132516
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1087822
	Voluntary context switches: 313
	Involuntary context switches: 4580
	Swaps: 0
	File system inputs: 0
	File system outputs: 200
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
