{
  "DSL": {
    "logVariable": -0.5188413435158701,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "logProbability": -2.6557970052679285
      },
      {
        "expression": "#(lambda (/. 1. $0))",
        "logProbability": -2.3735063679731283
      },
      {
        "expression": "#(lambda (map (lambda (*. $1 $0))))",
        "logProbability": -0.7977207440482861
      },
      {
        "expression": "#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1))))",
        "logProbability": -2.5071194638059353
      },
      {
        "expression": "#(lambda (fold $0 0. (lambda (lambda (+. $0 $1)))))",
        "logProbability": -2.6557519707339043
      },
      {
        "expression":
          "#(lambda (lambda (/. $0 (fold $1 0. (lambda (lambda (+. (*. $1 $1) $0)))))))",
        "logProbability": -2.575763358027465
      },
      { "expression": "zip", "logProbability": -1.035907151711796 },
      { "expression": "map", "logProbability": -1.129093904533979 },
      { "expression": "cdr", "logProbability": -1.131929376894365 },
      { "expression": "empty", "logProbability": -1.1319298209998458 },
      { "expression": "cons", "logProbability": -1.1319298209998458 },
      { "expression": "*.", "logProbability": -1.5559312680830768 },
      { "expression": "/.", "logProbability": -2.055303955198261 },
      { "expression": "+.", "logProbability": -2.1912083455655886 },
      { "expression": "pi", "logProbability": -2.43274041777425 },
      { "expression": "-.", "logProbability": -2.500728932921882 },
      { "expression": "0.", "logProbability": -2.6531743520992346 },
      { "expression": "1.", "logProbability": -2.749310418615136 },
      { "expression": "power", "logProbability": -2.837593279546115 },
      { "expression": "fold", "logProbability": -2.858728329394132 },
      { "expression": "car", "logProbability": -2.95409328241869 }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (power $1 (+. 1. 1.)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $1 (+. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (+. 0. $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (-. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (power $0 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $1 (+. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (+. 0. $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (-. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (power $0 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $1 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (power $1 (+. 1. 1.)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (/. (+. $0 $0) (-. pi (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (+. $0 $0) (-. pi (/. (/. $0 $0) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (+. $0 $0) (-. pi (/. (/. $0 pi) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1. 1.)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (/. (*. $0 $0) (+. 1. 1.)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $1 $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (/. $1 (+. 1. 1.)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (/. $0 (+. 1. 1.)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $0 $1) (+. 1. 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) (+. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (/. (#(lambda (/. 1. $0)) $0) 1.))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (#(lambda (/. 1. $0)) 1.) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (/. $0 (+. 1. 1.)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (/. $0 (/. (+. $0 $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (*. $0 $0) (+. $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (-. $0 0.) (+. 1. 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (/. $0 (+. 1. 1.)) 1.))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0. (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0. (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0. (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0. (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      {
                        "constructor": "->",
                        "arguments": [
                          { "constructor": "real", "arguments": [] },
                          { "constructor": "real", "arguments": [] }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $2 $1)) $4))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $1 $2)) $4))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. 0. (-. (*. $1 $2) (*. $0 $3)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (power (*. $0 $1) 1.)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (/. $1 (#(lambda (lambda (/. $0 (fold $1 0. (lambda (lambda (+. (*. $1 $1) $0))))))) $0 (+. 1. 1.)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (*. $1 (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) (+. 1. 1.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $1 (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (*. $1 $1) (#(lambda (lambda (/. $0 (fold $1 0. (lambda (lambda (+. (*. $1 $1) $0))))))) $0 (+. $1 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0)))) (/. (+. $1 $1) (*. $1 $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1. 1.)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (/. (*. $0 $0) (+. 1. 1.)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $1 $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $1 (+. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (+. 0. $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (-. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (power $0 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (power (*. $0 $1) 1.)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (/. (+. pi pi) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (/. (+. 1. 1.) (/. $0 pi)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (-. (+. pi pi) 0.) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (-. pi (-. 0. pi)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (/. (+. pi pi) $0) 1.))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (/. $2 (/. (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0)))) $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (/. $0 (fold $1 0. (lambda (lambda (+. (*. $1 $1) $0))))))) $0 (*. $1 $2)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (/. $0 (fold $1 0. (lambda (lambda (+. (*. $1 $1) $0))))))) $0 (*. $2 $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (/. $2 (/. (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0)))) $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (/. $0 (fold $1 0. (lambda (lambda (+. (*. $1 $1) $0))))))) $0 (*. $1 $2)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (/. $0 (fold $1 0. (lambda (lambda (+. (*. $1 $1) $0))))))) $0 (*. $2 $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $1 (-. 0. $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. (-. 0. $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 (-. 0. $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. (-. 0. $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (-. 0. (*. $0 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (+. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (-. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (+. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (-. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (/. (#(lambda (/. 1. $0)) $0) 1.))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (#(lambda (/. 1. $0)) 1.) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (/. (#(lambda (/. 1. $0)) $0) 1.))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. (#(lambda (/. 1. $0)) 1.) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $1 (+. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (+. 0. $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (-. $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (power $0 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (fold $0 0. (lambda (lambda (+. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0) 1.))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (fold $0 0. (lambda (lambda (+. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (fold $0 0. (lambda (lambda (+. $1 $0)))) 1.))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (fold $0 0. (lambda (lambda (+. $0 (#(lambda (/. 1. $0)) $1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (fold $0 0. (lambda (lambda (+. (#(lambda (/. 1. $0)) $1) $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (fold $0 0. (lambda (lambda (/. (+. (*. $0 $1) 1.) $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (fold $0 0. (lambda (lambda (/. (+. (*. $1 $0) 1.) $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (fold $0 0. (lambda (lambda (+. (/. $1 (*. $1 $1)) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (*. $0 (*. $0 pi)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. $0 (*. pi $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 $0) pi))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 pi) $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. pi $0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1. 1.)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1. 1.)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (+. (power $1 (+. 1. 1.)) (*. $0 $0))))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}