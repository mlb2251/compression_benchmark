Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 18172
Constructed version spaces and coalesced candidates in 2.06259m.
Timing point -1 right before normalizing: 2.13156m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.13164m.
Timing Comparison Point A (vspace+beam) (millis): 127898
Rewrote topK in 39.5944s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 39.5949s.
sanity check for timing comparison, should be same as comparison point: 2.79156m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 167493
Initial score: -570.774340
Initial language score: 0.000000
Initial joint score: -570.774340 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.78954s.
Best MDL score: -566.540312 with (lambda (map (lambda (mod $0 (#(lambda (+ 1 (+ 1 $0))) $1)))))
Scored candidates with language and grammar in 1.57778s.
Best joint score: -566.540312 with (lambda (map (lambda (mod $0 (#(lambda (+ 1 (+ 1 $0))) $1)))))
Timing point 3 (all scoring): 3.3795s.
Improved score to -566.540312 (dScore=4.234028) w/ new primitive
	#(lambda (map (lambda (mod $0 (#(lambda (+ 1 (+ 1 $0))) $1))))) : int -> list(int) -> list(int)
rewrote all of the frontiers in 14.9557s.
Timing point 4 (rewrite final frontiers): 14.9559s.
Completed one step of memory consolidation in 3.0973m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (map (lambda (mod $0 (#(lambda (+ 1 (+ 1 $0))) $1))))) 0 $0))
  (lambda (#(lambda (map (lambda (mod $0 (#(lambda (+ 1 (+ 1 $0))) $1))))) (#(lambda (+ 1 (+ 1 $0))) 0) $0))
  (lambda (#(lambda (map (lambda (mod $0 (#(lambda (+ 1 (+ 1 $0))) $1))))) #(#(lambda (+ 1 (+ 1 $0))) 1) $0))
Total number of candidates: 17543
Constructed version spaces and coalesced candidates in 2.26474m.
Timing point -1 right before normalizing: 2.3461m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.34619m.
Timing Comparison Point A (vspace+beam) (millis): 140771
Rewrote topK in 36.3611s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 36.3617s.
sanity check for timing comparison, should be same as comparison point: 2.95223m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 177133
Initial score: -566.928448
Initial language score: 0.000000
Initial joint score: -566.928448 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.7722s.
Best MDL score: -563.539063 with (lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0))))))
Scored candidates with language and grammar in 1.58713s.
Best joint score: -563.539063 with (lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0))))))
Timing point 3 (all scoring): 3.37053s.
Improved score to -563.539063 (dScore=3.389385) w/ new primitive
	#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) : list(t0) -> list(t0) -> list(t0)
rewrote all of the frontiers in 14.3144s.
Timing point 4 (rewrite final frontiers): 14.3145s.
Completed one step of memory consolidation in 3.24711m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (cdr (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(#(lambda (+ 1 (+ 1 $0))) 1))))))
  (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (range 1)))
  (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (cons (#(lambda (+ 1 (+ 1 $0))) #(#(lambda (+ 1 (+ 1 $0))) 1)) empty)))
Total number of candidates: 15956
Constructed version spaces and coalesced candidates in 2.19804m.
Timing point -1 right before normalizing: 2.27037m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.2704m.
Timing Comparison Point A (vspace+beam) (millis): 136224
Rewrote topK in 32.4882s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 32.4888s.
sanity check for timing comparison, should be same as comparison point: 2.81188m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 168712
Initial score: -563.894593
Initial language score: 0.000000
Initial joint score: -563.894593 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.26389s.
Best MDL score: -562.022321 with (lambda (cdr (cdr $0)))
Scored candidates with language and grammar in 1.44178s.
Best joint score: -562.022321 with (lambda (cdr (cdr $0)))
Timing point 3 (all scoring): 2.7177s.
Improved score to -562.022321 (dScore=1.872272) w/ new primitive
	#(lambda (cdr (cdr $0))) : list(t0) -> list(t0)
rewrote all of the frontiers in 14.0562s.
Timing point 4 (rewrite final frontiers): 14.0562s.
Completed one step of memory consolidation in 3.09156m.
New primitive is used 5 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (#(lambda (cdr (cdr $0))) (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(#(lambda (+ 1 (+ 1 $0))) 1)))))
  (lambda (car (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))
  (lambda (cons (car $0) (cons (car (cdr $0)) (cons (car (#(lambda (cdr (cdr $0))) $0)) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))))
  (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (#(lambda (cdr (cdr $0))) $0) (#(lambda (+ 1 (+ 1 $0))) (#(lambda (+ 1 (+ 1 $0))) 0))))
  (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr (#(lambda (cdr (cdr $0))) $0)) #(#(lambda (+ 1 (+ 1 $0))) 1)))
Total number of candidates: 11678
Constructed version spaces and coalesced candidates in 20.1717s.
Timing point -1 right before normalizing: 22.3352s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 22.3378s.
Timing Comparison Point A (vspace+beam) (millis): 22337
Rewrote topK in 21.3208s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 21.3211s.
sanity check for timing comparison, should be same as comparison point: 43.6589s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 43658
Initial score: -562.329597
Initial language score: 0.000000
Initial joint score: -562.329597 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.71785s.
Best MDL score: -559.896426 with (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (#(lambda (+ 1 (+ 1 $0))) (#(lambda (+ 1 (+ 1 $0))) 0))))
Scored candidates with language and grammar in 1.35616s.
Best joint score: -559.896426 with (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (#(lambda (+ 1 (+ 1 $0))) (#(lambda (+ 1 (+ 1 $0))) 0))))
Timing point 3 (all scoring): 3.08876s.
Improved score to -559.896426 (dScore=2.433171) w/ new primitive
	#(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (#(lambda (+ 1 (+ 1 $0))) (#(lambda (+ 1 (+ 1 $0))) 0)))) : list(t0) -> list(t0)
rewrote all of the frontiers in 9.07915s.
Timing point 4 (rewrite final frontiers): 9.07919s.
Completed one step of memory consolidation in 55.8341s.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (#(lambda (+ 1 (+ 1 $0))) (#(lambda (+ 1 (+ 1 $0))) 0)))) $0))
  (lambda (#(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (#(lambda (+ 1 (+ 1 $0))) (#(lambda (+ 1 (+ 1 $0))) 0)))) (#(lambda (cdr (cdr $0))) $0)))
  (lambda (#(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (#(lambda (+ 1 (+ 1 $0))) (#(lambda (+ 1 (+ 1 $0))) 0)))) $0))
Total number of candidates: 10633
Constructed version spaces and coalesced candidates in 19.2147s.
Timing point -1 right before normalizing: 21.5086s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 21.511s.
Timing Comparison Point A (vspace+beam) (millis): 21511
Rewrote topK in 14.7612s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 14.7615s.
sanity check for timing comparison, should be same as comparison point: 36.2725s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 36272
Initial score: -560.277096
Initial language score: 0.000000
Initial joint score: -560.277096 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.47941s.
Best MDL score: -559.440713 with (lambda (cons (car $0)))
Scored candidates with language and grammar in 1.51593s.
Best joint score: -559.440713 with (lambda (cons (car $0)))
Timing point 3 (all scoring): 3.00673s.
Improved score to -559.440713 (dScore=0.836383) w/ new primitive
	#(lambda (cons (car $0))) : list(t0) -> list(t0) -> list(t0)
rewrote all of the frontiers in 7.79947s.
Timing point 4 (rewrite final frontiers): 7.79951s.
Completed one step of memory consolidation in 47.0853s.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (cons (car $0))) $0 $0))
  (lambda (#(lambda (cons (car $0))) $0 (#(lambda (cons (car $0))) (cdr $0) (#(lambda (cons (car $0))) (#(lambda (cdr (cdr $0))) $0) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))))
Total number of candidates: 10355
Constructed version spaces and coalesced candidates in 13.0643s.
Timing point -1 right before normalizing: 14.8671s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 14.8692s.
Timing Comparison Point A (vspace+beam) (millis): 14869
Rewrote topK in 16.5313s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 16.5321s.
sanity check for timing comparison, should be same as comparison point: 31.4013s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 31401
Initial score: -559.972226
Initial language score: 0.000000
Initial joint score: -559.972226 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.7758s.
Best MDL score: -563.671094 with (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty))))
No improvement possible with MDL.
Scored candidates with language and grammar in 1.42908s.
Best joint score: -563.671094 with (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty))))
Timing point 3 (all scoring): 3.21698s.
No improvement possible with joint score.
Completed one step of memory consolidation in 34.6191s.
completed ocaml compression in 11.7286m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/list_list_hard_test_ellisk_2019-02-15T11.39.19/bench002_it3.json"
	User time (seconds): 180.77
	System time (seconds): 9.47
	Percent of CPU this job got: 27%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 11:43.75
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 6778552
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 9870093
	Voluntary context switches: 853
	Involuntary context switches: 19386
	Swaps: 0
	File system inputs: 0
	File system outputs: 56
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
