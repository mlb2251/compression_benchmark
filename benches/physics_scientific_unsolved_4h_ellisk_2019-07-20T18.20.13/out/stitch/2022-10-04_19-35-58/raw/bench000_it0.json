{
  "cmd": "/scratch/mlbowers/proj/stitch/target/release/compress compression_benchmark/benches/physics_scientific_unsolved_4h_ellisk_2019-07-20T18.20.13/bench000_it0.json --max-arity=3 --threads=1 --iterations=11 --fmt=dreamcoder --dreamcoder-comparison --out=compression_benchmark/benches/physics_scientific_unsolved_4h_ellisk_2019-07-20T18.20.13/out/stitch/2022-10-04_19-35-58/raw/bench000_it0.json",
  "args": {
    "file": "compression_benchmark/benches/physics_scientific_unsolved_4h_ellisk_2019-07-20T18.20.13/bench000_it0.json",
    "out": "compression_benchmark/benches/physics_scientific_unsolved_4h_ellisk_2019-07-20T18.20.13/out/stitch/2022-10-04_19-35-58/raw/bench000_it0.json",
    "iterations": 11,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "args_from_json": false,
    "save_rewritten": null,
    "step": {
      "max_arity": 3,
      "threads": 1,
      "no_stats": false,
      "batch": 1,
      "dynamic_batch": false,
      "inv_candidates": 1,
      "hole_choice": "DepthFirst",
      "no_mismatch_check": false,
      "no_top_lambda": false,
      "track": null,
      "follow_track": false,
      "verbose_worklist": false,
      "verbose_best": false,
      "print_stats": 0,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_opt_arity_zero": false,
      "no_other_util": false,
      "rewrite_check": false,
      "utility_by_rewrite": false,
      "dreamcoder_comparison": true
    }
  },
  "original_cost": 157749,
  "original": [
    "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
    "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
    "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
    "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
    "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))))",
    "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
    "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))))",
    "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
    "(lam (lam (lam (lam (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
    "(lam (lam (*. $1 (/. $1 $0))))",
    "(lam (lam (*. (/. $1 $0) $1)))",
    "(lam (lam (/. $1 (/. $0 $1))))",
    "(lam (lam (/. (*. $1 $1) $0)))",
    "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
    "(lam (lam (*. $0 (*. $0 $1))))",
    "(lam (lam (*. $0 (*. $1 $0))))",
    "(lam (lam (*. $1 (*. $0 $0))))",
    "(lam (lam (*. (*. $0 $0) $1)))",
    "(lam (lam (*. (*. $0 $1) $0)))",
    "(lam (lam (/. $1 $0)))",
    "(lam (lam (*. $1 (/. 1 $0))))",
    "(lam (lam (/. $1 (+. $0 0))))",
    "(lam (lam (/. $1 (+. 0 $0))))",
    "(lam (lam (/. $1 (-. $0 0))))",
    "(lam (lam (/. $1 $0)))",
    "(lam (lam (*. $1 (/. 1 $0))))",
    "(lam (lam (/. $1 (+. $0 0))))",
    "(lam (lam (/. $1 (+. 0 $0))))",
    "(lam (lam (/. $1 (-. $0 0))))",
    "(lam (lam (*. $0 (*. $1 $1))))",
    "(lam (lam (*. $1 (*. $0 $1))))",
    "(lam (lam (*. $1 (*. $1 $0))))",
    "(lam (lam (*. (*. $0 $1) $1)))",
    "(lam (lam (*. (*. $1 $0) $1)))",
    "(lam (lam (*. $1 (/. $1 $0))))",
    "(lam (lam (*. (/. $1 $0) $1)))",
    "(lam (lam (/. $1 (/. $0 $1))))",
    "(lam (lam (/. (*. $1 $1) $0)))",
    "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
    "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
    "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
    "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
    "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
    "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
    "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
    "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
    "(lam (lam (*. $1 (/. (*. $0 $0) (+. 1 1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
    "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
    "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
    "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
    "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
    "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
    "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
    "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
    "(lam (lam (/. (*. $1 $1) (+. $0 $0))))",
    "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
    "(lam (/. 1 $0))",
    "(lam (/. $0 (*. $0 $0)))",
    "(lam (/. (/. $0 $0) $0))",
    "(lam (/. (/. 1 $0) 1))",
    "(lam (/. (/. 1 1) $0))",
    "(lam (/. $0 (+. 1 1)))",
    "(lam (*. $0 (/. $0 (+. $0 $0))))",
    "(lam (*. (/. $0 (+. $0 $0)) $0))",
    "(lam (/. (*. $0 $0) (+. $0 $0)))",
    "(lam (/. (-. $0 0) (+. 1 1)))",
    "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
    "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))))",
    "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
    "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))))",
    "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
    "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
    "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
    "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
    "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
    "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
    "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
    "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
    "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
    "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
    "(lam (lam (lam (+. $2 (*. $0 $1)))))",
    "(lam (lam (lam (+. $2 (*. $1 $0)))))",
    "(lam (lam (lam (+. (*. $0 $1) $2))))",
    "(lam (lam (lam (+. (*. $1 $0) $2))))",
    "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
    "(lam (lam (map (lam (*. $0 $2)) $0)))",
    "(lam (lam (map (lam (*. $2 $0)) $0)))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
    "(lam (lam (map (lam (*. $0 $2)) $0)))",
    "(lam (lam (map (lam (*. $2 $0)) $0)))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
    "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
    "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
    "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (/. (*. $1 $1) (+. 1 1)))))))))",
    "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
    "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
    "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
    "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
    "(lam (lam (*. $1 (/. (*. $0 $0) (+. 1 1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
    "(lam (lam (map (lam (*. $0 $2)) $0)))",
    "(lam (lam (map (lam (*. $2 $0)) $0)))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
    "(lam (lam (map (lam (*. $0 $2)) $0)))",
    "(lam (lam (map (lam (*. $2 $0)) $0)))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
    "(lam (lam (/. $1 $0)))",
    "(lam (lam (*. $1 (/. 1 $0))))",
    "(lam (lam (/. $1 (+. $0 0))))",
    "(lam (lam (/. $1 (+. 0 $0))))",
    "(lam (lam (/. $1 (-. $0 0))))",
    "(lam (lam (lam (+. $2 (*. $0 $1)))))",
    "(lam (lam (lam (+. $2 (*. $1 $0)))))",
    "(lam (lam (lam (+. (*. $0 $1) $2))))",
    "(lam (lam (lam (+. (*. $1 $0) $2))))",
    "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
    "(lam (/. (+. pi pi) $0))",
    "(lam (*. (/. (+. 1 1) $0) pi))",
    "(lam (/. (*. (+. 1 1) pi) $0))",
    "(lam (/. (-. (+. pi pi) 0) $0))",
    "(lam (/. (-. pi (-. 0 pi)) $0))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
    "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
    "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
    "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
    "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
    "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
    "(lam (lam (*. $0 $1)))",
    "(lam (lam (*. $1 $0)))",
    "(lam (lam (*. $1 (+. $0 0))))",
    "(lam (lam (*. $1 (-. $0 0))))",
    "(lam (lam (/. $1 (/. 1 $0))))",
    "(lam (lam (*. $0 $1)))",
    "(lam (lam (*. $1 $0)))",
    "(lam (lam (*. $1 (+. $0 0))))",
    "(lam (lam (*. $1 (-. $0 0))))",
    "(lam (lam (/. $1 (/. 1 $0))))",
    "(lam (/. 1 $0))",
    "(lam (/. $0 (*. $0 $0)))",
    "(lam (/. (/. $0 $0) $0))",
    "(lam (/. (/. 1 $0) 1))",
    "(lam (/. (/. 1 1) $0))",
    "(lam (/. 1 $0))",
    "(lam (/. $0 (*. $0 $0)))",
    "(lam (/. (/. $0 $0) $0))",
    "(lam (/. (/. 1 $0) 1))",
    "(lam (/. (/. 1 1) $0))",
    "(lam (lam (/. $1 $0)))",
    "(lam (lam (*. $1 (/. 1 $0))))",
    "(lam (lam (/. $1 (+. $0 0))))",
    "(lam (lam (/. $1 (+. 0 $0))))",
    "(lam (lam (/. $1 (-. $0 0))))",
    "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
    "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
    "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
    "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
    "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
    "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
    "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
    "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
    "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
    "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
    "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
    "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
    "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
    "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
    "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
    "(lam (*. $0 (*. $0 pi)))",
    "(lam (*. $0 (*. pi $0)))",
    "(lam (*. (*. $0 $0) pi))",
    "(lam (*. (*. $0 pi) $0))",
    "(lam (*. (*. pi $0) $0))",
    "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
    "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
    "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
    "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
    "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
  ],
  "invs": [
    {
      "body": "(/. (*. #1 #1) (+. #0 #0))",
      "dreamcoder": "#(lambda (lambda (/. (*. $0 $0) (+. $1 $1))))",
      "arity": 2,
      "name": "fn_0",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))))",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))))",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(lam (/. (*. (+. 1 1) pi) $0))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))))",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))))",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(lambda (/. (*. (+. 1 1) pi) $0))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $1 $0)))) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 1512,
      "expected_cost": 27550,
      "final_cost": 27550,
      "multiplier": 1.0659891107078039,
      "multiplier_wrt_orig": 1.0659891107078039,
      "num_uses": 5,
      "uses": [
        {
          "fn_0 $0 $0": "(/. (*. $0 $0) (+. $0 $0))"
        },
        {
          "fn_0 1 $0": "(/. (*. $0 $0) (+. 1 1))"
        },
        {
          "fn_0 $0 $1": "(/. (*. $1 $1) (+. $0 $0))"
        },
        {
          "fn_0 1 $1": "(/. (*. $1 $1) (+. 1 1))"
        }
      ]
    },
    {
      "body": "(lam (lam (#0 $1 $0)))",
      "dreamcoder": "#(lambda (lambda (lambda ($2 $1 $0))))",
      "arity": 1,
      "name": "fn_1",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(lam (/. (*. (+. 1 1) pi) $0))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (fn_1 +.)))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (fn_1 +.)) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (fn_1 +.)))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))))",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(#(lambda (lambda (lambda ($2 $1 $0)))) /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(#(lambda (lambda (lambda ($2 $1 $0)))) /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))))",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))",
        "(lambda (lambda (fold (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) *.)) 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))",
        "(lambda (lambda (fold (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) *.)) 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(#(lambda (lambda (lambda ($2 $1 $0)))) /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(lambda (/. (*. (+. 1 1) pi) $0))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(#(lambda (lambda (lambda ($2 $1 $0)))) *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(#(lambda (lambda (lambda ($2 $1 $0)))) *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(#(lambda (lambda (lambda ($2 $1 $0)))) /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.)))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (#(lambda (lambda (lambda ($2 $1 $0)))) +.)))",
        "(lambda (*. (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.)) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.)))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (#(lambda (lambda (lambda ($2 $1 $0)))) +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 1341,
      "expected_cost": 26005,
      "final_cost": 26005,
      "multiplier": 1.0594116516054606,
      "multiplier_wrt_orig": 1.1293212843683906,
      "num_uses": 25,
      "uses": [
        {
          "fn_1 *.": "(lam (lam (*. $1 $0)))"
        },
        {
          "fn_1 +.": "(lam (lam (+. $1 $0)))"
        },
        {
          "fn_1 /.": "(lam (lam (/. $1 $0)))"
        }
      ]
    },
    {
      "body": "(lam (lam (map (lam (*. $0 $2)) $0)))",
      "dreamcoder": "#(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
      "arity": 0,
      "name": "fn_2",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(lam (/. (*. (+. 1 1) pi) $0))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (fn_1 +.)))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (fn_1 +.)) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (fn_1 +.)))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (fn_1 +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (fn_1 +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "#(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "#(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "#(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "#(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(lambda (/. (*. (+. 1 1) pi) $0))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (fn_1 +.)))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (fn_1 +.)) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (fn_1 +.)))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 1121,
      "expected_cost": 24377,
      "final_cost": 24377,
      "multiplier": 1.0667842638552734,
      "multiplier_wrt_orig": 1.2047421750010257,
      "num_uses": 4,
      "uses": [
        {
          "fn_2 ": "(lam (lam (map (lam (*. $0 $2)) $0)))"
        }
      ]
    },
    {
      "body": "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (fn_1 +.))))))",
      "dreamcoder": "#(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))))",
      "arity": 0,
      "name": "fn_3",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(lam (/. (*. (+. 1 1) pi) $0))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (fn_1 +.)))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (fn_1 +.)) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (fn_1 +.)))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (fn_1 +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (fn_1 +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "#(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))))",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "#(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))))))",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(lambda (/. (*. (+. 1 1) pi) $0))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (fn_1 +.)))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (fn_1 +.)) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (fn_1 +.)))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 1116,
      "expected_cost": 21945,
      "final_cost": 21945,
      "multiplier": 1.110822510822511,
      "multiplier_wrt_orig": 1.338254727728412,
      "num_uses": 2,
      "uses": [
        {
          "fn_3 ": "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (fn_1 +.))))))"
        }
      ]
    },
    {
      "body": "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
      "dreamcoder": "#(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
      "arity": 0,
      "name": "fn_4",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(lam (/. (*. (+. 1 1) pi) $0))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "fn_4",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "fn_4",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (fn_1 +.)))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (fn_1 +.)) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (fn_1 +.)))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (fn_1 +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (fn_1 +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(lambda (/. (*. (+. 1 1) pi) $0))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "#(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "#(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (fn_1 +.)))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (fn_1 +.)) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (fn_1 +.)))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 1016,
      "expected_cost": 19713,
      "final_cost": 19713,
      "multiplier": 1.113224775528839,
      "multiplier_wrt_orig": 1.4897783188758686,
      "num_uses": 2,
      "uses": [
        {
          "fn_4 ": "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))"
        }
      ]
    },
    {
      "body": "(fold #0 0 (fn_1 +.))",
      "dreamcoder": "#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.)))",
      "arity": 1,
      "name": "fn_5",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(lam (/. (*. (+. 1 1) pi) $0))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "fn_4",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "fn_4",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fn_5 $0) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (fn_1 +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (fn_1 +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) (zip $0 $1 (fn_1 *.)))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) (zip $0 $1 (fn_1 *.)))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(lambda (/. (*. (+. 1 1) pi) $0))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "fn_4",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "fn_4",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) $0) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 808,
      "expected_cost": 18501,
      "final_cost": 18501,
      "multiplier": 1.0655099724339225,
      "multiplier_wrt_orig": 1.5873736554780822,
      "num_uses": 7,
      "uses": [
        {
          "fn_5 $0": "(fold $0 0 (fn_1 +.))"
        },
        {
          "fn_5 (zip $0 $1 (fn_1 *.))": "(fold (zip $0 $1 (fn_1 *.)) 0 (fn_1 +.))"
        },
        {
          "fn_5 (zip $0 $1 (lam (lam (*. $0 $1))))": "(fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (fn_1 +.))"
        }
      ]
    },
    {
      "body": "(*. #0 #0)",
      "dreamcoder": "#(lambda (*. $0 $0))",
      "arity": 1,
      "name": "fn_6",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (fn_6 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (fn_6 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (fn_6 $0))))",
        "(lam (lam (*. (fn_6 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (fn_6 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (fn_6 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (fn_6 $0) (fn_6 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(lam (/. (*. (+. 1 1) pi) $0))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(lam (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fn_5 $0) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (fn_6 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (fn_6 $0) (fn_6 $1))))",
        "(lam (lam (+. (fn_6 $1) (fn_6 $0))))",
        "(lam (lam (+. (fn_6 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (fn_6 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (fn_6 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (fn_1 +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (fn_1 +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (#(lambda (*. $0 $0)) $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (#(lambda (*. $0 $0)) $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (#(lambda (*. $0 $0)) $0))))",
        "(lambda (lambda (*. (#(lambda (*. $0 $0)) $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (#(lambda (*. $0 $0)) $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (#(lambda (*. $0 $0)) $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (#(lambda (*. $0 $0)) $0) (#(lambda (*. $0 $0)) $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (#(lambda (*. $0 $0)) $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(lambda (/. (*. (+. 1 1) pi) $0))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (#(lambda (*. $0 $0)) $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "fn_4",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (#(lambda (*. $0 $0)) $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "fn_4",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (#(lambda (*. $0 $0)) $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (#(lambda (*. $0 $0)) $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(lambda (/. (/. 1 1) $0))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fn_5 $0) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (#(lambda (*. $0 $0)) $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (#(lambda (*. $0 $0)) $0) (#(lambda (*. $0 $0)) $1))))",
        "(lambda (lambda (+. (#(lambda (*. $0 $0)) $1) (#(lambda (*. $0 $0)) $0))))",
        "(lambda (lambda (+. (#(lambda (*. $0 $0)) $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (#(lambda (*. $0 $0)) $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (#(lambda (*. $0 $0)) $0))))"
      ],
      "utility": 706,
      "expected_cost": 17693,
      "final_cost": 17693,
      "multiplier": 1.045667778217374,
      "multiplier_wrt_orig": 1.6598654835245576,
      "num_uses": 30,
      "uses": [
        {
          "fn_6 $0": "(*. $0 $0)"
        },
        {
          "fn_6 $1": "(*. $1 $1)"
        },
        {
          "fn_6 $3": "(*. $3 $3)"
        }
      ]
    },
    {
      "body": "(lam (/. #0 $0))",
      "dreamcoder": "#(lambda (lambda (/. $1 $0)))",
      "arity": 1,
      "name": "fn_7",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (fn_6 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_7 (fn_6 $0)))",
        "(lam (fn_7 (power $0 (+. 1 1))))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (fn_6 $0))))",
        "(lam (lam (*. (fn_6 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (fn_6 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_7 (fn_6 $0)))",
        "(lam (fn_7 (power $0 (+. 1 1))))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (fn_6 $0) (fn_6 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_7 (+. pi pi))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(fn_7 (*. (+. 1 1) pi))",
        "(fn_7 (-. (+. pi pi) 0))",
        "(fn_7 (-. pi (-. 0 pi)))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fn_5 $0) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (fn_6 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (fn_6 $0) (fn_6 $1))))",
        "(lam (lam (+. (fn_6 $1) (fn_6 $0))))",
        "(lam (lam (+. (fn_6 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (fn_6 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (fn_6 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (fn_1 +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (fn_1 +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (fn_6 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (#(lambda (lambda (/. $1 $0))) (fn_6 $0)))",
        "(lambda (#(lambda (lambda (/. $1 $0))) (power $0 (+. 1 1))))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (fn_6 $0))))",
        "(lambda (lambda (*. (fn_6 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (fn_6 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (#(lambda (lambda (/. $1 $0))) (fn_6 $0)))",
        "(lambda (#(lambda (lambda (/. $1 $0))) (power $0 (+. 1 1))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (fn_6 $0) (fn_6 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(#(lambda (lambda (/. $1 $0))) 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(#(lambda (lambda (/. $1 $0))) (/. 1 1))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (fn_1 *.)))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(#(lambda (lambda (/. $1 $0))) (+. pi pi))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(#(lambda (lambda (/. $1 $0))) (*. (+. 1 1) pi))",
        "(#(lambda (lambda (/. $1 $0))) (-. (+. pi pi) 0))",
        "(#(lambda (lambda (/. $1 $0))) (-. pi (-. 0 pi)))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_6 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_6 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(#(lambda (lambda (/. $1 $0))) 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(#(lambda (lambda (/. $1 $0))) (/. 1 1))",
        "(#(lambda (lambda (/. $1 $0))) 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(#(lambda (lambda (/. $1 $0))) (/. 1 1))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fn_5 $0) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (fn_6 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (fn_6 $0) (fn_6 $1))))",
        "(lambda (lambda (+. (fn_6 $1) (fn_6 $0))))",
        "(lambda (lambda (+. (fn_6 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (fn_6 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (fn_6 $0))))"
      ],
      "utility": 409,
      "expected_cost": 17081,
      "final_cost": 17081,
      "multiplier": 1.0358292839997658,
      "multiplier_wrt_orig": 1.7193372753351677,
      "num_uses": 17,
      "uses": [
        {
          "fn_7 (*. (+. 1 1) pi)": "(lam (/. (*. (+. 1 1) pi) $0))"
        },
        {
          "fn_7 (+. pi pi)": "(lam (/. (+. pi pi) $0))"
        },
        {
          "fn_7 (-. (+. pi pi) 0)": "(lam (/. (-. (+. pi pi) 0) $0))"
        },
        {
          "fn_7 (-. pi (-. 0 pi))": "(lam (/. (-. pi (-. 0 pi)) $0))"
        },
        {
          "fn_7 (/. #0 #0)": "(lam (/. (/. $0 $0) $0))"
        },
        {
          "fn_7 (/. 1 1)": "(lam (/. (/. 1 1) $0))"
        },
        {
          "fn_7 (fn_6 $0)": "(lam (/. (fn_6 $1) $0))"
        },
        {
          "fn_7 (power $0 (+. 1 1))": "(lam (/. (power $1 (+. 1 1)) $0))"
        },
        {
          "fn_7 1": "(lam (/. 1 $0))"
        }
      ]
    },
    {
      "body": "(lam (lam (fn_5 (zip $0 $1 (fn_1 *.)))))",
      "dreamcoder": "#(lambda (lambda (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) *.)))))",
      "arity": 0,
      "name": "fn_8",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (fn_6 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_7 (fn_6 $0)))",
        "(lam (fn_7 (power $0 (+. 1 1))))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (fn_6 $0))))",
        "(lam (lam (*. (fn_6 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (fn_6 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_7 (fn_6 $0)))",
        "(lam (fn_7 (power $0 (+. 1 1))))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (fn_6 $0) (fn_6 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "fn_8",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "fn_8",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_7 (+. pi pi))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(fn_7 (*. (+. 1 1) pi))",
        "(fn_7 (-. (+. pi pi) 0))",
        "(fn_7 (-. pi (-. 0 pi)))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fn_5 $0) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (fn_6 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (fn_6 $0) (fn_6 $1))))",
        "(lam (lam (+. (fn_6 $1) (fn_6 $0))))",
        "(lam (lam (+. (fn_6 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (fn_6 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (fn_6 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (fn_1 +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (fn_1 +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (fn_6 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_7 (fn_6 $0)))",
        "(lambda (fn_7 (power $0 (+. 1 1))))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (fn_6 $0))))",
        "(lambda (lambda (*. (fn_6 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (fn_6 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_7 (fn_6 $0)))",
        "(lambda (fn_7 (power $0 (+. 1 1))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (fn_6 $0) (fn_6 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_7 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "#(lambda (lambda (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) *.)))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "#(lambda (lambda (#(lambda (fold $0 0 (#(lambda (lambda (lambda ($2 $1 $0)))) +.))) (zip $0 $1 (#(lambda (lambda (lambda ($2 $1 $0)))) *.)))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_7 (+. pi pi))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(fn_7 (*. (+. 1 1) pi))",
        "(fn_7 (-. (+. pi pi) 0))",
        "(fn_7 (-. pi (-. 0 pi)))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_6 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_6 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(fn_7 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_7 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fn_5 $0) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (fn_6 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (fn_6 $0) (fn_6 $1))))",
        "(lambda (lambda (+. (fn_6 $1) (fn_6 $0))))",
        "(lambda (lambda (+. (fn_6 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (fn_6 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (fn_6 $0))))"
      ],
      "utility": 407,
      "expected_cost": 16067,
      "final_cost": 16067,
      "multiplier": 1.0631107238439037,
      "multiplier_wrt_orig": 1.8278458953133752,
      "num_uses": 2,
      "uses": [
        {
          "fn_8 ": "(lam (lam (fn_5 (zip $0 $1 (fn_1 *.)))))"
        }
      ]
    },
    {
      "body": "(lam (lam (lam (+. $2 (*. $0 $1)))))",
      "dreamcoder": "#(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
      "arity": 0,
      "name": "fn_9",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (fn_6 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_7 (fn_6 $0)))",
        "(lam (fn_7 (power $0 (+. 1 1))))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (fn_6 $0))))",
        "(lam (lam (*. (fn_6 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (fn_6 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_7 (fn_6 $0)))",
        "(lam (fn_7 (power $0 (+. 1 1))))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (fn_6 $0) (fn_6 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "fn_8",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "fn_8",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "fn_9",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "fn_9",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_7 (+. pi pi))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(fn_7 (*. (+. 1 1) pi))",
        "(fn_7 (-. (+. pi pi) 0))",
        "(fn_7 (-. pi (-. 0 pi)))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_1 /.)",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fn_5 $0) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (fn_6 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (fn_6 $0) (fn_6 $1))))",
        "(lam (lam (+. (fn_6 $1) (fn_6 $0))))",
        "(lam (lam (+. (fn_6 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (fn_6 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (fn_6 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (fn_1 +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (fn_1 +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (fn_6 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_7 (fn_6 $0)))",
        "(lambda (fn_7 (power $0 (+. 1 1))))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (fn_6 $0))))",
        "(lambda (lambda (*. (fn_6 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (fn_6 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_7 (fn_6 $0)))",
        "(lambda (fn_7 (power $0 (+. 1 1))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (fn_6 $0) (fn_6 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_7 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "fn_8",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "fn_8",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "#(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "#(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_7 (+. pi pi))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(fn_7 (*. (+. 1 1) pi))",
        "(fn_7 (-. (+. pi pi) 0))",
        "(fn_7 (-. pi (-. 0 pi)))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_6 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_6 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(fn_7 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_7 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_1 /.)",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fn_5 $0) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (fn_6 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (fn_6 $0) (fn_6 $1))))",
        "(lambda (lambda (+. (fn_6 $1) (fn_6 $0))))",
        "(lambda (lambda (+. (fn_6 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (fn_6 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (fn_6 $0))))"
      ],
      "utility": 307,
      "expected_cost": 15253,
      "final_cost": 15253,
      "multiplier": 1.0533665508424572,
      "multiplier_wrt_orig": 1.9253917262177933,
      "num_uses": 2,
      "uses": [
        {
          "fn_9 ": "(lam (lam (lam (+. $2 (*. $0 $1)))))"
        }
      ]
    },
    {
      "body": "(lam (lam (*. $1 (#0 $0))))",
      "dreamcoder": "#(lambda (lambda (lambda (*. $1 ($2 $0)))))",
      "arity": 1,
      "name": "fn_10",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (fn_1 +.))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (fn_1 +.))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (lam (lam (-. (fn_6 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_7 (fn_6 $0)))",
        "(lam (fn_7 (power $0 (+. 1 1))))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(fn_10 fn_6)",
        "(lam (lam (*. (fn_6 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(fn_10 (/. 1))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(fn_10 (/. 1))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (fn_6 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_7 (fn_6 $0)))",
        "(lam (fn_7 (power $0 (+. 1 1))))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lam (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lam (/. (+. (fn_6 $0) (fn_6 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(fn_10 (fn_0 1))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (*. (/. $0 (+. $0 $0)) $0))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $0 $1 (fn_1 +.))))))",
        "(lam (fold $0 (map (lam (*. $0 0)) (car $0)) (lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))))",
        "fn_3",
        "(lam (fold $0 (map (lam (*. 0 $0)) (car $0)) (lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "fn_8",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fn_5 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (fn_1 *.)) 0 (lam (lam (+. $0 $1))))))",
        "fn_8",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "fn_9",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $1 (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))) (+. $1 $1)))))",
        "(lam (lam (/. (*. $1 (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_6 $1))))))) (+. $1 $1))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(fn_10 (fn_0 1))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "fn_2",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(fn_1 /.)",
        "(fn_10 (/. 1))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "fn_9",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_7 (+. pi pi))",
        "(lam (*. (/. (+. 1 1) $0) pi))",
        "(fn_7 (*. (+. 1 1) pi))",
        "(fn_7 (-. (+. pi pi) 0))",
        "(fn_7 (-. pi (-. 0 pi)))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_6 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(lam (lam (*. $0 $1)))",
        "(fn_1 *.)",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (/. $1 (/. 1 $0))))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_7 1)",
        "(lam (/. $0 (fn_6 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_1 /.)",
        "(fn_10 (/. 1))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fn_5 $0) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fn_5 $0))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. (*. $0 $1) 1) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (fn_6 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (fn_6 $0) (fn_6 $1))))",
        "(lam (lam (+. (fn_6 $1) (fn_6 $0))))",
        "(lam (lam (+. (fn_6 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (fn_6 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (fn_6 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (fn_1 +.))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (fn_1 +.))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (lambda (lambda (-. (fn_6 $3) (*. (+. $2 $2) (-. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_7 (fn_6 $0)))",
        "(lambda (fn_7 (power $0 (+. 1 1))))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(#(lambda (lambda (lambda (*. $1 ($2 $0))))) fn_6)",
        "(lambda (lambda (*. (fn_6 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(fn_1 /.)",
        "(#(lambda (lambda (lambda (*. $1 ($2 $0))))) (/. 1))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(fn_1 /.)",
        "(#(lambda (lambda (lambda (*. $1 ($2 $0))))) (/. 1))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (fn_6 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_7 (fn_6 $0)))",
        "(lambda (fn_7 (power $0 (+. 1 1))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. $0 (power (+. 1 1) (/. $0 (+. $0 $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. $0 pi)))))",
        "(lambda (*. $0 (/. (+. $0 $0) (-. (*. $0 pi) (/. $0 pi)))))",
        "(lambda (/. (+. (fn_6 $0) (fn_6 $0)) (-. (*. $0 pi) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(#(lambda (lambda (lambda (*. $1 ($2 $0))))) (fn_0 1))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_7 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (*. (/. $0 (+. $0 $0)) $0))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $0 $1 (fn_1 +.))))))",
        "(lambda (fold $0 (map (lambda (*. $0 0)) (car $0)) (lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))))",
        "fn_3",
        "(lambda (fold $0 (map (lambda (*. 0 $0)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "fn_8",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fn_5 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (fn_1 *.)) 0 (lambda (lambda (+. $0 $1))))))",
        "fn_8",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 (*. $2 1)))))))",
        "fn_9",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $1 (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))) (+. $1 $1)))))",
        "(lambda (lambda (/. (*. $1 (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1))))))) (+. $1 $1))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(#(lambda (lambda (lambda (*. $1 ($2 $0))))) (fn_0 1))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "fn_2",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(fn_1 /.)",
        "(#(lambda (lambda (lambda (*. $1 ($2 $0))))) (/. 1))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "fn_9",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_7 (+. pi pi))",
        "(lambda (*. (/. (+. 1 1) $0) pi))",
        "(fn_7 (*. (+. 1 1) pi))",
        "(fn_7 (-. (+. pi pi) 0))",
        "(fn_7 (-. pi (-. 0 pi)))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_6 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_6 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_6 $1)))))))))",
        "fn_4",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(lambda (lambda (*. $0 $1)))",
        "(fn_1 *.)",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 (/. 1 $0))))",
        "(fn_7 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_7 1)",
        "(lambda (/. $0 (fn_6 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. (/. 1 $0) 1))",
        "(fn_7 (/. 1 1))",
        "(fn_1 /.)",
        "(#(lambda (lambda (lambda (*. $1 ($2 $0))))) (/. 1))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fn_5 $0) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fn_5 $0))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (fn_1 +.)))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. (*. $0 $1) 1) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (fn_6 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (fn_6 $0) (fn_6 $1))))",
        "(lambda (lambda (+. (fn_6 $1) (fn_6 $0))))",
        "(lambda (lambda (+. (fn_6 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (fn_6 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (fn_6 $0))))"
      ],
      "utility": 307,
      "expected_cost": 14641,
      "final_cost": 14641,
      "multiplier": 1.0418004234683422,
      "multiplier_wrt_orig": 2.0058739157161396,
      "num_uses": 10,
      "uses": [
        {
          "fn_10 (*. #1)": "(lam (lam (*. $1 (*. $1 $0))))"
        },
        {
          "fn_10 (/. #1)": "(lam (lam (*. $1 (/. $1 $0))))"
        },
        {
          "fn_10 (/. 1)": "(lam (lam (*. $1 (/. 1 $0))))"
        },
        {
          "fn_10 (fn_0 1)": "(lam (lam (*. $1 (fn_0 1 $0))))"
        },
        {
          "fn_10 fn_6": "(lam (lam (*. $1 (fn_6 $0))))"
        }
      ]
    }
  ]
}