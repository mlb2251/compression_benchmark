{
  "DSL": {
    "logVariable": -0.41451155606883816,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1) $3)) $2)))))",
        "logProbability": -2.6789461924706837
      },
      { "expression": "zip", "logProbability": -1.5450406182071963 },
      { "expression": "map", "logProbability": -1.5033906009952154 },
      { "expression": "cdr", "logProbability": -1.5553280650162629 },
      { "expression": "empty", "logProbability": -1.4685881479361282 },
      { "expression": "cons", "logProbability": -1.389582764627106 },
      { "expression": "*.", "logProbability": -1.8942320815091116 },
      { "expression": "/.", "logProbability": -2.327125519138354 },
      { "expression": "+.", "logProbability": -2.53516769698136 },
      { "expression": "pi", "logProbability": -2.508156450756555 },
      { "expression": "-.", "logProbability": -2.657400124475196 },
      { "expression": "0.", "logProbability": -2.741776286402548 },
      { "expression": "1.", "logProbability": -2.662943611672505 },
      { "expression": "power", "logProbability": -2.7659527248824327 },
      { "expression": "fold", "logProbability": -3.0548973794553067 },
      { "expression": "car", "logProbability": -3.0548973794553067 },
      {
        "expression": "#(lambda (map (lambda (*. $0 $1))))",
        "logProbability": -1.0178386057117805
      },
      {
        "expression":
          "#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))))",
        "logProbability": -1.0971528207183692
      },
      {
        "expression": "#(lambda (/. 1. $0))",
        "logProbability": -2.2358080075062055
      },
      {
        "expression": "#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.))))",
        "logProbability": -2.536995795460468
      },
      {
        "expression":
          "#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1))))))",
        "logProbability": -2.50519363955896
      },
      {
        "expression": "#(lambda (lambda (/. (+. $0 $0) $1)))",
        "logProbability": -2.6631660434030047
      },
      {
        "expression": "#(lambda (fold $0 0. (lambda (lambda (+. $0 $1)))))",
        "logProbability": -2.6442010515811893
      },
      {
        "expression":
          "#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "logProbability": -2.6778074973453765
      },
      {
        "expression":
          "#(lambda (lambda (fold $1 0. (lambda (lambda (+. $0 ($2 $1)))))))",
        "logProbability": -2.7149321040191463
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "logProbability": -2.4567058035713805
      },
      {
        "expression": "#(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "logProbability": -2.5682868896907367
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) (cons $0 (cons $1 empty)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) (cons $1 (cons $0 empty)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda $0) (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (*. $0 $1)))) 1. (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) (cons (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0) empty)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) 1. 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) 1. 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (#(lambda (/. 1. $0)) pi) pi)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) pi (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. (+. $0 $0) $1))) pi pi))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $3 $3 (+. $2 $2) (-. $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $3 $3 (-. $0 $1) (+. $2 $2))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $3 $3 $0 (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 $2 $1 $2)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $3 $3 $0 (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 $2 $2 $1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $3 $3 $0 (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $2 $0 $1 $2)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1) (#(lambda (lambda (fold $1 0. (lambda (lambda (+. $0 ($2 $1))))))) $1 (lambda $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0) (#(lambda (lambda (fold $1 0. (lambda (lambda (+. $0 ($2 $1))))))) $1 (lambda $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (+. $0 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (+. $0 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $1 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (-. pi (#(lambda (/. 1. $0)) pi)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (-. pi (/. 1. pi)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. (+. $0 $0) (-. pi (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $0 $0) (-. pi (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (-. pi (#(lambda (/. 1. $0)) pi)) (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $0 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $0 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. $1 (#(lambda (lambda (/. (+. $0 $0) $1))) $1 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (#(lambda (/. 1. $0)) (*. 1. $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $0 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 1.))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) 1. $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 (/. $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (/. $0 $0) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda $0) (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (*. $0 $1)))) 1. (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) (cons (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0) empty)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) $1) (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda (/. $0 $2)) (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (/. 1. $1) (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) $1) (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) $1) (map (lambda $0) (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (map (lambda $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (map (lambda $0) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (map (lambda $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (map (lambda $0) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      {
                        "constructor": "->",
                        "arguments": [
                          { "constructor": "real", "arguments": [] },
                          { "constructor": "real", "arguments": [] }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 $3 $1 $2)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 $3 $2 $1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $3 $0 $1 $2)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $3 $0 $2 $1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 $3 $1 $2) $4))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 $3 $1 $2)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 $3 $2 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $3 $0 $1 $2)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $3 $0 $2 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (/. $0 (#(lambda (/. 1. $0)) $1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. (*. $0 (+. $2 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1))) $3)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1) $3)) $2))))) $2 $3 $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $0) $2)) $3)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. (*. (+. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1) $2) $0) $3)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. (*. (+. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $0) $2) $0) $3)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $1 $1) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $1 $1) $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $1 (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $1 1. $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (+. $0 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. (*. $0 (+. $2 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1))) $3)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1) $3)) $2))))) $2 $3 $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $0) $2)) $3)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. (*. (+. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1) $2) $0) $3)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. (*. (+. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $0) $2) $0) $3)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (/. $0 (#(lambda (/. 1. $0)) $1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 pi))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. $0 (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $0 pi)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. pi (#(lambda (lambda (*. $1 (/. $1 (+. $0 $0))))) $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (#(lambda (/. 1. $0)) pi) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $1 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $2 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $1 $2 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $2 $1 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $1 $2 (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) (cons $0 empty))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $1 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $2 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $1 $2 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $2 $1 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))))) $1 $2 (#(lambda (fold $0 (map (lambda (*. $0 0.)) (car $0)) (lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1)))))))) (cons $0 empty))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 0. $0 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 0. $0 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 0. $1 (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $1 0. $0 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $1 0. $0 (*. $1 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 (+. $1 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 (+. $1 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (#(lambda (/. 1. $0)) (*. 1. $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (#(lambda (/. 1. $0)) (*. 1. $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (+. $0 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 0. (lambda (lambda (+. $0 ($2 $1))))))) $0 (lambda $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (#(lambda (map (lambda (*. $0 $1)))) 1. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0) 1.))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 0. (lambda (lambda (+. $0 ($2 $1))))))) $0 (lambda $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (#(lambda (map (lambda (*. $0 $1)))) 1. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0) 1.))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (lambda (fold $1 0. (lambda (lambda (+. $0 ($2 $1))))))) $0 (lambda (#(lambda (/. 1. $0)) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (#(lambda (/. 1. $0)) $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. 1. (#(lambda (lambda (fold $1 0. (lambda (lambda (+. $0 ($2 $1))))))) $0 (lambda (#(lambda (/. 1. $0)) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (lambda (fold $1 0. (lambda (lambda (+. $0 ($2 $1))))))) $0 (lambda (/. 1. $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (lambda (fold $1 0. (lambda (lambda (+. $0 ($2 $1))))))) (map (lambda (#(lambda (/. 1. $0)) $0)) $0) (lambda $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (*. $0 (*. $0 pi)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. $0 (*. pi $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 $0) pi))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 pi) $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. pi $0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 $0 $1 (-. 0. $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $0 $0 (-. 0. $1) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $0 $1)))))) $1 $1 $0 (-. 0. $0))))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}