Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 23912
Constructed version spaces and coalesced candidates in 22.6389s.
Timing point -1 right before normalizing: 25.7417s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 25.7436s.
Timing Comparison Point A (vspace+beam) (millis): 25743
Rewrote topK in 26.5546s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 26.5552s.
sanity check for timing comparison, should be same as comparison point: 52.2988s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 52298
Initial score: -1210.563723
Initial language score: 0.000000
Initial joint score: -1210.563723 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 5.18892s.
Best MDL score: -1208.481130 with (lambda (gt? $0 0))
Scored candidates with language and grammar in 4.90248s.
Best joint score: -1208.481130 with (lambda (gt? $0 0))
Timing point 3 (all scoring): 10.1252s.
Improved score to -1208.481130 (dScore=2.082593) w/ new primitive
	#(lambda (gt? $0 0)) : int -> bool
rewrote all of the frontiers in 14.2426s.
Timing point 4 (rewrite final frontiers): 14.2427s.
Completed one step of memory consolidation in 1.27818m.
New primitive is used 5 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (map (lambda (#(lambda (gt? $0 0)) $0)) $0))
  (lambda (#(lambda (gt? $0 0)) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) (#(lambda (map (lambda (+ $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))
  (lambda (#(lambda (gt? $0 0)) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0)))
  (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 (+ 1 1)))))))
  (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) $0))))
Total number of candidates: 23568
Constructed version spaces and coalesced candidates in 21.9341s.
Timing point -1 right before normalizing: 25.0824s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 25.0843s.
Timing Comparison Point A (vspace+beam) (millis): 25084
Rewrote topK in 24.9427s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 24.943s.
sanity check for timing comparison, should be same as comparison point: 50.0274s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 50027
Initial score: -1209.380384
Initial language score: 0.000000
Initial joint score: -1209.380384 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 6.06745s.
Best MDL score: -1208.701679 with (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))
Scored candidates with language and grammar in 5.12784s.
Best joint score: -1208.701679 with (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))
Timing point 3 (all scoring): 11.2315s.
Improved score to -1208.701679 (dScore=0.678705) w/ new primitive
	#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) : list(int) -> list(int) -> (list(int) -> bool) -> int
rewrote all of the frontiers in 13.1387s.
Timing point 4 (rewrite final frontiers): 13.1388s.
Completed one step of memory consolidation in 1.24039m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 $0 (lambda (empty? $0))))
  (lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 (range (* #(+ 1 #(+ 1 (+ 1 1))) #(+ 1 #(+ 1 (+ 1 1))))) (lambda (is-prime (- #(+ 1 #(+ 1 (+ 1 1))) (length $0))))))
Total number of candidates: 22446
Constructed version spaces and coalesced candidates in 13.0931s.
Timing point -1 right before normalizing: 15.3591s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 15.3614s.
Timing Comparison Point A (vspace+beam) (millis): 15361
Rewrote topK in 17.5145s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 17.5148s.
sanity check for timing comparison, should be same as comparison point: 32.8762s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 32876
Initial score: -1209.346126
Initial language score: 0.000000
Initial joint score: -1209.346126 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 5.92893s.
Best MDL score: -1208.104478 with (lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1))))))
Scored candidates with language and grammar in 5.18511s.
Best joint score: -1208.104478 with (lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1))))))
Timing point 3 (all scoring): 11.1529s.
Improved score to -1208.104478 (dScore=1.241647) w/ new primitive
	#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) : list(int) -> int -> int
rewrote all of the frontiers in 7.62042s.
Timing point 4 (rewrite final frontiers): 7.62046s.
Completed one step of memory consolidation in 51.6717s.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 0))
  (lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1))))
  (lambda (gt? (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 (car $0)) 1))
Total number of candidates: 21987
Constructed version spaces and coalesced candidates in 13.2143s.
Timing point -1 right before normalizing: 16.1086s.
Trimmed down the beam, have only 299 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 16.1104s.
Timing Comparison Point A (vspace+beam) (millis): 16110
Rewrote topK in 16.6218s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 16.6221s.
sanity check for timing comparison, should be same as comparison point: 32.7325s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 32732
Initial score: -1208.745268
Initial language score: 0.000000
Initial joint score: -1208.745268 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 5.48489s.
Best MDL score: -1210.380687 with (lambda (map (lambda (eq? $0 $1))))
No improvement possible with MDL.
Scored candidates with language and grammar in 5.53359s.
Best joint score: -1210.380687 with (lambda (map (lambda (eq? $0 $1))))
Timing point 3 (all scoring): 11.0558s.
No improvement possible with joint score.
Completed one step of memory consolidation in 43.7889s.
completed ocaml compression in 4.11027m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/list_list_hard_test_ellisk_2019-02-15T11.31.39/bench009_it11.json"
	User time (seconds): 56.18
	System time (seconds): 0.64
	Percent of CPU this job got: 23%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:06.70
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 409532
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 534982
	Voluntary context switches: 456
	Involuntary context switches: 5725
	Swaps: 0
	File system inputs: 0
	File system outputs: 152
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
