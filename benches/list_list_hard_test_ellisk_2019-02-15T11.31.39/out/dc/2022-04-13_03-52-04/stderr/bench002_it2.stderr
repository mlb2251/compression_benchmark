Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 10426
Constructed version spaces and coalesced candidates in 4.21029s.
Timing point -1 right before normalizing: 5.03002s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 5.03323s.
Timing Comparison Point A (vspace+beam) (millis): 5033
Rewrote topK in 4.96126s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 4.96157s.
sanity check for timing comparison, should be same as comparison point: 9.99489s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 9994
Initial score: -416.937309
Initial language score: 0.000000
Initial joint score: -416.937309 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.3122s.
Best MDL score: -387.528065 with (lambda (lambda (fold $0 (cons $1 empty) (lambda (lambda (cons $1 $0))))))
Scored candidates with language and grammar in 1.1231s.
Best joint score: -387.528065 with (lambda (lambda (fold $0 (cons $1 empty) (lambda (lambda (cons $1 $0))))))
Timing point 3 (all scoring): 2.44364s.
Improved score to -387.528065 (dScore=29.409244) w/ new primitive
	#(lambda (lambda (fold $0 (cons $1 empty) (lambda (lambda (cons $1 $0)))))) : t0 -> list(t0) -> list(t0)
rewrote all of the frontiers in 2.78734s.
Timing point 4 (rewrite final frontiers): 2.78739s.
Completed one step of memory consolidation in 15.2328s.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (fold $0 (cons $1 empty) (lambda (lambda (cons $1 $0)))))) (index #(+ 1 (+ 1 1)) $0) $0))
  (lambda (#(lambda (lambda (fold $0 (cons $1 empty) (lambda (lambda (cons $1 $0)))))) 0 $0))
  (lambda (#(lambda (lambda (fold $0 (cons $1 empty) (lambda (lambda (cons $1 $0)))))) #(+ 1 #(+ 1 (+ 1 1))) $0))
  (lambda (#(lambda (lambda (fold $0 (cons $1 empty) (lambda (lambda (cons $1 $0)))))) (+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))
Total number of candidates: 8063
Constructed version spaces and coalesced candidates in 4.45497s.
Timing point -1 right before normalizing: 5.54215s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 5.54571s.
Timing Comparison Point A (vspace+beam) (millis): 5545
Rewrote topK in 5.01185s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 5.01211s.
sanity check for timing comparison, should be same as comparison point: 10.5578s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 10557
Initial score: -387.510410
Initial language score: 0.000000
Initial joint score: -387.510410 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.33235s.
Best MDL score: -385.870848 with (+ #(+ 1 #(+ 1 (+ 1 1))) 1)
Scored candidates with language and grammar in 1.29134s.
Best joint score: -385.870848 with (+ #(+ 1 #(+ 1 (+ 1 1))) 1)
Timing point 3 (all scoring): 2.63212s.
Improved score to -385.870848 (dScore=1.639562) w/ new primitive
	#(+ #(+ 1 #(+ 1 (+ 1 1))) 1) : int
rewrote all of the frontiers in 2.77307s.
Timing point 4 (rewrite final frontiers): 2.77311s.
Completed one step of memory consolidation in 15.9693s.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (fold $0 (cons $1 empty) (lambda (lambda (cons $1 $0)))))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))
  (lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) (#(lambda (map (lambda (+ $0 $1)))) 1 $0)))
  (lambda (map (lambda (index $0 (cdr (cdr $1)))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))))
Total number of candidates: 7681
Constructed version spaces and coalesced candidates in 4.55743s.
Timing point -1 right before normalizing: 5.29553s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 5.29711s.
Timing Comparison Point A (vspace+beam) (millis): 5297
Rewrote topK in 4.39369s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 4.39736s.
sanity check for timing comparison, should be same as comparison point: 9.69453s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 9694
Initial score: -385.862461
Initial language score: 0.000000
Initial joint score: -385.862461 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.15997s.
Best MDL score: -384.216277 with (lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1))))
Scored candidates with language and grammar in 1.13882s.
Best joint score: -384.216277 with (lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1))))
Timing point 3 (all scoring): 2.30488s.
Improved score to -384.216277 (dScore=1.646185) w/ new primitive
	#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) : list(int) -> int -> list(int)
rewrote all of the frontiers in 2.60756s.
Timing point 4 (rewrite final frontiers): 2.60759s.
Completed one step of memory consolidation in 14.613s.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))))
  (lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))
  (lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 #(+ 1 (+ 1 1)))))
Total number of candidates: 7170
Constructed version spaces and coalesced candidates in 3.54184s.
Timing point -1 right before normalizing: 4.2566s.
Trimmed down the beam, have only 298 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 4.25859s.
Timing Comparison Point A (vspace+beam) (millis): 4258
Rewrote topK in 4.21829s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 4.21859s.
sanity check for timing comparison, should be same as comparison point: 8.47724s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 8477
Initial score: -384.215730
Initial language score: 0.000000
Initial joint score: -384.215730 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.1806s.
Best MDL score: -388.724863 with (lambda (index (length $0)))
No improvement possible with MDL.
Scored candidates with language and grammar in 1.13133s.
Best joint score: -388.724863 with (lambda (index (length $0)))
Timing point 3 (all scoring): 2.32063s.
No improvement possible with joint score.
Completed one step of memory consolidation in 10.7991s.
completed ocaml compression in 56.623s.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/list_list_hard_test_ellisk_2019-02-15T11.31.39/bench002_it2.json"
	User time (seconds): 13.67
	System time (seconds): 0.37
	Percent of CPU this job got: 24%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:56.66
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 170180
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 235085
	Voluntary context switches: 508
	Involuntary context switches: 1434
	Swaps: 0
	File system inputs: 0
	File system outputs: 40
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
