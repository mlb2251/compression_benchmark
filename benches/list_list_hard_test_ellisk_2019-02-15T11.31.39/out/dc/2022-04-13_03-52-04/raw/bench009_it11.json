{
  "DSL": {
    "logVariable": -0.6171221541441119,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1))))))",
        "logProbability": -1.5861762556086343
      },
      {
        "expression":
          "#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1))))))))))",
        "logProbability": -1.6187937629170968
      },
      {
        "expression": "#(lambda (gt? $0 0))",
        "logProbability": -0.5121072582064428
      },
      { "expression": "gt?", "logProbability": -0.5039961842916494 },
      { "expression": "is-square", "logProbability": -0.5814609732897189 },
      { "expression": "eq?", "logProbability": -0.5680676447089898 },
      { "expression": "is-prime", "logProbability": -0.5638940903316945 },
      { "expression": "empty?", "logProbability": -0.551284585482712 },
      { "expression": "1", "logProbability": -1.360830283734543 },
      { "expression": "length", "logProbability": -1.4988523242313607 },
      { "expression": "0", "logProbability": -1.5682908298419318 },
      { "expression": "*", "logProbability": -1.5580562651902587 },
      { "expression": "+", "logProbability": -1.5871757894809764 },
      { "expression": "-", "logProbability": -1.555228011495422 },
      { "expression": "mod", "logProbability": -1.6179915778442115 },
      { "expression": "cdr", "logProbability": -1.8153703205595781 },
      { "expression": "map", "logProbability": -1.8718180877919521 },
      { "expression": "cons", "logProbability": -2.04045793485344 },
      { "expression": "empty", "logProbability": -2.099363271789604 },
      { "expression": "range", "logProbability": -2.132918522925548 },
      { "expression": "unfold", "logProbability": -2.226797640018313 },
      { "expression": "index", "logProbability": -2.4345728378969054 },
      { "expression": "fold", "logProbability": -2.51245599868373 },
      { "expression": "car", "logProbability": -2.459030532895161 },
      { "expression": "if", "logProbability": -2.6496147424155123 },
      {
        "expression": "#(lambda (map (lambda (eq? (mod $0 $1) 0))))",
        "logProbability": -0.7579395055416263
      },
      {
        "expression": "#(+ 1 (+ 1 1))",
        "logProbability": -1.0930904548948779
      },
      {
        "expression": "#(+ 1 #(+ 1 (+ 1 1)))",
        "logProbability": -1.3036926750771163
      },
      {
        "expression": "#(+ #(+ 1 #(+ 1 (+ 1 1))) 1)",
        "logProbability": -1.5146764961361603
      },
      {
        "expression":
          "#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0)))))",
        "logProbability": -1.5899411545715556
      },
      {
        "expression": "#(lambda (cdr (cdr $0)))",
        "logProbability": -1.7742215065797304
      },
      {
        "expression":
          "#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0))))))",
        "logProbability": -1.9643743465205548
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1))))",
        "logProbability": -1.964749468332407
      },
      {
        "expression":
          "#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1))))))",
        "logProbability": -1.9651575280022882
      },
      {
        "expression": "#(lambda (cons (car $0)))",
        "logProbability": -1.9352209489847332
      },
      {
        "expression": "#(lambda (map (lambda (mod $0 $1))))",
        "logProbability": -1.992441394426006
      },
      {
        "expression":
          "#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0))))))",
        "logProbability": -2.005121873248052
      },
      {
        "expression":
          "#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))))",
        "logProbability": -2.0630392553556702
      },
      {
        "expression": "#(lambda (map (lambda (+ $0 $1))))",
        "logProbability": -2.0472231982026976
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1)))))))))",
        "logProbability": -2.0738094122335284
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (map (lambda (+ $0 $1)))) 1 $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (+ 1 $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 (+ 1 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (+ 1 (+ $0 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (+ 1 (+ $0 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (cdr (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))) (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (length empty)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (fold $0 #(+ 1 #(+ 1 (+ 1 1))) (lambda (lambda #(+ 1 #(+ 1 (+ 1 1))))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (map (lambda #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)) (range 1)) (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (gt? (+ #(+ 1 #(+ 1 (+ 1 1))) $0) #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (gt? (+ $0 #(+ 1 #(+ 1 (+ 1 1)))) #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (#(lambda (gt? $0 0)) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (gt? $0 (length empty))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (gt? $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 empty (lambda (lambda (cons (gt? $1 #(+ 1 (+ 1 1))) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 (+ 1 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (gt? 1 (mod $0 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (eq? #(+ 1 (+ 1 1)) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (eq? $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (eq? #(+ 1 #(+ 1 (+ 1 1))) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (eq? $0 #(+ 1 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (- 1 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 (- 1 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 (+ 1 #(+ 1 #(+ 1 (+ 1 1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (mod (+ #(+ 1 (+ 1 1)) $0) #(+ 1 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (- 1 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 (- #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 #(+ 1 (+ 1 1)))) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0) #(+ 1 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? 1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ 1 (+ 1 1)) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (cdr (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (map (lambda $0) (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)) $0 (lambda (lambda (cdr $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (empty? $0))", "logLikelihood": 0.0 },
        {
          "program":
            "(lambda (empty? (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (map (lambda $1) $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (cons $0 empty))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (gt? (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 (car $0)) 1))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (gt? (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? (car $1) $0)))) 1))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (gt? $0 0)) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) (#(lambda (map (lambda (+ $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) (#(lambda (map (lambda (+ $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (is-square (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (mod $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (gt? $0 0)) (mod (car (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 #(+ 1 (+ 1 1))))) #(+ 1 #(+ 1 (+ 1 1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (gt? (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0) 1))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (gt? $0 0)) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (car $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (index 0 $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (car $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (index 0 $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (car (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (index 1 (cdr $0)))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (index #(+ 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (index #(+ 1 (+ 1 1)) (cdr $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (is-square (fold (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0) #(+ 1 #(+ 1 (+ 1 1))) (lambda (lambda (+ $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (is-square (fold (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0) #(+ 1 #(+ 1 (+ 1 1))) (lambda (lambda (+ $1 $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (fold $0 (is-prime #(+ 1 (+ 1 1))) (lambda (lambda (if $0 (is-prime $1) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (is-square 1) (lambda (lambda (if $0 (is-prime $1) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 $0 (lambda (empty? $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (if (gt? $0 $1) $0 $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 (range (* #(+ 1 #(+ 1 (+ 1 1))) #(+ 1 #(+ 1 (+ 1 1))))) (lambda (is-prime (- #(+ 1 #(+ 1 (+ 1 1))) (length $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 (range (* #(+ 1 #(+ 1 (+ 1 1))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) (lambda (is-prime (- #(+ 1 #(+ 1 (+ 1 1))) (length $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ 1 (+ 1 1)) (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (gt? $1 $0)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (gt? $1 $0)))) #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (index (length (cdr $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (index (- (length $0) 1) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (length $0))", "logLikelihood": 0.0 },
        {
          "program":
            "(lambda (length (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 1))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) (- #(+ 1 (+ 1 1)) 1) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) (- 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (mod $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (mod $0 #(+ 1 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (mod $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 1))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (+ $0 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda $0) (map (lambda (+ $0 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (* #(+ 1 (+ 1 1)) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (* $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (* #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (* $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (index $0 $1)) (range (length (cdr $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index $0 $1)) (range (length (cdr (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 #(+ 1 (+ 1 1))) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) $0 (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (cons (car $0))) (cdr $0) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (cons (index 1 $0) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (cons (index #(+ 1 (+ 1 1)) $0) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) (#(lambda (cdr (cdr $0))) (cdr $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (cons 0 $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (cons (length empty) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (fold $0 1 (lambda (lambda (* $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (fold $0 1 (lambda (lambda (* $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) $0 (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) $0 (map (lambda $0) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) $0 (cons (index 1 $0) (#(lambda (cons (car $0))) (#(lambda (cdr (cdr $0))) $0) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (mod (+ $0 $0) #(+ 1 #(+ 1 (+ 1 1))))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ (mod $0 #(+ 1 (+ 1 1))) 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (fold $0 $0 (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda $0) (fold $0 $0 (lambda (lambda (cons $1 $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (car $1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (index 0 $1)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (index #(+ 1 (+ 1 1)) $1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index #(+ 1 (+ 1 1)) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (fold $0 empty (lambda (lambda (cons (index (length $0) $2) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (cdr (range 1)) (lambda (lambda (cons (index (length $0) $2) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 empty))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 (range 0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cons (car $0))) $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cons #(+ 1 (+ 1 1)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index $0 (cdr $1))) (range #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cdr $0)) (index #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cdr $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cdr $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (cdr $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index $0 $1)) (#(lambda (cdr (cdr $0))) (range (+ #(+ 1 #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (#(lambda (cdr (cdr $0))) (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (cdr $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (cdr (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 empty))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 (range 0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) $0 (#(lambda (cons (car $0))) (cdr $0) empty)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cons (car $0))) $0 (#(lambda (cons (car $0))) $0 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cons #(+ 1 (+ 1 1)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cons 1 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold (range #(+ 1 #(+ 1 (+ 1 1)))) empty (lambda (lambda (cons (index $1 $2) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-square $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-square (* #(+ 1 #(+ 1 (+ 1 1))) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? $0 (length empty)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? 1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? $0 0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? $0 #(+ 1 (+ 1 1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (map (lambda $0) $0) (lambda (gt? $0 #(+ 1 (+ 1 1))))))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}