{
  "DSL": {
    "logVariable": -0.5936644221163556,
    "productions": [
      {
        "expression":
          "#(lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 (+ 1 1)))))",
        "logProbability": -0.5244468797105086
      },
      { "expression": "empty?", "logProbability": -0.4346889776556204 },
      { "expression": "eq?", "logProbability": -0.42150354999950324 },
      { "expression": "is-prime", "logProbability": -0.49338819352698815 },
      { "expression": "gt?", "logProbability": -0.4750311338580868 },
      { "expression": "is-square", "logProbability": -0.5560498104351899 },
      { "expression": "1", "logProbability": -1.304606116103015 },
      { "expression": "length", "logProbability": -1.4203177781767469 },
      { "expression": "0", "logProbability": -1.489847846427483 },
      { "expression": "-", "logProbability": -1.46909739322615 },
      { "expression": "*", "logProbability": -1.5057263480369105 },
      { "expression": "+", "logProbability": -1.5975984749718393 },
      { "expression": "mod", "logProbability": -1.6308813794830845 },
      { "expression": "cdr", "logProbability": -1.797599619860383 },
      { "expression": "map", "logProbability": -1.967798422975037 },
      { "expression": "cons", "logProbability": -2.112541933454485 },
      { "expression": "empty", "logProbability": -2.125760476964065 },
      { "expression": "range", "logProbability": -2.1548472518170283 },
      { "expression": "unfold", "logProbability": -2.248173447078185 },
      { "expression": "index", "logProbability": -2.4579962126582884 },
      { "expression": "car", "logProbability": -2.426353740171994 },
      { "expression": "fold", "logProbability": -2.570518007420051 },
      { "expression": "if", "logProbability": -2.6658812981780446 },
      {
        "expression": "#(lambda (gt? $0 0))",
        "logProbability": -0.464427609839249
      },
      {
        "expression": "#(lambda (map (lambda (gt? $0 $1))))",
        "logProbability": -0.703409120912637
      },
      {
        "expression": "#(lambda (map (lambda (eq? (mod $0 $1) 0))))",
        "logProbability": -0.7330585962950242
      },
      {
        "expression": "#(+ 1 (+ 1 1))",
        "logProbability": -1.0972383086916886
      },
      {
        "expression": "#(+ 1 #(+ 1 (+ 1 1)))",
        "logProbability": -1.2842637677417237
      },
      {
        "expression": "#(+ #(+ 1 #(+ 1 (+ 1 1))) 1)",
        "logProbability": -1.4502292353827344
      },
      {
        "expression":
          "#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0)))))",
        "logProbability": -1.5318607844141665
      },
      {
        "expression":
          "#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1))))))",
        "logProbability": -1.4748170183879399
      },
      {
        "expression":
          "#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1))))))))))",
        "logProbability": -1.566350996349109
      },
      {
        "expression": "#(lambda (cdr (cdr $0)))",
        "logProbability": -1.788227113981561
      },
      {
        "expression": "#(lambda (cons (car $0)))",
        "logProbability": -1.9445634234737068
      },
      {
        "expression":
          "#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1))))))",
        "logProbability": -1.9858971511042962
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1))))",
        "logProbability": -1.984169257545004
      },
      {
        "expression":
          "#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0))))))",
        "logProbability": -1.9116891334476889
      },
      {
        "expression":
          "#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0))))))",
        "logProbability": -2.002782490110618
      },
      {
        "expression": "#(lambda (map (lambda (mod $0 $1))))",
        "logProbability": -2.0414286134000235
      },
      {
        "expression": "#(lambda (map (lambda (+ $0 $1))))",
        "logProbability": -2.0691296993246655
      },
      {
        "expression":
          "#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))))",
        "logProbability": -2.083853295984496
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1)))))))))",
        "logProbability": -2.0946089303108604
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (map (lambda (+ $0 $1)))) 1 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (+ $0 $1)))) (- #(+ 1 #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 (+ 1 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (+ 1 (+ $0 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (+ 1 (+ $0 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (cdr (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))) (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) empty)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (fold $0 #(+ 1 #(+ 1 (+ 1 1))) (lambda (lambda #(+ 1 #(+ 1 (+ 1 1))))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (map (lambda $0) $0) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (gt? $0 $1)))) (- #(+ 1 (+ 1 1)) #(+ 1 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (gt? $0 $1)))) (- #(+ 1 #(+ 1 (+ 1 1))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (map (lambda (gt? $0 $1)))) 0 $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (#(lambda (gt? $0 0)) $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (gt? $0 $1)))) #(+ 1 (+ 1 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 empty (lambda (lambda (cons (gt? $1 #(+ 1 (+ 1 1))) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 (+ 1 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 (+ 1 1)) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 #(+ 1 (+ 1 1))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (eq? #(+ 1 (+ 1 1)) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (eq? $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (eq? #(+ 1 #(+ 1 (+ 1 1))) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (eq? $0 #(+ 1 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (- 1 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 (- 1 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 (+ 1 #(+ 1 #(+ 1 (+ 1 1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) (map (lambda (+ #(+ 1 (+ 1 1)) $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (- 1 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 (- #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 #(+ 1 (+ 1 1)))) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0) #(+ 1 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) (cdr $0) (car $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (- (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 (car $0)) 1))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (cdr (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (map (lambda $0) (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)) $0 (lambda (lambda (cdr $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (empty? $0))", "logLikelihood": 0.0 },
        {
          "program":
            "(lambda (empty? (#(lambda (map (lambda (gt? $0 $1)))) #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (map (lambda $1) $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) empty $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (gt? (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 (car $0)) 1))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (gt? (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? (car $1) $0)))) 1))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (gt? $0 0)) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) (#(lambda (map (lambda (+ $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (is-prime (+ (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) (#(lambda (map (lambda (+ $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0)) #(+ 1 #(+ 1 (+ 1 1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (gt? (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1))) 0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (gt? $0 0)) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (gt? (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0) 1))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (car $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (index 0 $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (car $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (index 0 $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (car (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (index 1 (cdr $0)))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (index #(+ 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (index #(+ 1 (+ 1 1)) (cdr $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (empty? (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0) (lambda (#(lambda (gt? $0 0)) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (empty? (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 (+ 1 1))))) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (eq? (length $0) (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (eq? (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime $0)))) (length $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 $0 (lambda (empty? $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (if (gt? $0 $1) $0 $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 (range (* #(+ 1 #(+ 1 (+ 1 1))) #(+ 1 #(+ 1 (+ 1 1))))) (lambda (is-prime (- #(+ 1 #(+ 1 (+ 1 1))) (length $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 (range (* #(+ 1 #(+ 1 (+ 1 1))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) (lambda (is-prime (- #(+ 1 #(+ 1 (+ 1 1))) (length $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ 1 (+ 1 1)) (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (gt? $1 $0)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (gt? $1 $0)))) #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (index (length (cdr $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (index (- (length $0) 1) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (length $0))", "logLikelihood": 0.0 },
        {
          "program":
            "(lambda (length (#(lambda (map (lambda (gt? $0 $1)))) #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 1))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) (- #(+ 1 (+ 1 1)) 1) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) (- 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 1))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (+ $0 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda $0) (map (lambda (+ $0 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (* #(+ 1 (+ 1 1)) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (* $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (* #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (* $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (index $0 $1)) (range (length (cdr $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index $0 $1)) (range (length (cdr (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 #(+ 1 (+ 1 1))) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (cons (car $0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (cons (car $0))) (cdr $0) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (cons (index 1 $0) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) (#(lambda (cdr (cdr $0))) (cdr $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) (cdr (#(lambda (cdr (cdr $0))) $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (cons 0 $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (cons (length empty) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (fold $0 1 (lambda (lambda (* $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (fold $0 1 (lambda (lambda (* $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) $0 (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 (cdr (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) $0 (cons (index 1 $0) (#(lambda (cons (car $0))) (#(lambda (cdr (cdr $0))) $0) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (mod (+ $0 $0) #(+ 1 #(+ 1 (+ 1 1))))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 (+ 1 1))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? (mod $0 #(+ 1 (+ 1 1))) 0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (fold $0 $0 (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (map (lambda $0) $0) (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (car $1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (index 0 $1)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (index #(+ 1 (+ 1 1)) $1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index #(+ 1 (+ 1 1)) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (fold $0 empty (lambda (lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 $0 (lambda (lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (cdr $0) $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 empty))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 (range 0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cons (car $0))) $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cons #(+ 1 (+ 1 1)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cdr $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cdr $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (cdr $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index $0 $1)) (#(lambda (cdr (cdr $0))) (range (+ #(+ 1 #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (cdr (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (cdr $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (cdr (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 empty))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (#(lambda (cons (car $0))) $0 (range 0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cons (car $0))) $0 (#(lambda (cons (car $0))) (cdr $0) empty)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cons (car $0))) $0 (#(lambda (cons (car $0))) $0 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cons #(+ 1 (+ 1 1)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cons #(+ 1 #(+ 1 (+ 1 1))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold (range #(+ 1 #(+ 1 (+ 1 1)))) empty (lambda (lambda (cons (index $1 $2) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-square $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (map (lambda $0) $0) (lambda (is-square $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? $0 (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) empty)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? 1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? $0 0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? $0 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? 1 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? $0 #(+ 1 (+ 1 1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (- $0 #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}