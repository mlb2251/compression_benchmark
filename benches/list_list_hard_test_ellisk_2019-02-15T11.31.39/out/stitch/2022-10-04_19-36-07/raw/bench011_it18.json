{
  "cmd": "/scratch/mlbowers/proj/stitch/target/release/compress compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.31.39/bench011_it18.json --max-arity=3 --threads=1 --iterations=1 --fmt=dreamcoder --dreamcoder-comparison --out=compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.31.39/out/stitch/2022-10-04_19-36-07/raw/bench011_it18.json",
  "args": {
    "file": "compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.31.39/bench011_it18.json",
    "out": "compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.31.39/out/stitch/2022-10-04_19-36-07/raw/bench011_it18.json",
    "iterations": 1,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "args_from_json": false,
    "save_rewritten": null,
    "step": {
      "max_arity": 3,
      "threads": 1,
      "no_stats": false,
      "batch": 1,
      "dynamic_batch": false,
      "inv_candidates": 1,
      "hole_choice": "DepthFirst",
      "no_mismatch_check": false,
      "no_top_lambda": false,
      "track": null,
      "follow_track": false,
      "verbose_worklist": false,
      "verbose_best": false,
      "print_stats": 0,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_opt_arity_zero": false,
      "no_other_util": false,
      "rewrite_check": false,
      "utility_by_rewrite": false,
      "dreamcoder_comparison": true
    }
  },
  "original_cost": 97759,
  "original": [
    "(lam (prev_dc_inv_6 1 $0))",
    "(lam (prev_dc_inv_6 (- prev_dc_inv_2 prev_dc_inv_0) $0))",
    "(lam (prev_dc_inv_6 prev_dc_inv_0 $0))",
    "(lam (map (lam (+ 1 (+ $0 (+ 1 1)))) $0))",
    "(lam (prev_dc_inv_6 prev_dc_inv_2 $0))",
    "(lam (map (lam (+ prev_dc_inv_2 $0)) $0))",
    "(lam (prev_dc_inv_12 $0 (index 1 $0)))",
    "(lam (prev_dc_inv_12 $0 (car (cdr $0))))",
    "(lam (prev_dc_inv_12 $0 (car (prev_dc_inv_3 $0))))",
    "(lam (prev_dc_inv_12 $0 (index 1 (cdr $0))))",
    "(lam (prev_dc_inv_12 $0 (index prev_dc_inv_0 $0)))",
    "(lam (prev_dc_inv_12 $0 (index prev_dc_inv_0 (prev_dc_inv_11 $0))))",
    "(lam (prev_dc_inv_12 $0 0))",
    "(lam (prev_dc_inv_12 $0 (prev_dc_inv_17 empty)))",
    "(lam (prev_dc_inv_12 $0 prev_dc_inv_0))",
    "(lam (prev_dc_inv_12 (map (lam $0) $0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_12 $0 prev_dc_inv_2))",
    "(lam (prev_dc_inv_12 $0 (fold $0 prev_dc_inv_2 (lam (lam prev_dc_inv_2)))))",
    "(lam (prev_dc_inv_12 $0 prev_dc_inv_5))",
    "(lam (prev_dc_inv_12 (map (lam $0) $0) prev_dc_inv_5))",
    "(lam (prev_dc_inv_7 (- prev_dc_inv_0 prev_dc_inv_2) $0))",
    "(lam (prev_dc_inv_7 (- prev_dc_inv_2 prev_dc_inv_5) $0))",
    "(lam (prev_dc_inv_7 0 $0))",
    "(lam (map (lam (prev_dc_inv_1 $0)) $0))",
    "(lam (prev_dc_inv_7 prev_dc_inv_0 $0))",
    "(lam (prev_dc_inv_7 prev_dc_inv_0 (map (lam $0) $0)))",
    "(lam (prev_dc_inv_9 prev_dc_inv_0 $0))",
    "(lam (prev_dc_inv_9 prev_dc_inv_0 (map (lam $0) $0)))",
    "(lam (prev_dc_inv_9 prev_dc_inv_2 $0))",
    "(lam (prev_dc_inv_9 prev_dc_inv_2 (map (lam $0) $0)))",
    "(lam (map (lam (eq? prev_dc_inv_0 $0)) $0))",
    "(lam (map (lam (eq? $0 prev_dc_inv_0)) $0))",
    "(lam (map (lam (eq? prev_dc_inv_2 $0)) $0))",
    "(lam (map (lam (eq? $0 prev_dc_inv_2)) $0))",
    "(lam (map (lam (- 1 $0)) $0))",
    "(lam (prev_dc_inv_15 $0 (- prev_dc_inv_0 1)))",
    "(lam (prev_dc_inv_15 $0 prev_dc_inv_0))",
    "(lam (prev_dc_inv_15 (map (lam $0) $0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_15 $0 prev_dc_inv_5))",
    "(lam (prev_dc_inv_15 $0 (+ 1 prev_dc_inv_2)))",
    "(lam (prev_dc_inv_8 prev_dc_inv_2 (prev_dc_inv_6 prev_dc_inv_0 $0)))",
    "(lam (map (lam (mod (+ prev_dc_inv_0 $0) prev_dc_inv_2)) $0))",
    "(lam (prev_dc_inv_15 $0 prev_dc_inv_0))",
    "(lam (prev_dc_inv_15 (map (lam $0) $0) prev_dc_inv_0))",
    "(lam (map (lam (- 1 $0)) $0))",
    "(lam (prev_dc_inv_15 $0 (- prev_dc_inv_0 1)))",
    "(lam (prev_dc_inv_15 (prev_dc_inv_15 $0 prev_dc_inv_0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_15 (prev_dc_inv_15 $0 prev_dc_inv_2) prev_dc_inv_0))",
    "(lam (prev_dc_inv_15 $0 prev_dc_inv_2))",
    "(lam (prev_dc_inv_15 (prev_dc_inv_6 prev_dc_inv_2 $0) prev_dc_inv_2))",
    "(lam (prev_dc_inv_16 (cdr $0) (car $0)))",
    "(lam (- (prev_dc_inv_16 $0 (car $0)) 1))",
    "(lam (prev_dc_inv_16 $0 0))",
    "(lam (prev_dc_inv_16 $0 (prev_dc_inv_17 $0)))",
    "(lam (prev_dc_inv_16 $0 prev_dc_inv_0))",
    "(lam (prev_dc_inv_16 (prev_dc_inv_18 $0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_17 $0))",
    "(lam (prev_dc_inv_16 $0 prev_dc_inv_5))",
    "(lam (cdr (prev_dc_inv_3 $0)))",
    "(lam (prev_dc_inv_3 (map (lam $0) (cdr $0))))",
    "(lam (cdr (prev_dc_inv_3 (prev_dc_inv_3 $0))))",
    "(lam (fold (range prev_dc_inv_5) $0 (lam (lam (cdr $0)))))",
    "(lam (empty? $0))",
    "(lam (empty? (prev_dc_inv_7 prev_dc_inv_0 $0)))",
    "(lam (prev_dc_inv_13 $0 (lam (empty? (prev_dc_inv_18 (map (lam $1) $1))))))",
    "(lam (prev_dc_inv_13 $0 (lam (empty? (prev_dc_inv_18 (prev_dc_inv_12 empty $0))))))",
    "(lam (gt? (prev_dc_inv_16 $0 (car $0)) 1))",
    "(lam (prev_dc_inv_1 (prev_dc_inv_16 (cdr $0) (car $0))))",
    "(lam (prev_dc_inv_1 (prev_dc_inv_17 (prev_dc_inv_6 prev_dc_inv_5 $0))))",
    "(lam (is-prime (+ prev_dc_inv_2 (prev_dc_inv_17 (prev_dc_inv_6 prev_dc_inv_5 $0)))))",
    "(lam (prev_dc_inv_1 (prev_dc_inv_16 $0 prev_dc_inv_0)))",
    "(lam (gt? (prev_dc_inv_16 $0 prev_dc_inv_0) 0))",
    "(lam (prev_dc_inv_1 (prev_dc_inv_17 $0)))",
    "(lam (prev_dc_inv_1 (prev_dc_inv_16 $0 prev_dc_inv_5)))",
    "(lam (car $0))",
    "(lam (index 0 $0))",
    "(lam (car $0))",
    "(lam (index 0 $0))",
    "(lam (car (prev_dc_inv_3 $0)))",
    "(lam (index 1 (cdr $0)))",
    "(lam (index prev_dc_inv_2 $0))",
    "(lam (index prev_dc_inv_0 (cdr $0)))",
    "(lam (empty? (prev_dc_inv_18 $0)))",
    "(lam (empty? (prev_dc_inv_18 (prev_dc_inv_18 $0))))",
    "(lam (empty? (prev_dc_inv_13 $0 (lam (prev_dc_inv_10 $0)))))",
    "(lam (empty? (prev_dc_inv_13 (prev_dc_inv_8 prev_dc_inv_0 $0) (lam (prev_dc_inv_1 $0)))))",
    "(lam (eq? (length $0) (length (prev_dc_inv_13 $0 (lam (is-prime $0))))))",
    "(lam (eq? (length (prev_dc_inv_13 $0 (lam (is-prime $0)))) (length $0)))",
    "(lam (prev_dc_inv_19 $0 $0 (lam (empty? $0))))",
    "(lam (fold $0 prev_dc_inv_0 (lam (lam (if (gt? $0 $1) $0 $1)))))",
    "(lam (prev_dc_inv_19 $0 (range (* prev_dc_inv_0 prev_dc_inv_5)) (lam (is-prime (- prev_dc_inv_2 (length $0))))))",
    "(lam (prev_dc_inv_19 $0 (range (* prev_dc_inv_2 prev_dc_inv_2)) (lam (is-prime (- prev_dc_inv_2 (length $0))))))",
    "(lam (car (prev_dc_inv_13 $0 (lam (eq? prev_dc_inv_0 (length (prev_dc_inv_13 $1 (lam (gt? $1 $0)))))))))",
    "(lam (car (prev_dc_inv_13 $0 (lam (eq? (length (prev_dc_inv_13 $1 (lam (gt? $1 $0)))) prev_dc_inv_0)))))",
    "(lam (prev_dc_inv_19 $0 (range (* prev_dc_inv_0 prev_dc_inv_5)) (lam (is-prime (- (- (length $1) prev_dc_inv_0) (length $0))))))",
    "(lam (prev_dc_inv_19 $0 (range (* prev_dc_inv_0 prev_dc_inv_5)) (lam (is-prime (- (- (length $1) (length $0)) prev_dc_inv_0)))))",
    "(lam (index (length (cdr $0)) $0))",
    "(lam (index (- (length $0) 1) $0))",
    "(lam (length $0))",
    "(lam (length (prev_dc_inv_7 prev_dc_inv_0 $0)))",
    "(lam (prev_dc_inv_15 $0 1))",
    "(lam (prev_dc_inv_8 1 $0))",
    "(lam (prev_dc_inv_8 (- prev_dc_inv_0 1) $0))",
    "(lam (prev_dc_inv_8 (- 1 prev_dc_inv_0) $0))",
    "(lam (prev_dc_inv_8 prev_dc_inv_0 $0))",
    "(lam (map (lam (mod $0 prev_dc_inv_0)) $0))",
    "(lam (prev_dc_inv_8 prev_dc_inv_2 $0))",
    "(lam (map (lam (mod $0 prev_dc_inv_2)) $0))",
    "(lam (prev_dc_inv_8 prev_dc_inv_5 $0))",
    "(lam (map (lam (mod $0 prev_dc_inv_5)) $0))",
    "(lam (prev_dc_inv_15 $0 1))",
    "(lam (prev_dc_inv_8 1 $0))",
    "(lam (map (lam (+ $0 $0)) $0))",
    "(lam (map (lam $0) (map (lam (+ $0 $0)) $0)))",
    "(lam (map (lam (* prev_dc_inv_0 $0)) $0))",
    "(lam (map (lam (* $0 prev_dc_inv_0)) $0))",
    "(lam (map (lam (* prev_dc_inv_5 $0)) $0))",
    "(lam (map (lam (* $0 prev_dc_inv_5)) $0))",
    "(lam (prev_dc_inv_18 $0))",
    "(lam (prev_dc_inv_18 (prev_dc_inv_18 $0)))",
    "(lam (map (lam (index $0 $1)) (range (length (cdr $0)))))",
    "(lam (map (lam (index $0 $1)) (range (length (cdr (prev_dc_inv_9 prev_dc_inv_2 $0))))))",
    "(lam (prev_dc_inv_4 $0 $0))",
    "(lam (cons (car $0) $0))",
    "(lam (prev_dc_inv_4 (cdr $0) $0))",
    "(lam (cons (index 1 $0) $0))",
    "(lam (prev_dc_inv_4 (prev_dc_inv_3 (cdr $0)) $0))",
    "(lam (prev_dc_inv_4 (cdr (prev_dc_inv_3 $0)) $0))",
    "(lam (cons 0 $0))",
    "(lam (prev_dc_inv_4 (range prev_dc_inv_0) $0))",
    "(lam (fold $0 1 (lam (lam (* $0 $1)))))",
    "(lam (fold $0 1 (lam (lam (* $1 $0)))))",
    "(lam (prev_dc_inv_4 $0 (prev_dc_inv_3 $0)))",
    "(lam (prev_dc_inv_4 $0 (cdr (cdr $0))))",
    "(lam (prev_dc_inv_4 $0 (cons (index 1 $0) (prev_dc_inv_4 (prev_dc_inv_3 $0) (prev_dc_inv_3 (prev_dc_inv_3 $0))))))",
    "(lam (prev_dc_inv_18 $0))",
    "(lam (prev_dc_inv_13 $0 (lam (is-prime (mod (+ $0 $0) prev_dc_inv_2)))))",
    "(lam (prev_dc_inv_13 $0 (lam (prev_dc_inv_10 $0))))",
    "(lam (prev_dc_inv_13 $0 (lam (gt? (mod $0 prev_dc_inv_0) 0))))",
    "(lam (fold $0 $0 (lam (lam (cons $1 $0)))))",
    "(lam (fold $0 (map (lam $0) $0) (lam (lam (cons $1 $0)))))",
    "(lam (map (lam (car $1)) $0))",
    "(lam (map (lam (index 0 $1)) $0))",
    "(lam (map (lam (index prev_dc_inv_0 $1)) $0))",
    "(lam (map (lam (index prev_dc_inv_0 (prev_dc_inv_11 $1))) $0))",
    "(lam (fold $0 empty (lam (lam (prev_dc_inv_12 $0 $1)))))",
    "(lam (fold $0 $0 (lam (lam (prev_dc_inv_12 (cdr $0) $1)))))",
    "(lam (prev_dc_inv_4 $0 empty))",
    "(lam (prev_dc_inv_4 $0 (range 0)))",
    "(lam (prev_dc_inv_11 $0))",
    "(lam (prev_dc_inv_11 (prev_dc_inv_11 $0)))",
    "(lam (prev_dc_inv_3 (prev_dc_inv_11 (prev_dc_inv_4 $0 $0))))",
    "(lam (prev_dc_inv_3 (prev_dc_inv_11 (cons prev_dc_inv_0 $0))))",
    "(lam (cdr (prev_dc_inv_11 $0)))",
    "(lam (cdr (prev_dc_inv_11 (prev_dc_inv_11 $0))))",
    "(lam (prev_dc_inv_14 $0))",
    "(lam (prev_dc_inv_14 (map (lam $0) $0)))",
    "(lam (cdr (prev_dc_inv_11 (cdr $0))))",
    "(lam (cdr (prev_dc_inv_11 (prev_dc_inv_11 (cdr $0)))))",
    "(lam (prev_dc_inv_11 (prev_dc_inv_3 $0)))",
    "(lam (cdr (prev_dc_inv_14 $0)))",
    "(lam (prev_dc_inv_14 (cdr $0)))",
    "(lam (prev_dc_inv_14 (prev_dc_inv_4 $0 (prev_dc_inv_3 $0))))",
    "(lam (prev_dc_inv_3 (cdr (prev_dc_inv_11 $0))))",
    "(lam (cdr (prev_dc_inv_3 (prev_dc_inv_11 $0))))",
    "(lam (prev_dc_inv_3 (prev_dc_inv_14 $0)))",
    "(lam (cdr (prev_dc_inv_11 (prev_dc_inv_3 $0))))",
    "(lam (prev_dc_inv_14 (prev_dc_inv_3 $0)))",
    "(lam (prev_dc_inv_14 (cdr (cdr $0))))",
    "(lam (prev_dc_inv_3 (prev_dc_inv_11 (prev_dc_inv_3 $0))))",
    "(lam (cdr (prev_dc_inv_3 (prev_dc_inv_14 $0))))",
    "(lam (prev_dc_inv_11 (prev_dc_inv_3 (prev_dc_inv_3 $0))))",
    "(lam (cdr (prev_dc_inv_14 (prev_dc_inv_3 $0))))",
    "(lam (cdr $0))",
    "(lam (cdr (map (lam $0) $0)))",
    "(lam (prev_dc_inv_4 $0 empty))",
    "(lam (prev_dc_inv_4 $0 (range 0)))",
    "(lam (prev_dc_inv_4 $0 (prev_dc_inv_4 (cdr $0) empty)))",
    "(lam (prev_dc_inv_3 (prev_dc_inv_11 (prev_dc_inv_4 $0 (prev_dc_inv_4 $0 $0)))))",
    "(lam (cdr (prev_dc_inv_11 (cons prev_dc_inv_0 $0))))",
    "(lam (cdr (prev_dc_inv_11 (cons prev_dc_inv_2 $0))))",
    "(lam (prev_dc_inv_11 $0))",
    "(lam (prev_dc_inv_11 (prev_dc_inv_11 $0)))",
    "(lam (prev_dc_inv_13 (range (* prev_dc_inv_2 prev_dc_inv_0)) (lam (prev_dc_inv_1 (prev_dc_inv_16 $1 $0)))))",
    "(lam (prev_dc_inv_13 (range (* prev_dc_inv_0 prev_dc_inv_2)) (lam (prev_dc_inv_1 (prev_dc_inv_16 $1 $0)))))",
    "(lam (+ (prev_dc_inv_19 $0 $0 (lam (empty? $0))) 1))",
    "(lam (+ 1 (prev_dc_inv_19 $0 $0 (lam (empty? $0)))))",
    "(lam (prev_dc_inv_13 $0 (lam (is-square $0))))",
    "(lam (prev_dc_inv_13 (map (lam $0) $0) (lam (is-square $0))))",
    "(lam (prev_dc_inv_13 $0 (lam (is-prime $0))))",
    "(lam (prev_dc_inv_13 $0 (lam (prev_dc_inv_1 $0))))",
    "(lam (prev_dc_inv_13 $0 (lam (gt? $0 (prev_dc_inv_17 empty)))))",
    "(lam (prev_dc_inv_13 $0 (lam (gt? 1 $0))))",
    "(lam (prev_dc_inv_13 $0 (lam (eq? $0 0))))",
    "(lam (prev_dc_inv_13 $0 (lam (eq? $0 1))))",
    "(lam (prev_dc_inv_13 $0 (lam (eq? 1 $0))))",
    "(lam (prev_dc_inv_13 $0 (lam (gt? prev_dc_inv_0 $0))))",
    "(lam (prev_dc_inv_13 $0 (lam (prev_dc_inv_1 (- prev_dc_inv_0 $0)))))",
    "(lam (prev_dc_inv_13 $0 (lam (gt? $0 prev_dc_inv_0))))",
    "(lam (prev_dc_inv_13 $0 (lam (prev_dc_inv_1 (- $0 prev_dc_inv_0)))))"
  ],
  "invs": [
    {
      "body": "(lam (prev_dc_inv_13 $0 (lam (#0 $0))))",
      "dreamcoder": "#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda ($2 $0)))))",
      "arity": 1,
      "name": "fn_20",
      "rewritten": [
        "(lam (prev_dc_inv_6 1 $0))",
        "(lam (prev_dc_inv_6 (- prev_dc_inv_2 prev_dc_inv_0) $0))",
        "(lam (prev_dc_inv_6 prev_dc_inv_0 $0))",
        "(lam (map (lam (+ 1 (+ $0 (+ 1 1)))) $0))",
        "(lam (prev_dc_inv_6 prev_dc_inv_2 $0))",
        "(lam (map (lam (+ prev_dc_inv_2 $0)) $0))",
        "(lam (prev_dc_inv_12 $0 (index 1 $0)))",
        "(lam (prev_dc_inv_12 $0 (car (cdr $0))))",
        "(lam (prev_dc_inv_12 $0 (car (prev_dc_inv_3 $0))))",
        "(lam (prev_dc_inv_12 $0 (index 1 (cdr $0))))",
        "(lam (prev_dc_inv_12 $0 (index prev_dc_inv_0 $0)))",
        "(lam (prev_dc_inv_12 $0 (index prev_dc_inv_0 (prev_dc_inv_11 $0))))",
        "(lam (prev_dc_inv_12 $0 0))",
        "(lam (prev_dc_inv_12 $0 (prev_dc_inv_17 empty)))",
        "(lam (prev_dc_inv_12 $0 prev_dc_inv_0))",
        "(lam (prev_dc_inv_12 (map (lam $0) $0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_12 $0 prev_dc_inv_2))",
        "(lam (prev_dc_inv_12 $0 (fold $0 prev_dc_inv_2 (lam (lam prev_dc_inv_2)))))",
        "(lam (prev_dc_inv_12 $0 prev_dc_inv_5))",
        "(lam (prev_dc_inv_12 (map (lam $0) $0) prev_dc_inv_5))",
        "(lam (prev_dc_inv_7 (- prev_dc_inv_0 prev_dc_inv_2) $0))",
        "(lam (prev_dc_inv_7 (- prev_dc_inv_2 prev_dc_inv_5) $0))",
        "(lam (prev_dc_inv_7 0 $0))",
        "(lam (map (lam (prev_dc_inv_1 $0)) $0))",
        "(lam (prev_dc_inv_7 prev_dc_inv_0 $0))",
        "(lam (prev_dc_inv_7 prev_dc_inv_0 (map (lam $0) $0)))",
        "(lam (prev_dc_inv_9 prev_dc_inv_0 $0))",
        "(lam (prev_dc_inv_9 prev_dc_inv_0 (map (lam $0) $0)))",
        "(lam (prev_dc_inv_9 prev_dc_inv_2 $0))",
        "(lam (prev_dc_inv_9 prev_dc_inv_2 (map (lam $0) $0)))",
        "(lam (map (lam (eq? prev_dc_inv_0 $0)) $0))",
        "(lam (map (lam (eq? $0 prev_dc_inv_0)) $0))",
        "(lam (map (lam (eq? prev_dc_inv_2 $0)) $0))",
        "(lam (map (lam (eq? $0 prev_dc_inv_2)) $0))",
        "(lam (map (lam (- 1 $0)) $0))",
        "(lam (prev_dc_inv_15 $0 (- prev_dc_inv_0 1)))",
        "(lam (prev_dc_inv_15 $0 prev_dc_inv_0))",
        "(lam (prev_dc_inv_15 (map (lam $0) $0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_15 $0 prev_dc_inv_5))",
        "(lam (prev_dc_inv_15 $0 (+ 1 prev_dc_inv_2)))",
        "(lam (prev_dc_inv_8 prev_dc_inv_2 (prev_dc_inv_6 prev_dc_inv_0 $0)))",
        "(lam (map (lam (mod (+ prev_dc_inv_0 $0) prev_dc_inv_2)) $0))",
        "(lam (prev_dc_inv_15 $0 prev_dc_inv_0))",
        "(lam (prev_dc_inv_15 (map (lam $0) $0) prev_dc_inv_0))",
        "(lam (map (lam (- 1 $0)) $0))",
        "(lam (prev_dc_inv_15 $0 (- prev_dc_inv_0 1)))",
        "(lam (prev_dc_inv_15 (prev_dc_inv_15 $0 prev_dc_inv_0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_15 (prev_dc_inv_15 $0 prev_dc_inv_2) prev_dc_inv_0))",
        "(lam (prev_dc_inv_15 $0 prev_dc_inv_2))",
        "(lam (prev_dc_inv_15 (prev_dc_inv_6 prev_dc_inv_2 $0) prev_dc_inv_2))",
        "(lam (prev_dc_inv_16 (cdr $0) (car $0)))",
        "(lam (- (prev_dc_inv_16 $0 (car $0)) 1))",
        "(lam (prev_dc_inv_16 $0 0))",
        "(lam (prev_dc_inv_16 $0 (prev_dc_inv_17 $0)))",
        "(lam (prev_dc_inv_16 $0 prev_dc_inv_0))",
        "(lam (prev_dc_inv_16 (prev_dc_inv_18 $0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_17 $0))",
        "(lam (prev_dc_inv_16 $0 prev_dc_inv_5))",
        "(lam (cdr (prev_dc_inv_3 $0)))",
        "(lam (prev_dc_inv_3 (map (lam $0) (cdr $0))))",
        "(lam (cdr (prev_dc_inv_3 (prev_dc_inv_3 $0))))",
        "(lam (fold (range prev_dc_inv_5) $0 (lam (lam (cdr $0)))))",
        "(lam (empty? $0))",
        "(lam (empty? (prev_dc_inv_7 prev_dc_inv_0 $0)))",
        "(lam (prev_dc_inv_13 $0 (lam (empty? (prev_dc_inv_18 (map (lam $1) $1))))))",
        "(lam (prev_dc_inv_13 $0 (lam (empty? (prev_dc_inv_18 (prev_dc_inv_12 empty $0))))))",
        "(lam (gt? (prev_dc_inv_16 $0 (car $0)) 1))",
        "(lam (prev_dc_inv_1 (prev_dc_inv_16 (cdr $0) (car $0))))",
        "(lam (prev_dc_inv_1 (prev_dc_inv_17 (prev_dc_inv_6 prev_dc_inv_5 $0))))",
        "(lam (is-prime (+ prev_dc_inv_2 (prev_dc_inv_17 (prev_dc_inv_6 prev_dc_inv_5 $0)))))",
        "(lam (prev_dc_inv_1 (prev_dc_inv_16 $0 prev_dc_inv_0)))",
        "(lam (gt? (prev_dc_inv_16 $0 prev_dc_inv_0) 0))",
        "(lam (prev_dc_inv_1 (prev_dc_inv_17 $0)))",
        "(lam (prev_dc_inv_1 (prev_dc_inv_16 $0 prev_dc_inv_5)))",
        "(lam (car $0))",
        "(lam (index 0 $0))",
        "(lam (car $0))",
        "(lam (index 0 $0))",
        "(lam (car (prev_dc_inv_3 $0)))",
        "(lam (index 1 (cdr $0)))",
        "(lam (index prev_dc_inv_2 $0))",
        "(lam (index prev_dc_inv_0 (cdr $0)))",
        "(lam (empty? (prev_dc_inv_18 $0)))",
        "(lam (empty? (prev_dc_inv_18 (prev_dc_inv_18 $0))))",
        "(lam (empty? (prev_dc_inv_13 $0 (lam (prev_dc_inv_10 $0)))))",
        "(lam (empty? (prev_dc_inv_13 (prev_dc_inv_8 prev_dc_inv_0 $0) (lam (prev_dc_inv_1 $0)))))",
        "(lam (eq? (length $0) (length (prev_dc_inv_13 $0 (lam (is-prime $0))))))",
        "(lam (eq? (length (prev_dc_inv_13 $0 (lam (is-prime $0)))) (length $0)))",
        "(lam (prev_dc_inv_19 $0 $0 (lam (empty? $0))))",
        "(lam (fold $0 prev_dc_inv_0 (lam (lam (if (gt? $0 $1) $0 $1)))))",
        "(lam (prev_dc_inv_19 $0 (range (* prev_dc_inv_0 prev_dc_inv_5)) (lam (is-prime (- prev_dc_inv_2 (length $0))))))",
        "(lam (prev_dc_inv_19 $0 (range (* prev_dc_inv_2 prev_dc_inv_2)) (lam (is-prime (- prev_dc_inv_2 (length $0))))))",
        "(lam (car (prev_dc_inv_13 $0 (lam (eq? prev_dc_inv_0 (length (prev_dc_inv_13 $1 (lam (gt? $1 $0)))))))))",
        "(lam (car (prev_dc_inv_13 $0 (lam (eq? (length (prev_dc_inv_13 $1 (lam (gt? $1 $0)))) prev_dc_inv_0)))))",
        "(lam (prev_dc_inv_19 $0 (range (* prev_dc_inv_0 prev_dc_inv_5)) (lam (is-prime (- (- (length $1) prev_dc_inv_0) (length $0))))))",
        "(lam (prev_dc_inv_19 $0 (range (* prev_dc_inv_0 prev_dc_inv_5)) (lam (is-prime (- (- (length $1) (length $0)) prev_dc_inv_0)))))",
        "(lam (index (length (cdr $0)) $0))",
        "(lam (index (- (length $0) 1) $0))",
        "(lam (length $0))",
        "(lam (length (prev_dc_inv_7 prev_dc_inv_0 $0)))",
        "(lam (prev_dc_inv_15 $0 1))",
        "(lam (prev_dc_inv_8 1 $0))",
        "(lam (prev_dc_inv_8 (- prev_dc_inv_0 1) $0))",
        "(lam (prev_dc_inv_8 (- 1 prev_dc_inv_0) $0))",
        "(lam (prev_dc_inv_8 prev_dc_inv_0 $0))",
        "(lam (map (lam (mod $0 prev_dc_inv_0)) $0))",
        "(lam (prev_dc_inv_8 prev_dc_inv_2 $0))",
        "(lam (map (lam (mod $0 prev_dc_inv_2)) $0))",
        "(lam (prev_dc_inv_8 prev_dc_inv_5 $0))",
        "(lam (map (lam (mod $0 prev_dc_inv_5)) $0))",
        "(lam (prev_dc_inv_15 $0 1))",
        "(lam (prev_dc_inv_8 1 $0))",
        "(lam (map (lam (+ $0 $0)) $0))",
        "(lam (map (lam $0) (map (lam (+ $0 $0)) $0)))",
        "(lam (map (lam (* prev_dc_inv_0 $0)) $0))",
        "(lam (map (lam (* $0 prev_dc_inv_0)) $0))",
        "(lam (map (lam (* prev_dc_inv_5 $0)) $0))",
        "(lam (map (lam (* $0 prev_dc_inv_5)) $0))",
        "(lam (prev_dc_inv_18 $0))",
        "(lam (prev_dc_inv_18 (prev_dc_inv_18 $0)))",
        "(lam (map (lam (index $0 $1)) (range (length (cdr $0)))))",
        "(lam (map (lam (index $0 $1)) (range (length (cdr (prev_dc_inv_9 prev_dc_inv_2 $0))))))",
        "(lam (prev_dc_inv_4 $0 $0))",
        "(lam (cons (car $0) $0))",
        "(lam (prev_dc_inv_4 (cdr $0) $0))",
        "(lam (cons (index 1 $0) $0))",
        "(lam (prev_dc_inv_4 (prev_dc_inv_3 (cdr $0)) $0))",
        "(lam (prev_dc_inv_4 (cdr (prev_dc_inv_3 $0)) $0))",
        "(lam (cons 0 $0))",
        "(lam (prev_dc_inv_4 (range prev_dc_inv_0) $0))",
        "(lam (fold $0 1 (lam (lam (* $0 $1)))))",
        "(lam (fold $0 1 (lam (lam (* $1 $0)))))",
        "(lam (prev_dc_inv_4 $0 (prev_dc_inv_3 $0)))",
        "(lam (prev_dc_inv_4 $0 (cdr (cdr $0))))",
        "(lam (prev_dc_inv_4 $0 (cons (index 1 $0) (prev_dc_inv_4 (prev_dc_inv_3 $0) (prev_dc_inv_3 (prev_dc_inv_3 $0))))))",
        "(lam (prev_dc_inv_18 $0))",
        "(lam (prev_dc_inv_13 $0 (lam (is-prime (mod (+ $0 $0) prev_dc_inv_2)))))",
        "(fn_20 prev_dc_inv_10)",
        "(lam (prev_dc_inv_13 $0 (lam (gt? (mod $0 prev_dc_inv_0) 0))))",
        "(lam (fold $0 $0 (lam (lam (cons $1 $0)))))",
        "(lam (fold $0 (map (lam $0) $0) (lam (lam (cons $1 $0)))))",
        "(lam (map (lam (car $1)) $0))",
        "(lam (map (lam (index 0 $1)) $0))",
        "(lam (map (lam (index prev_dc_inv_0 $1)) $0))",
        "(lam (map (lam (index prev_dc_inv_0 (prev_dc_inv_11 $1))) $0))",
        "(lam (fold $0 empty (lam (lam (prev_dc_inv_12 $0 $1)))))",
        "(lam (fold $0 $0 (lam (lam (prev_dc_inv_12 (cdr $0) $1)))))",
        "(lam (prev_dc_inv_4 $0 empty))",
        "(lam (prev_dc_inv_4 $0 (range 0)))",
        "(lam (prev_dc_inv_11 $0))",
        "(lam (prev_dc_inv_11 (prev_dc_inv_11 $0)))",
        "(lam (prev_dc_inv_3 (prev_dc_inv_11 (prev_dc_inv_4 $0 $0))))",
        "(lam (prev_dc_inv_3 (prev_dc_inv_11 (cons prev_dc_inv_0 $0))))",
        "(lam (cdr (prev_dc_inv_11 $0)))",
        "(lam (cdr (prev_dc_inv_11 (prev_dc_inv_11 $0))))",
        "(lam (prev_dc_inv_14 $0))",
        "(lam (prev_dc_inv_14 (map (lam $0) $0)))",
        "(lam (cdr (prev_dc_inv_11 (cdr $0))))",
        "(lam (cdr (prev_dc_inv_11 (prev_dc_inv_11 (cdr $0)))))",
        "(lam (prev_dc_inv_11 (prev_dc_inv_3 $0)))",
        "(lam (cdr (prev_dc_inv_14 $0)))",
        "(lam (prev_dc_inv_14 (cdr $0)))",
        "(lam (prev_dc_inv_14 (prev_dc_inv_4 $0 (prev_dc_inv_3 $0))))",
        "(lam (prev_dc_inv_3 (cdr (prev_dc_inv_11 $0))))",
        "(lam (cdr (prev_dc_inv_3 (prev_dc_inv_11 $0))))",
        "(lam (prev_dc_inv_3 (prev_dc_inv_14 $0)))",
        "(lam (cdr (prev_dc_inv_11 (prev_dc_inv_3 $0))))",
        "(lam (prev_dc_inv_14 (prev_dc_inv_3 $0)))",
        "(lam (prev_dc_inv_14 (cdr (cdr $0))))",
        "(lam (prev_dc_inv_3 (prev_dc_inv_11 (prev_dc_inv_3 $0))))",
        "(lam (cdr (prev_dc_inv_3 (prev_dc_inv_14 $0))))",
        "(lam (prev_dc_inv_11 (prev_dc_inv_3 (prev_dc_inv_3 $0))))",
        "(lam (cdr (prev_dc_inv_14 (prev_dc_inv_3 $0))))",
        "(lam (cdr $0))",
        "(lam (cdr (map (lam $0) $0)))",
        "(lam (prev_dc_inv_4 $0 empty))",
        "(lam (prev_dc_inv_4 $0 (range 0)))",
        "(lam (prev_dc_inv_4 $0 (prev_dc_inv_4 (cdr $0) empty)))",
        "(lam (prev_dc_inv_3 (prev_dc_inv_11 (prev_dc_inv_4 $0 (prev_dc_inv_4 $0 $0)))))",
        "(lam (cdr (prev_dc_inv_11 (cons prev_dc_inv_0 $0))))",
        "(lam (cdr (prev_dc_inv_11 (cons prev_dc_inv_2 $0))))",
        "(lam (prev_dc_inv_11 $0))",
        "(lam (prev_dc_inv_11 (prev_dc_inv_11 $0)))",
        "(lam (prev_dc_inv_13 (range (* prev_dc_inv_2 prev_dc_inv_0)) (lam (prev_dc_inv_1 (prev_dc_inv_16 $1 $0)))))",
        "(lam (prev_dc_inv_13 (range (* prev_dc_inv_0 prev_dc_inv_2)) (lam (prev_dc_inv_1 (prev_dc_inv_16 $1 $0)))))",
        "(lam (+ (prev_dc_inv_19 $0 $0 (lam (empty? $0))) 1))",
        "(lam (+ 1 (prev_dc_inv_19 $0 $0 (lam (empty? $0)))))",
        "(fn_20 is-square)",
        "(lam (prev_dc_inv_13 (map (lam $0) $0) (lam (is-square $0))))",
        "(fn_20 is-prime)",
        "(fn_20 prev_dc_inv_1)",
        "(lam (prev_dc_inv_13 $0 (lam (gt? $0 (prev_dc_inv_17 empty)))))",
        "(fn_20 (gt? 1))",
        "(lam (prev_dc_inv_13 $0 (lam (eq? $0 0))))",
        "(lam (prev_dc_inv_13 $0 (lam (eq? $0 1))))",
        "(fn_20 (eq? 1))",
        "(fn_20 (gt? prev_dc_inv_0))",
        "(lam (prev_dc_inv_13 $0 (lam (prev_dc_inv_1 (- prev_dc_inv_0 $0)))))",
        "(lam (prev_dc_inv_13 $0 (lam (gt? $0 prev_dc_inv_0))))",
        "(lam (prev_dc_inv_13 $0 (lam (prev_dc_inv_1 (- $0 prev_dc_inv_0)))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) 1 $0))",
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) (- #(+ 1 #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1))) $0))",
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 (+ 1 1)) $0))",
        "(lambda (map (lambda (+ 1 (+ $0 (+ 1 1)))) $0))",
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0))",
        "(lambda (map (lambda (+ #(+ 1 #(+ 1 (+ 1 1))) $0)) $0))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 $0)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (cdr $0))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 (cdr $0))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index #(+ 1 (+ 1 1)) $0)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index #(+ 1 (+ 1 1)) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 0))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) empty)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 #(+ 1 (+ 1 1)))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (fold $0 #(+ 1 #(+ 1 (+ 1 1))) (lambda (lambda #(+ 1 #(+ 1 (+ 1 1))))))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (map (lambda $0) $0) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
        "(lambda (#(lambda (map (lambda (gt? $0 $1)))) (- #(+ 1 (+ 1 1)) #(+ 1 #(+ 1 (+ 1 1)))) $0))",
        "(lambda (#(lambda (map (lambda (gt? $0 $1)))) (- #(+ 1 #(+ 1 (+ 1 1))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)) $0))",
        "(lambda (#(lambda (map (lambda (gt? $0 $1)))) 0 $0))",
        "(lambda (map (lambda (#(lambda (gt? $0 0)) $0)) $0))",
        "(lambda (#(lambda (map (lambda (gt? $0 $1)))) #(+ 1 (+ 1 1)) $0))",
        "(lambda (#(lambda (map (lambda (gt? $0 $1)))) #(+ 1 (+ 1 1)) (map (lambda $0) $0)))",
        "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 (+ 1 1)) $0))",
        "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 (+ 1 1)) (map (lambda $0) $0)))",
        "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 #(+ 1 (+ 1 1))) $0))",
        "(lambda (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 #(+ 1 (+ 1 1))) (map (lambda $0) $0)))",
        "(lambda (map (lambda (eq? #(+ 1 (+ 1 1)) $0)) $0))",
        "(lambda (map (lambda (eq? $0 #(+ 1 (+ 1 1)))) $0))",
        "(lambda (map (lambda (eq? #(+ 1 #(+ 1 (+ 1 1))) $0)) $0))",
        "(lambda (map (lambda (eq? $0 #(+ 1 #(+ 1 (+ 1 1))))) $0))",
        "(lambda (map (lambda (- 1 $0)) $0))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 (- #(+ 1 (+ 1 1)) 1)))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 (+ 1 #(+ 1 #(+ 1 (+ 1 1))))))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 (+ 1 1)) $0)))",
        "(lambda (map (lambda (mod (+ #(+ 1 (+ 1 1)) $0) #(+ 1 #(+ 1 (+ 1 1))))) $0))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
        "(lambda (map (lambda (- 1 $0)) $0))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 (- #(+ 1 (+ 1 1)) 1)))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 #(+ 1 (+ 1 1)))) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 #(+ 1 #(+ 1 (+ 1 1)))))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0) #(+ 1 #(+ 1 (+ 1 1)))))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) (cdr $0) (car $0)))",
        "(lambda (- (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 (car $0)) 1))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 0))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0)))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))",
        "(lambda (cdr (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (#(lambda (cdr (cdr $0))) (map (lambda $0) (cdr $0))))",
        "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (fold (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)) $0 (lambda (lambda (cdr $0)))))",
        "(lambda (empty? $0))",
        "(lambda (empty? (#(lambda (map (lambda (gt? $0 $1)))) #(+ 1 (+ 1 1)) $0)))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (map (lambda $1) $1))))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) empty $0))))))",
        "(lambda (gt? (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 (car $0)) 1))",
        "(lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) (cdr $0) (car $0))))",
        "(lambda (#(lambda (gt? $0 0)) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) (#(lambda (map (lambda (+ $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))",
        "(lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) (#(lambda (map (lambda (+ $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0)))))",
        "(lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1)))))",
        "(lambda (gt? (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1))) 0))",
        "(lambda (#(lambda (gt? $0 0)) (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) $0)))",
        "(lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))))",
        "(lambda (car $0))",
        "(lambda (index 0 $0))",
        "(lambda (car $0))",
        "(lambda (index 0 $0))",
        "(lambda (car (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (index 1 (cdr $0)))",
        "(lambda (index #(+ 1 #(+ 1 (+ 1 1))) $0))",
        "(lambda (index #(+ 1 (+ 1 1)) (cdr $0)))",
        "(lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0)))",
        "(lambda (empty? (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0))))",
        "(lambda (empty? (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 (+ 1 1))))) $0)))))",
        "(lambda (empty? (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0) (lambda (#(lambda (gt? $0 0)) $0)))))",
        "(lambda (eq? (length $0) (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime $0))))))",
        "(lambda (eq? (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime $0)))) (length $0)))",
        "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 $0 (lambda (empty? $0))))",
        "(lambda (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (if (gt? $0 $1) $0 $1)))))",
        "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 (range (* #(+ 1 (+ 1 1)) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) (lambda (is-prime (- #(+ 1 #(+ 1 (+ 1 1))) (length $0))))))",
        "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 (range (* #(+ 1 #(+ 1 (+ 1 1))) #(+ 1 #(+ 1 (+ 1 1))))) (lambda (is-prime (- #(+ 1 #(+ 1 (+ 1 1))) (length $0))))))",
        "(lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ 1 (+ 1 1)) (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (gt? $1 $0)))))))))",
        "(lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (gt? $1 $0)))) #(+ 1 (+ 1 1)))))))",
        "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 (range (* #(+ 1 (+ 1 1)) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) (lambda (is-prime (- (- (length $1) #(+ 1 (+ 1 1))) (length $0))))))",
        "(lambda (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 (range (* #(+ 1 (+ 1 1)) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) (lambda (is-prime (- (- (length $1) (length $0)) #(+ 1 (+ 1 1)))))))",
        "(lambda (index (length (cdr $0)) $0))",
        "(lambda (index (- (length $0) 1) $0))",
        "(lambda (length $0))",
        "(lambda (length (#(lambda (map (lambda (gt? $0 $1)))) #(+ 1 (+ 1 1)) $0)))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 1))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) (- #(+ 1 (+ 1 1)) 1) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) (- 1 #(+ 1 (+ 1 1))) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0))",
        "(lambda (map (lambda (mod $0 #(+ 1 (+ 1 1)))) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 (+ 1 1))) $0))",
        "(lambda (map (lambda (mod $0 #(+ 1 #(+ 1 (+ 1 1))))) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))",
        "(lambda (map (lambda (mod $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) $0))",
        "(lambda (#(lambda (lambda (#(lambda (map (lambda (mod $0 $1)))) $0 (#(lambda (map (lambda (+ $0 $1)))) 1 $1)))) $0 1))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
        "(lambda (map (lambda (+ $0 $0)) $0))",
        "(lambda (map (lambda $0) (map (lambda (+ $0 $0)) $0)))",
        "(lambda (map (lambda (* #(+ 1 (+ 1 1)) $0)) $0))",
        "(lambda (map (lambda (* $0 #(+ 1 (+ 1 1)))) $0))",
        "(lambda (map (lambda (* #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0)) $0))",
        "(lambda (map (lambda (* $0 #(+ #(+ 1 #(+ 1 (+ 1 1))) 1))) $0))",
        "(lambda (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0))",
        "(lambda (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0)))",
        "(lambda (map (lambda (index $0 $1)) (range (length (cdr $0)))))",
        "(lambda (map (lambda (index $0 $1)) (range (length (cdr (#(lambda (map (lambda (eq? (mod $0 $1) 0)))) #(+ 1 #(+ 1 (+ 1 1))) $0))))))",
        "(lambda (#(lambda (cons (car $0))) $0 $0))",
        "(lambda (cons (car $0) $0))",
        "(lambda (#(lambda (cons (car $0))) (cdr $0) $0))",
        "(lambda (cons (index 1 $0) $0))",
        "(lambda (#(lambda (cons (car $0))) (#(lambda (cdr (cdr $0))) (cdr $0)) $0))",
        "(lambda (#(lambda (cons (car $0))) (cdr (#(lambda (cdr (cdr $0))) $0)) $0))",
        "(lambda (cons 0 $0))",
        "(lambda (#(lambda (cons (car $0))) (range #(+ 1 (+ 1 1))) $0))",
        "(lambda (fold $0 1 (lambda (lambda (* $0 $1)))))",
        "(lambda (fold $0 1 (lambda (lambda (* $1 $0)))))",
        "(lambda (#(lambda (cons (car $0))) $0 (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (#(lambda (cons (car $0))) $0 (cdr (cdr $0))))",
        "(lambda (#(lambda (cons (car $0))) $0 (cons (index 1 $0) (#(lambda (cons (car $0))) (#(lambda (cdr (cdr $0))) $0) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))))",
        "(lambda (#(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (+ #(+ 1 #(+ 1 (+ 1 1))) (mod $0 #(+ 1 #(+ 1 (+ 1 1))))))))) $0))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime (mod (+ $0 $0) #(+ 1 #(+ 1 (+ 1 1))))))))",
        "(#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda ($2 $0))))) #(lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 (+ 1 1))))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? (mod $0 #(+ 1 (+ 1 1))) 0))))",
        "(lambda (fold $0 $0 (lambda (lambda (cons $1 $0)))))",
        "(lambda (fold $0 (map (lambda $0) $0) (lambda (lambda (cons $1 $0)))))",
        "(lambda (map (lambda (car $1)) $0))",
        "(lambda (map (lambda (index 0 $1)) $0))",
        "(lambda (map (lambda (index #(+ 1 (+ 1 1)) $1)) $0))",
        "(lambda (map (lambda (index #(+ 1 (+ 1 1)) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $1))) $0))",
        "(lambda (fold $0 empty (lambda (lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 $1)))))",
        "(lambda (fold $0 $0 (lambda (lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (cdr $0) $1)))))",
        "(lambda (#(lambda (cons (car $0))) $0 empty))",
        "(lambda (#(lambda (cons (car $0))) $0 (range 0)))",
        "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))",
        "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0)))",
        "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cons (car $0))) $0 $0))))",
        "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cons #(+ 1 (+ 1 1)) $0))))",
        "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0)))",
        "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))))",
        "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0))",
        "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (map (lambda $0) $0)))",
        "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cdr $0))))",
        "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cdr $0)))))",
        "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (cdr (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0)))",
        "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (cdr $0)))",
        "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (#(lambda (cons (car $0))) $0 (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (#(lambda (cdr (cdr $0))) (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))))",
        "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))))",
        "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0)))",
        "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (cdr (cdr $0))))",
        "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) $0))))",
        "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (cdr (#(lambda (map (lambda (index $0 (cdr $1))) (range #(+ #(+ 1 #(+ 1 (+ 1 1))) 1)))) (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (cdr $0))",
        "(lambda (cdr (map (lambda $0) $0)))",
        "(lambda (#(lambda (cons (car $0))) $0 empty))",
        "(lambda (#(lambda (cons (car $0))) $0 (range 0)))",
        "(lambda (#(lambda (cons (car $0))) $0 (#(lambda (cons (car $0))) (cdr $0) empty)))",
        "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (cons (car $0))) $0 (#(lambda (cons (car $0))) $0 $0)))))",
        "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cons #(+ 1 (+ 1 1)) $0))))",
        "(lambda (cdr (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (cons #(+ 1 #(+ 1 (+ 1 1))) $0))))",
        "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0))",
        "(lambda (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) (#(lambda (map (lambda (index $0 $1)) (range #(+ 1 #(+ 1 (+ 1 1)))))) $0)))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (range (* #(+ 1 #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1)))) (lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $1 $0)))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (range (* #(+ 1 (+ 1 1)) #(+ 1 #(+ 1 (+ 1 1))))) (lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (eq? $0 $1)))))) $1 $0)))))",
        "(lambda (+ (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 $0 (lambda (empty? $0))) 1))",
        "(lambda (+ 1 (#(lambda (lambda (lambda (car (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda ($1 (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $3 (lambda (gt? $0 $1)))))))))) $0 $0 (lambda (empty? $0)))))",
        "(#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda ($2 $0))))) is-square)",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (map (lambda $0) $0) (lambda (is-square $0))))",
        "(#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda ($2 $0))))) is-prime)",
        "(#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda ($2 $0))))) #(lambda (gt? $0 0)))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? $0 (#(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? #(+ #(+ 1 #(+ 1 (+ 1 1))) 1) $0))))) empty)))))",
        "(#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda ($2 $0))))) (gt? 1))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? $0 0))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? $0 1))))",
        "(#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda ($2 $0))))) (eq? 1))",
        "(#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda ($2 $0))))) (gt? #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (- #(+ 1 (+ 1 1)) $0)))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? $0 #(+ 1 (+ 1 1))))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (- $0 #(+ 1 (+ 1 1)))))))"
      ],
      "utility": 1123,
      "expected_cost": 42438,
      "final_cost": 42438,
      "multiplier": 1.0336490880814364,
      "multiplier_wrt_orig": 1.0336490880814364,
      "num_uses": 7,
      "uses": [
        {
          "fn_20 (eq? 1)": "(lam (prev_dc_inv_13 $0 (lam (eq? 1 $0))))"
        },
        {
          "fn_20 (gt? 1)": "(lam (prev_dc_inv_13 $0 (lam (gt? 1 $0))))"
        },
        {
          "fn_20 (gt? prev_dc_inv_0)": "(lam (prev_dc_inv_13 $0 (lam (gt? prev_dc_inv_0 $0))))"
        },
        {
          "fn_20 is-prime": "(lam (prev_dc_inv_13 $0 (lam (is-prime $0))))"
        },
        {
          "fn_20 is-square": "(lam (prev_dc_inv_13 $0 (lam (is-square $0))))"
        },
        {
          "fn_20 prev_dc_inv_1": "(lam (prev_dc_inv_13 $0 (lam (prev_dc_inv_1 $0))))"
        },
        {
          "fn_20 prev_dc_inv_10": "(lam (prev_dc_inv_13 $0 (lam (prev_dc_inv_10 $0))))"
        }
      ]
    }
  ]
}