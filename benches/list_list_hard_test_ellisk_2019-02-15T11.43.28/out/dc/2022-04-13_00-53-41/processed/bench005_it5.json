{
    "bench_group": "list_list_hard_test_ellisk_2019-02-15T11.43.28",
    "bench": "bench005_it5",
    "mode": "dreamcoder",
    "run": "benches/list_list_hard_test_ellisk_2019-02-15T11.43.28/out/dc/2022-04-13_00-53-41",
    "metrics": {
        "time_binary_seconds": 140.38,
        "time_per_inv_with_rewrite": 35933.0,
        "time_per_inv_no_rewrite": 18590.5,
        "mem_peak_kb": 311284,
        "compression_ratio": 1.0499846515911184,
        "absolute_compression": 2931
    },
    "num_inventions": 2,
    "inventions": [
        {
            "name": "fn_0",
            "stitch_uncanonical": "(cdr (fn_3 #0 (+ fn_0 fn_0)))",
            "stitch_canonical": "(cdr (fn_3 #0 (+ fn_0 fn_0)))",
            "dreamcoder": "#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1))))))"
        },
        {
            "name": "fn_1",
            "stitch_uncanonical": "(fold (cdr (#1 (fn_1 #0))) #0 (lam (lam (cdr (fn_4 $0 (car $0))))))",
            "stitch_canonical": "(fold (cdr (#0 (fn_1 #1))) #1 (lam (lam (cdr (fn_4 $0 (car $0))))))",
            "dreamcoder": "#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0))))))))"
        }
    ]
}