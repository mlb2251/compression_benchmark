{
  "DSL": {
    "logVariable": -0.6547706244450957,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1))))))",
        "logProbability": -1.957332573236858
      },
      { "expression": "is-prime", "logProbability": -0.5459721009143266 },
      { "expression": "eq?", "logProbability": -0.5751314056153309 },
      { "expression": "gt?", "logProbability": -0.4924683788023212 },
      { "expression": "is-square", "logProbability": -0.6431087027663476 },
      { "expression": "empty?", "logProbability": -0.6617378680499244 },
      { "expression": "1", "logProbability": -1.4021217874467409 },
      { "expression": "+", "logProbability": -1.540708851393327 },
      { "expression": "length", "logProbability": -1.8138913314587382 },
      { "expression": "-", "logProbability": -1.906937975784301 },
      { "expression": "map", "logProbability": -1.7124269038520707 },
      { "expression": "cdr", "logProbability": -1.8302993268308962 },
      { "expression": "0", "logProbability": -1.8622214505861274 },
      { "expression": "mod", "logProbability": -1.8755989596757985 },
      { "expression": "*", "logProbability": -1.97499310911811 },
      { "expression": "cons", "logProbability": -2.031978527364035 },
      { "expression": "range", "logProbability": -2.1065323961439 },
      { "expression": "empty", "logProbability": -2.1862528676422945 },
      { "expression": "unfold", "logProbability": -2.2423492666952103 },
      { "expression": "car", "logProbability": -2.472667082827611 },
      { "expression": "index", "logProbability": -2.656199482446974 },
      { "expression": "fold", "logProbability": -2.6585895208357444 },
      { "expression": "if", "logProbability": -2.730559586851087 },
      {
        "expression": "#(lambda (gt? $0 0))",
        "logProbability": -0.5748364609624956
      },
      {
        "expression": "#(+ 1 (+ 1 1))",
        "logProbability": -1.4279084762564462
      },
      {
        "expression": "#(+ #(+ 1 (+ 1 1)) 1)",
        "logProbability": -1.6743846128452504
      },
      {
        "expression": "#(lambda (cdr (cdr $0)))",
        "logProbability": -1.8181655859709425
      },
      {
        "expression":
          "#(lambda (lambda (map (lambda (index $0 $2)) (range $0))))",
        "logProbability": -1.9235521646121985
      },
      {
        "expression": "#(lambda (map (lambda (mod $0 $1))))",
        "logProbability": -2.0158348350510575
      },
      {
        "expression":
          "#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0))))))",
        "logProbability": -1.9900781835795236
      },
      {
        "expression": "#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1)))))",
        "logProbability": -2.0582890806201273
      },
      {
        "expression":
          "#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2)))))))))",
        "logProbability": -2.152136299981286
      },
      {
        "expression":
          "#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1))))))",
        "logProbability": -2.037709813787726
      },
      {
        "expression":
          "#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0))))))))",
        "logProbability": -2.0731591750638945
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty))))))",
        "logProbability": -1.9200135163750547
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (+ $0 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (+ 1 $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (+ $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (+ #(+ 1 (+ 1 1)) $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (+ $0 (+ 1 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (+ 1 (+ $0 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (cdr (#(lambda (cdr (cdr $0))) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (length empty)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (map (lambda #(+ 1 (+ 1 1))) (range 1)) (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (+ 1 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (+ #(+ #(+ 1 (+ 1 1)) 1) 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (+ 1 #(+ #(+ 1 (+ 1 1)) 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (#(lambda (gt? $0 0)) (+ $0 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (#(lambda (gt? $0 0)) (+ 1 $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (#(lambda (gt? $0 0)) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (gt? $0 (length empty))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (gt? $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (gt? $0 #(+ 1 (+ 1 1)))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (eq? $0 1)) (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (eq? 1 $0)) (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (gt? 1 (mod $0 #(+ #(+ 1 (+ 1 1)) 1)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (gt? 1 $0)) (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 (+ 1 1)) 1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (eq? #(+ 1 (+ 1 1)) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (eq? $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (eq? #(+ #(+ 1 (+ 1 1)) 1) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (eq? $0 #(+ #(+ 1 (+ 1 1)) 1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (- 1 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (map (lambda (+ $0 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda $0) (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (if (gt? $0 #(+ 1 (+ 1 1))) 0 (+ $0 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (if (gt? $0 #(+ 1 (+ 1 1))) 0 (+ 1 $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (mod (+ #(+ 1 (+ 1 1)) $0) #(+ #(+ 1 (+ 1 1)) 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (mod (+ $0 #(+ 1 (+ 1 1))) #(+ #(+ 1 (+ 1 1)) 1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (- 1 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda $0) (map (lambda (- 1 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 (+ 1 1)) 1) (map (lambda (+ $0 1)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 (+ 1 1)) 1) (map (lambda (+ 1 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (length (cdr (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (eq? $0 (car $1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) (cdr $0) (lambda (lambda (if (eq? $1 (car $2)) $2 empty))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? 1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (eq? #(+ 1 (+ 1 1)) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 (+ #(+ #(+ 1 (+ 1 1)) 1) 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 (+ 1 #(+ #(+ 1 (+ 1 1)) 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (cdr (cdr $0))) (cdr $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (cdr (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) (map (lambda $0) (cdr $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (empty? $0))", "logLikelihood": 0.0 },
        {
          "program":
            "(lambda (empty? (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-square (mod (+ $0 $0) #(+ #(+ 1 (+ 1 1)) 1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-prime (+ #(+ 1 (+ 1 1)) (mod $0 #(+ #(+ 1 (+ 1 1)) 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (is-square (+ 1 (mod (car $0) (index (length (#(lambda (cdr (cdr $0))) $0)) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (is-square (* #(+ 1 (+ 1 1)) (mod (car $0) (index (length (#(lambda (cdr (cdr $0))) $0)) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (gt? $0 0)) (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? 1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (if (is-prime (length $0)) (is-prime (car $0)) (#(lambda (gt? $0 0)) (length $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (if (is-square (length $0)) (#(lambda (gt? $0 0)) (length $0)) (is-prime (car $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (is-prime (car (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 1) (lambda (range #(+ 1 (+ 1 1))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (is-prime (mod (- (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda $1))) #(+ 1 (+ 1 1))) #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (car $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (index 0 $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (car $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (index 0 $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (car (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (index 1 (cdr $0)))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (car (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (index 1 (cdr (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (is-prime (+ #(+ 1 (+ 1 1)) (index (length $0) (cons 0 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (is-prime (+ (index (length $0) (cons 0 $0)) #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (gt? $0 0)) (fold $0 1 (lambda (lambda (- $0 (mod $1 #(+ 1 (+ 1 1)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (eq? 1 (fold $0 1 (lambda (lambda (- $0 (mod $1 #(+ 1 (+ 1 1)))))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (empty? (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda (if (is-prime $1) empty $2))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (is-prime #(+ 1 (+ 1 1))) (lambda (lambda (is-prime (if $0 $1 1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (car (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (empty? (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (gt? $0 $1))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (if (gt? $0 $1) $0 $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (car (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (eq? #(+ 1 (+ 1 1)) (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (gt? $1 $0)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (if (eq? #(+ 1 (+ 1 1)) (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $2 (lambda (gt? $1 $0))))) $0 $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (car (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (index (length (cdr $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (length $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (length (range (length $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (map (lambda 0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ 1 1) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) (- #(+ 1 (+ 1 1)) 1) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 (+ 1 1)) 1) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ #(+ 1 (+ 1 1)) 1) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ 1 #(+ #(+ 1 (+ 1 1)) 1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ #(+ 1 (+ 1 1)) (+ 1 1)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (map (lambda 0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (+ $0 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda $0) (map (lambda (+ $0 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (* #(+ 1 (+ 1 1)) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (* $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (+ $0 (* #(+ #(+ 1 (+ 1 1)) 1) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (+ $0 (* $0 #(+ #(+ 1 (+ 1 1)) 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-prime (mod (+ $0 $0) #(+ #(+ 1 (+ 1 1)) 1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) (mod (+ $0 $0) #(+ #(+ 1 (+ 1 1)) 1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (length (cdr $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (- (length $0) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (cons (car $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (cons (index 0 $0) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (cons (index 1 $0) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (cons (car (cdr $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (cons (index #(+ 1 (+ 1 1)) $0) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (index #(+ 1 (+ 1 1)) (map (lambda (cons $0 $1)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (cons 0 $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (cons (length empty) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (fold $0 1 (lambda (lambda (* $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (fold $0 1 (lambda (lambda (* $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (cons (car $0) (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cons (index 0 $0) (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) (cdr (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda (range #(+ #(+ 1 (+ 1 1)) 1))))) (lambda $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) (cdr (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 #(+ #(+ 1 (+ 1 1)) 1))))) (lambda $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda ($0 (mod $1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda ($0 (mod $1 (- #(+ 1 (+ 1 1)) 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (fold $0 $0 (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (map (lambda $0) $0) (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (car $1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (index 0 $1)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (index #(+ 1 (+ 1 1)) $1)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index 1 (#(lambda (cdr (cdr $0))) $1))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (fold $0 empty (lambda (lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 $0 (lambda (lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (cdr $0) $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda (cdr $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda $1)) (lambda $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 1))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (cons (car $0) empty))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(+ #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr $0) (+ 1 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index $0 $1)) (cdr (range (+ 1 #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (#(lambda (cdr (cdr $0))) $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr (cdr $0)) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (#(lambda (cdr (cdr $0))) $0) #(+ #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (cdr $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ #(+ 1 (+ 1 1)) 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr $0) #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr (#(lambda (cdr (cdr $0))) $0)) 1))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (cdr (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (cdr (cdr $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (cdr (cdr $0))) (cdr (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0)) #(+ #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (cdr $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (cdr (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 1))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (cons (car $0) empty))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ 1 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (- #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(+ #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (+ 1 (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (+ $0 (length (range (- $1 $0)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (+ 1 (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (+ $1 (length (range (- $0 $1)))))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (range (+ 1 (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (if (gt? $1 $0) $1 $0)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (range (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (if (gt? $0 $1) $0 (+ $1 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-square $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) (map (lambda $0) $0) (lambda (is-square $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-prime $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda ($0 (if (is-prime $1) $1 0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda ($0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 empty (lambda (lambda (car (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (map (lambda (cons $2 $1)) (range $1)) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? 1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (eq? $0 0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? $0 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) (- $0 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? $0 #(+ 1 (+ 1 1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) (- $0 #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}