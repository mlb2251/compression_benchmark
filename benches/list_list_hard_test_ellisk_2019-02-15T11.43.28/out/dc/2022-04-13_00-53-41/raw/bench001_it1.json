{
  "DSL": {
    "logVariable": -0.4324836464621358,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (map (lambda (index $0 $2)) (range $0))))",
        "logProbability": -0.8078269351386558
      },
      {
        "expression":
          "#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0))))))",
        "logProbability": -0.8385818852502167
      },
      { "expression": "is-prime", "logProbability": -0.12931141350114128 },
      { "expression": "eq?", "logProbability": -0.16018536015549056 },
      { "expression": "gt?", "logProbability": -0.16191986850411189 },
      { "expression": "is-square", "logProbability": -0.19383366270210756 },
      { "expression": "empty?", "logProbability": -0.2098424024343788 },
      { "expression": "cdr", "logProbability": -0.6432507452628182 },
      { "expression": "map", "logProbability": -0.777476495014505 },
      { "expression": "range", "logProbability": -0.8892383358402047 },
      { "expression": "empty", "logProbability": -0.9031203989639862 },
      { "expression": "cons", "logProbability": -0.8358616894111539 },
      { "expression": "unfold", "logProbability": -0.9031203989639862 },
      { "expression": "1", "logProbability": -0.7868071500504423 },
      { "expression": "length", "logProbability": -0.8167531785076001 },
      { "expression": "+", "logProbability": -0.7747586808455096 },
      { "expression": "0", "logProbability": -0.8891963381765522 },
      { "expression": "-", "logProbability": -0.9226325378737239 },
      { "expression": "mod", "logProbability": -0.9065894685826845 },
      { "expression": "*", "logProbability": -0.9711279897202556 },
      { "expression": "car", "logProbability": -1.3763985749743899 },
      { "expression": "index", "logProbability": -1.3396183652075844 },
      { "expression": "fold", "logProbability": -1.4354058414659674 },
      { "expression": "if", "logProbability": -1.4354058491292463 },
      {
        "expression": "#(+ 1 (+ 1 1))",
        "logProbability": -0.6693111900944135
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (+ $0 (+ 1 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (+ 1 (+ $0 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (cdr (cdr (cdr $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (map (lambda #(+ 1 (+ 1 1))) (range 1)) (lambda (lambda (cons $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "bool", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (eq? #(+ 1 (+ 1 1)) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda (eq? $0 #(+ 1 (+ 1 1)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (if (is-prime (length $0)) (is-prime (car $0)) (gt? (length $0) 0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (if (is-square (length $0)) (gt? (length $0) 0) (is-prime (car $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (car $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (index 0 $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (car (cdr (cdr (cdr (cdr $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (index 1 (cdr (cdr (cdr $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (is-prime (+ #(+ 1 (+ 1 1)) (index (length $0) (cons 0 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (is-prime (+ (index (length $0) (cons 0 $0)) #(+ 1 (+ 1 1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "bool", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (eq? 1 (fold $0 1 (lambda (lambda (- $0 (mod $1 #(+ 1 (+ 1 1)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (gt? (fold $0 1 (lambda (lambda (- $0 (mod $1 #(+ 1 (+ 1 1))))))) 0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (index (length (cdr $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (index (length $0) (cons #(+ 1 (+ 1 1)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          { "constructor": "int", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (length $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (length (range (length $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (map (lambda (mod $0 (+ #(+ 1 (+ 1 1)) 1))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (mod $0 (+ 1 #(+ 1 (+ 1 1))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (map (lambda (+ $0 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (map (lambda $0) (map (lambda (+ $0 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (cons (car (cdr $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (cons (index 1 $0) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr $0) #(+ 1 (+ 1 1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index $0 $1)) (cdr (range (+ 1 #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (cdr (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda (index $0 $1)) (cdr (cdr (range (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1))))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (cdr $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (cdr (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "int", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ 1 1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (- #(+ 1 (+ 1 1)) 1)))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}