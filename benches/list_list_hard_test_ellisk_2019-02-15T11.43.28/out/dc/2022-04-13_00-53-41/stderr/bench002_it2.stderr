Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 9994
Constructed version spaces and coalesced candidates in 7.55963s.
Timing point -1 right before normalizing: 8.53447s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 8.5371s.
Timing Comparison Point A (vspace+beam) (millis): 8537
Rewrote topK in 7.85238s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 7.85288s.
sanity check for timing comparison, should be same as comparison point: 16.39s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 16390
Initial score: -406.989979
Initial language score: 0.000000
Initial joint score: -406.989979 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.04613s.
Best MDL score: -403.430051 with (lambda (map (lambda (mod $0 $1))))
Scored candidates with language and grammar in 1.17997s.
Best joint score: -403.430051 with (lambda (map (lambda (mod $0 $1))))
Timing point 3 (all scoring): 2.23314s.
Improved score to -403.430051 (dScore=3.559928) w/ new primitive
	#(lambda (map (lambda (mod $0 $1)))) : int -> list(int) -> list(int)
rewrote all of the frontiers in 4.85966s.
Timing point 4 (rewrite final frontiers): 4.8597s.
Completed one step of memory consolidation in 23.4891s.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (map (lambda (mod $0 $1)))) (+ 1 1) $0))
  (lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0))
  (lambda (#(lambda (map (lambda (mod $0 $1)))) (+ 1 #(+ 1 (+ 1 1))) $0))
Total number of candidates: 6898
Constructed version spaces and coalesced candidates in 6.83822s.
Timing point -1 right before normalizing: 7.78087s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 7.78257s.
Timing Comparison Point A (vspace+beam) (millis): 7782
Rewrote topK in 8.6346s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 8.63493s.
sanity check for timing comparison, should be same as comparison point: 16.4175s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 16417
Initial score: -403.573114
Initial language score: 0.000000
Initial joint score: -403.573114 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.04442s.
Best MDL score: -405.838432 with (lambda (cdr (cdr $0)))
No improvement possible with MDL.
Scored candidates with language and grammar in 940.304ms.
Best joint score: -405.838432 with (lambda (cdr (cdr $0)))
Timing point 3 (all scoring): 1.98996s.
No improvement possible with joint score.
Completed one step of memory consolidation in 18.4085s.
completed ocaml compression in 41.901s.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/list_list_hard_test_ellisk_2019-02-15T11.43.28/bench002_it2.json"
	User time (seconds): 6.46
	System time (seconds): 0.14
	Percent of CPU this job got: 15%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:41.94
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 154852
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 104518
	Voluntary context switches: 219
	Involuntary context switches: 720
	Swaps: 0
	File system inputs: 0
	File system outputs: 40
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
