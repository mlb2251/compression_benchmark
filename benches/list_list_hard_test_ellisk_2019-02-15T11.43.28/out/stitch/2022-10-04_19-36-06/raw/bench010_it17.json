{
  "cmd": "/scratch/mlbowers/proj/stitch/target/release/compress compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.43.28/bench010_it17.json --max-arity=3 --threads=1 --iterations=1 --fmt=dreamcoder --dreamcoder-comparison --out=compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.43.28/out/stitch/2022-10-04_19-36-06/raw/bench010_it17.json",
  "args": {
    "file": "compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.43.28/bench010_it17.json",
    "out": "compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.43.28/out/stitch/2022-10-04_19-36-06/raw/bench010_it17.json",
    "iterations": 1,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "args_from_json": false,
    "save_rewritten": null,
    "step": {
      "max_arity": 3,
      "threads": 1,
      "no_stats": false,
      "batch": 1,
      "dynamic_batch": false,
      "inv_candidates": 1,
      "hole_choice": "DepthFirst",
      "no_mismatch_check": false,
      "no_top_lambda": false,
      "track": null,
      "follow_track": false,
      "verbose_worklist": false,
      "verbose_best": false,
      "print_stats": 0,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_opt_arity_zero": false,
      "no_other_util": false,
      "rewrite_check": false,
      "utility_by_rewrite": false,
      "dreamcoder_comparison": true
    }
  },
  "original_cost": 108699,
  "original": [
    "(lam (prev_dc_inv_4 1 $0))",
    "(lam (map (lam (+ 1 $0)) $0))",
    "(lam (prev_dc_inv_4 prev_dc_inv_0 $0))",
    "(lam (map (lam (+ prev_dc_inv_0 $0)) $0))",
    "(lam (prev_dc_inv_4 (+ 1 prev_dc_inv_0) $0))",
    "(lam (map (lam (+ 1 (+ $0 prev_dc_inv_0))) $0))",
    "(lam (prev_dc_inv_8 $0 (index 1 $0)))",
    "(lam (prev_dc_inv_8 $0 (car (cdr $0))))",
    "(lam (prev_dc_inv_8 $0 (car (prev_dc_inv_3 $0))))",
    "(lam (prev_dc_inv_8 $0 (index 1 (cdr $0))))",
    "(lam (prev_dc_inv_8 $0 (index prev_dc_inv_0 $0)))",
    "(lam (prev_dc_inv_8 $0 (index 1 (prev_dc_inv_3 $0))))",
    "(lam (prev_dc_inv_8 $0 0))",
    "(lam (prev_dc_inv_8 $0 (length empty)))",
    "(lam (prev_dc_inv_8 $0 prev_dc_inv_0))",
    "(lam (prev_dc_inv_8 (map (lam $0) $0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_8 $0 prev_dc_inv_2))",
    "(lam (prev_dc_inv_8 $0 (+ prev_dc_inv_0 1)))",
    "(lam (prev_dc_inv_8 $0 (+ prev_dc_inv_2 1)))",
    "(lam (prev_dc_inv_8 $0 (+ 1 prev_dc_inv_2)))",
    "(lam (map (lam (prev_dc_inv_1 (+ $0 1))) $0))",
    "(lam (map (lam (prev_dc_inv_1 (+ 1 $0))) $0))",
    "(lam (map (lam (prev_dc_inv_1 $0)) $0))",
    "(lam (map (lam (gt? (+ $0 $0) $0)) $0))",
    "(lam (map (lam (gt? $0 prev_dc_inv_0)) $0))",
    "(lam (map (lam (gt? $0 prev_dc_inv_0)) (map (lam $0) $0)))",
    "(lam (map (lam (eq? $0 1)) (prev_dc_inv_6 $0)))",
    "(lam (map (lam (eq? 1 $0)) (prev_dc_inv_6 $0)))",
    "(lam (map (lam (gt? 1 (mod $0 prev_dc_inv_2))) $0))",
    "(lam (map (lam (gt? 1 $0)) (prev_dc_inv_5 prev_dc_inv_2 $0)))",
    "(lam (map (lam (eq? prev_dc_inv_0 $0)) $0))",
    "(lam (map (lam (eq? $0 prev_dc_inv_0)) $0))",
    "(lam (map (lam (eq? prev_dc_inv_2 $0)) $0))",
    "(lam (map (lam (eq? $0 prev_dc_inv_2)) $0))",
    "(lam (map (lam (- 1 $0)) $0))",
    "(lam (prev_dc_inv_6 (map (lam (+ $0 $0)) $0)))",
    "(lam (prev_dc_inv_6 $0))",
    "(lam (map (lam $0) (prev_dc_inv_6 $0)))",
    "(lam (prev_dc_inv_5 (+ prev_dc_inv_2 1) (prev_dc_inv_4 1 $0)))",
    "(lam (prev_dc_inv_5 (+ 1 prev_dc_inv_2) (prev_dc_inv_4 1 $0)))",
    "(lam (prev_dc_inv_5 prev_dc_inv_2 (prev_dc_inv_4 prev_dc_inv_0 $0)))",
    "(lam (map (lam (mod (+ prev_dc_inv_0 $0) prev_dc_inv_2)) $0))",
    "(lam (prev_dc_inv_6 $0))",
    "(lam (prev_dc_inv_6 (map (lam $0) $0)))",
    "(lam (map (lam (- 1 $0)) $0))",
    "(lam (prev_dc_inv_6 (map (lam (+ $0 $0)) $0)))",
    "(lam (prev_dc_inv_6 (prev_dc_inv_6 $0)))",
    "(lam (prev_dc_inv_6 (prev_dc_inv_4 1 $0)))",
    "(lam (prev_dc_inv_5 prev_dc_inv_2 (prev_dc_inv_4 1 $0)))",
    "(lam (prev_dc_inv_5 prev_dc_inv_2 (map (lam (+ 1 $0)) $0)))",
    "(lam (length (cdr (prev_dc_inv_11 $0 (lam (eq? $0 (car $1)))))))",
    "(lam (length (prev_dc_inv_9 (cdr $0) (lam (lam (if (eq? $1 (car $2)) $2 empty))))))",
    "(lam (prev_dc_inv_13 $0 0))",
    "(lam (length (prev_dc_inv_11 $0 (lam (gt? 1 $0)))))",
    "(lam (prev_dc_inv_13 $0 prev_dc_inv_0))",
    "(lam (prev_dc_inv_13 (map (lam $0) $0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_13 $0 (+ 1 prev_dc_inv_2)))",
    "(lam (prev_dc_inv_13 $0 (+ prev_dc_inv_2 1)))",
    "(lam (prev_dc_inv_3 (cdr $0)))",
    "(lam (cdr (prev_dc_inv_3 $0)))",
    "(lam (prev_dc_inv_3 (prev_dc_inv_3 (cdr $0))))",
    "(lam (prev_dc_inv_3 (cdr (prev_dc_inv_3 $0))))",
    "(lam (empty? $0))",
    "(lam (empty? (prev_dc_inv_6 $0)))",
    "(lam (prev_dc_inv_11 $0 (lam (is-square (mod (+ $0 $0) prev_dc_inv_2)))))",
    "(lam (prev_dc_inv_11 $0 (lam (is-prime (+ prev_dc_inv_0 (mod $0 prev_dc_inv_2))))))",
    "(lam (is-square (+ 1 (mod (car $0) (index (length (prev_dc_inv_3 $0)) $0)))))",
    "(lam (is-square (* prev_dc_inv_0 (mod (car $0) (index (length (prev_dc_inv_3 $0)) $0)))))",
    "(lam (prev_dc_inv_1 (prev_dc_inv_13 $0 0)))",
    "(lam (prev_dc_inv_1 (length (prev_dc_inv_11 $0 (lam (gt? 1 $0))))))",
    "(lam (prev_dc_inv_1 (prev_dc_inv_13 $0 prev_dc_inv_0)))",
    "(lam (gt? (prev_dc_inv_13 $0 prev_dc_inv_0) 0))",
    "(lam (prev_dc_inv_1 (prev_dc_inv_13 $0 (+ 1 prev_dc_inv_2))))",
    "(lam (prev_dc_inv_1 (prev_dc_inv_13 $0 (+ prev_dc_inv_2 1))))",
    "(lam (car $0))",
    "(lam (index 0 $0))",
    "(lam (car $0))",
    "(lam (index 0 $0))",
    "(lam (car (prev_dc_inv_3 $0)))",
    "(lam (index 1 (cdr $0)))",
    "(lam (index prev_dc_inv_2 $0))",
    "(lam (index prev_dc_inv_0 (cdr $0)))",
    "(lam (is-prime (+ (index (length $0) (cons 0 $0)) prev_dc_inv_0)))",
    "(lam (is-prime (+ prev_dc_inv_0 (index (length $0) (cons 0 $0)))))",
    "(lam (empty? (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (mod $0 prev_dc_inv_0))))))",
    "(lam (empty? (prev_dc_inv_11 (prev_dc_inv_5 prev_dc_inv_0 $0) (lam (prev_dc_inv_1 $0)))))",
    "(lam (eq? (length $0) (length (prev_dc_inv_11 $0 (lam (is-prime $0))))))",
    "(lam (eq? (length (prev_dc_inv_11 $0 (lam (is-prime $0)))) (length $0)))",
    "(lam (car (prev_dc_inv_11 $0 (lam (empty? (prev_dc_inv_11 $1 (lam (gt? $0 $1))))))))",
    "(lam (fold $0 1 (lam (lam (if (gt? $0 $1) $0 $1)))))",
    "(lam (car (prev_dc_inv_11 $0 (lam (eq? prev_dc_inv_0 (length (prev_dc_inv_11 $1 (lam (gt? $1 $0)))))))))",
    "(lam (fold $0 1 (lam (lam (if (eq? prev_dc_inv_0 (length (prev_dc_inv_11 $2 (lam (gt? $1 $0))))) $0 $1)))))",
    "(lam (car (prev_dc_inv_12 $0 (lam $1))))",
    "(lam (index (length (cdr $0)) $0))",
    "(lam (length $0))",
    "(lam (length (prev_dc_inv_6 $0)))",
    "(lam (prev_dc_inv_5 1 $0))",
    "(lam (map (lam 0) $0))",
    "(lam (prev_dc_inv_5 (+ 1 1) $0))",
    "(lam (prev_dc_inv_5 (- prev_dc_inv_0 1) $0))",
    "(lam (prev_dc_inv_5 prev_dc_inv_0 $0))",
    "(lam (prev_dc_inv_5 prev_dc_inv_0 (map (lam $0) $0)))",
    "(lam (prev_dc_inv_5 prev_dc_inv_2 $0))",
    "(lam (prev_dc_inv_5 (+ prev_dc_inv_0 1) $0))",
    "(lam (prev_dc_inv_5 (+ 1 prev_dc_inv_2) $0))",
    "(lam (prev_dc_inv_5 (+ prev_dc_inv_0 (+ 1 1)) $0))",
    "(lam (prev_dc_inv_5 1 $0))",
    "(lam (map (lam 0) $0))",
    "(lam (map (lam (+ $0 $0)) $0))",
    "(lam (map (lam $0) (map (lam (+ $0 $0)) $0)))",
    "(lam (map (lam (* prev_dc_inv_0 $0)) $0))",
    "(lam (map (lam (* $0 prev_dc_inv_0)) $0))",
    "(lam (map (lam (+ $0 (* prev_dc_inv_2 $0))) $0))",
    "(lam (map (lam (+ $0 (* $0 prev_dc_inv_2))) $0))",
    "(lam (prev_dc_inv_11 $0 (lam (is-prime (mod (+ $0 $0) prev_dc_inv_2)))))",
    "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (mod (+ $0 $0) prev_dc_inv_2)))))",
    "(lam (prev_dc_inv_7 $0 (length (cdr $0))))",
    "(lam (prev_dc_inv_7 $0 (- (length $0) 1)))",
    "(lam (cons (car $0) $0))",
    "(lam (cons (index 0 $0) $0))",
    "(lam (cons (index 1 $0) $0))",
    "(lam (cons (car (cdr $0)) $0))",
    "(lam (cons (index prev_dc_inv_0 $0) $0))",
    "(lam (cons (index 1 (prev_dc_inv_3 $0)) $0))",
    "(lam (cons 0 $0))",
    "(lam (cons (length empty) $0))",
    "(lam (fold $0 1 (lam (lam (* $0 $1)))))",
    "(lam (fold $0 1 (lam (lam (* $1 $0)))))",
    "(lam (cons (car $0) (prev_dc_inv_3 $0)))",
    "(lam (cons (index 0 $0) (prev_dc_inv_3 $0)))",
    "(lam (prev_dc_inv_12 (cdr (prev_dc_inv_12 $0 (lam (range prev_dc_inv_2)))) (lam $0)))",
    "(lam (prev_dc_inv_12 (cdr (prev_dc_inv_12 $0 (lam (prev_dc_inv_7 $1 prev_dc_inv_2)))) (lam $0)))",
    "(lam (prev_dc_inv_9 $0 (lam (lam ($0 (mod $1 (+ 1 1)))))))",
    "(lam (prev_dc_inv_9 $0 (lam (lam ($0 (mod $1 (- prev_dc_inv_0 1)))))))",
    "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (mod $0 prev_dc_inv_0)))))",
    "(lam (prev_dc_inv_9 $0 (lam (lam ($0 (mod $1 prev_dc_inv_0))))))",
    "(lam (fold $0 $0 (lam (lam (cons $1 $0)))))",
    "(lam (fold $0 (map (lam $0) $0) (lam (lam (cons $1 $0)))))",
    "(lam (map (lam (car $1)) $0))",
    "(lam (map (lam (index 0 $1)) $0))",
    "(lam (map (lam (index prev_dc_inv_0 $1)) $0))",
    "(lam (map (lam (index 1 (prev_dc_inv_3 $1))) $0))",
    "(lam (fold $0 empty (lam (lam (prev_dc_inv_8 $0 $1)))))",
    "(lam (fold $0 $0 (lam (lam (prev_dc_inv_8 (cdr $0) $1)))))",
    "(lam (prev_dc_inv_12 $0 (lam (cdr $0))))",
    "(lam (prev_dc_inv_12 (prev_dc_inv_12 $0 (lam $1)) (lam $0)))",
    "(lam (prev_dc_inv_12 $0 (lam (prev_dc_inv_3 $0))))",
    "(lam (prev_dc_inv_7 $0 1))",
    "(lam (prev_dc_inv_8 empty (car $0)))",
    "(lam (prev_dc_inv_7 $0 prev_dc_inv_2))",
    "(lam (prev_dc_inv_7 $0 (+ prev_dc_inv_0 1)))",
    "(lam (cdr (prev_dc_inv_7 $0 prev_dc_inv_0)))",
    "(lam (prev_dc_inv_7 (cdr $0) (+ 1 1)))",
    "(lam (prev_dc_inv_7 (cdr $0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_7 (prev_dc_inv_10 $0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_10 $0))",
    "(lam (prev_dc_inv_10 (map (lam $0) $0)))",
    "(lam (prev_dc_inv_7 (prev_dc_inv_3 $0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_7 (cdr (cdr $0)) prev_dc_inv_0))",
    "(lam (cdr (prev_dc_inv_10 $0)))",
    "(lam (prev_dc_inv_7 (prev_dc_inv_3 $0) prev_dc_inv_2))",
    "(lam (prev_dc_inv_10 (cdr $0)))",
    "(lam (prev_dc_inv_10 (cdr (map (lam $0) $0))))",
    "(lam (prev_dc_inv_7 (prev_dc_inv_3 (cdr $0)) 1))",
    "(lam (prev_dc_inv_7 (cdr (prev_dc_inv_3 $0)) 1))",
    "(lam (prev_dc_inv_3 (prev_dc_inv_10 $0)))",
    "(lam (cdr (cdr (prev_dc_inv_10 $0))))",
    "(lam (prev_dc_inv_10 (prev_dc_inv_3 $0)))",
    "(lam (prev_dc_inv_10 (cdr (cdr $0))))",
    "(lam (prev_dc_inv_3 (cdr (prev_dc_inv_10 $0))))",
    "(lam (cdr (prev_dc_inv_3 (prev_dc_inv_10 $0))))",
    "(lam (cdr (prev_dc_inv_10 (prev_dc_inv_3 $0))))",
    "(lam (prev_dc_inv_7 (prev_dc_inv_3 (prev_dc_inv_3 $0)) prev_dc_inv_2))",
    "(lam (cdr $0))",
    "(lam (cdr (map (lam $0) $0)))",
    "(lam (prev_dc_inv_7 $0 1))",
    "(lam (prev_dc_inv_8 empty (car $0)))",
    "(lam (prev_dc_inv_7 $0 (+ 1 1)))",
    "(lam (prev_dc_inv_7 $0 (- prev_dc_inv_0 1)))",
    "(lam (prev_dc_inv_7 $0 prev_dc_inv_0))",
    "(lam (prev_dc_inv_7 (map (lam $0) $0) prev_dc_inv_0))",
    "(lam (prev_dc_inv_7 $0 prev_dc_inv_2))",
    "(lam (prev_dc_inv_7 $0 (+ prev_dc_inv_0 1)))",
    "(lam (prev_dc_inv_11 (range (* prev_dc_inv_2 prev_dc_inv_0)) (lam (prev_dc_inv_1 (prev_dc_inv_13 $1 $0)))))",
    "(lam (prev_dc_inv_11 (range (* prev_dc_inv_0 prev_dc_inv_2)) (lam (prev_dc_inv_1 (prev_dc_inv_13 $1 $0)))))",
    "(lam (+ 1 (fold $0 1 (lam (lam (+ $0 (length (range (- $1 $0)))))))))",
    "(lam (+ 1 (fold $0 1 (lam (lam (+ $1 (length (range (- $0 $1)))))))))",
    "(lam (range (+ 1 (fold $0 prev_dc_inv_0 (lam (lam (if (gt? $1 $0) $1 $0)))))))",
    "(lam (range (fold $0 prev_dc_inv_0 (lam (lam (if (gt? $0 $1) $0 (+ $1 1)))))))",
    "(lam (prev_dc_inv_11 $0 (lam (is-square $0))))",
    "(lam (prev_dc_inv_11 (map (lam $0) $0) (lam (is-square $0))))",
    "(lam (prev_dc_inv_11 $0 (lam (is-prime $0))))",
    "(lam (prev_dc_inv_9 $0 (lam (lam ($0 (if (is-prime $1) $1 0))))))",
    "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 $0))))",
    "(lam (prev_dc_inv_9 $0 (lam (lam ($0 $1)))))",
    "(lam (prev_dc_inv_11 $0 (lam (gt? 1 $0))))",
    "(lam (prev_dc_inv_11 $0 (lam (eq? $0 0))))",
    "(lam (prev_dc_inv_11 $0 (lam (gt? $0 1))))",
    "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (- $0 1)))))",
    "(lam (prev_dc_inv_11 $0 (lam (gt? prev_dc_inv_0 $0))))",
    "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (- prev_dc_inv_0 $0)))))",
    "(lam (prev_dc_inv_11 $0 (lam (gt? $0 prev_dc_inv_0))))",
    "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (- $0 prev_dc_inv_0)))))"
  ],
  "invs": [
    {
      "body": "(lam (map #0 $0))",
      "dreamcoder": "#(lambda (lambda (map $1 $0)))",
      "arity": 1,
      "name": "fn_14",
      "rewritten": [
        "(lam (prev_dc_inv_4 1 $0))",
        "(fn_14 (lam (+ 1 $0)))",
        "(lam (prev_dc_inv_4 prev_dc_inv_0 $0))",
        "(fn_14 (lam (+ prev_dc_inv_0 $0)))",
        "(lam (prev_dc_inv_4 (+ 1 prev_dc_inv_0) $0))",
        "(fn_14 (lam (+ 1 (+ $0 prev_dc_inv_0))))",
        "(lam (prev_dc_inv_8 $0 (index 1 $0)))",
        "(lam (prev_dc_inv_8 $0 (car (cdr $0))))",
        "(lam (prev_dc_inv_8 $0 (car (prev_dc_inv_3 $0))))",
        "(lam (prev_dc_inv_8 $0 (index 1 (cdr $0))))",
        "(lam (prev_dc_inv_8 $0 (index prev_dc_inv_0 $0)))",
        "(lam (prev_dc_inv_8 $0 (index 1 (prev_dc_inv_3 $0))))",
        "(lam (prev_dc_inv_8 $0 0))",
        "(lam (prev_dc_inv_8 $0 (length empty)))",
        "(lam (prev_dc_inv_8 $0 prev_dc_inv_0))",
        "(lam (prev_dc_inv_8 (map (lam $0) $0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_8 $0 prev_dc_inv_2))",
        "(lam (prev_dc_inv_8 $0 (+ prev_dc_inv_0 1)))",
        "(lam (prev_dc_inv_8 $0 (+ prev_dc_inv_2 1)))",
        "(lam (prev_dc_inv_8 $0 (+ 1 prev_dc_inv_2)))",
        "(fn_14 (lam (prev_dc_inv_1 (+ $0 1))))",
        "(fn_14 (lam (prev_dc_inv_1 (+ 1 $0))))",
        "(fn_14 (lam (prev_dc_inv_1 $0)))",
        "(fn_14 (lam (gt? (+ $0 $0) $0)))",
        "(fn_14 (lam (gt? $0 prev_dc_inv_0)))",
        "(lam (map (lam (gt? $0 prev_dc_inv_0)) (map (lam $0) $0)))",
        "(lam (map (lam (eq? $0 1)) (prev_dc_inv_6 $0)))",
        "(lam (map (lam (eq? 1 $0)) (prev_dc_inv_6 $0)))",
        "(fn_14 (lam (gt? 1 (mod $0 prev_dc_inv_2))))",
        "(lam (map (lam (gt? 1 $0)) (prev_dc_inv_5 prev_dc_inv_2 $0)))",
        "(fn_14 (lam (eq? prev_dc_inv_0 $0)))",
        "(fn_14 (lam (eq? $0 prev_dc_inv_0)))",
        "(fn_14 (lam (eq? prev_dc_inv_2 $0)))",
        "(fn_14 (lam (eq? $0 prev_dc_inv_2)))",
        "(fn_14 (lam (- 1 $0)))",
        "(lam (prev_dc_inv_6 (map (lam (+ $0 $0)) $0)))",
        "(lam (prev_dc_inv_6 $0))",
        "(lam (map (lam $0) (prev_dc_inv_6 $0)))",
        "(lam (prev_dc_inv_5 (+ prev_dc_inv_2 1) (prev_dc_inv_4 1 $0)))",
        "(lam (prev_dc_inv_5 (+ 1 prev_dc_inv_2) (prev_dc_inv_4 1 $0)))",
        "(lam (prev_dc_inv_5 prev_dc_inv_2 (prev_dc_inv_4 prev_dc_inv_0 $0)))",
        "(fn_14 (lam (mod (+ prev_dc_inv_0 $0) prev_dc_inv_2)))",
        "(lam (prev_dc_inv_6 $0))",
        "(lam (prev_dc_inv_6 (map (lam $0) $0)))",
        "(fn_14 (lam (- 1 $0)))",
        "(lam (prev_dc_inv_6 (map (lam (+ $0 $0)) $0)))",
        "(lam (prev_dc_inv_6 (prev_dc_inv_6 $0)))",
        "(lam (prev_dc_inv_6 (prev_dc_inv_4 1 $0)))",
        "(lam (prev_dc_inv_5 prev_dc_inv_2 (prev_dc_inv_4 1 $0)))",
        "(lam (prev_dc_inv_5 prev_dc_inv_2 (map (lam (+ 1 $0)) $0)))",
        "(lam (length (cdr (prev_dc_inv_11 $0 (lam (eq? $0 (car $1)))))))",
        "(lam (length (prev_dc_inv_9 (cdr $0) (lam (lam (if (eq? $1 (car $2)) $2 empty))))))",
        "(lam (prev_dc_inv_13 $0 0))",
        "(lam (length (prev_dc_inv_11 $0 (lam (gt? 1 $0)))))",
        "(lam (prev_dc_inv_13 $0 prev_dc_inv_0))",
        "(lam (prev_dc_inv_13 (map (lam $0) $0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_13 $0 (+ 1 prev_dc_inv_2)))",
        "(lam (prev_dc_inv_13 $0 (+ prev_dc_inv_2 1)))",
        "(lam (prev_dc_inv_3 (cdr $0)))",
        "(lam (cdr (prev_dc_inv_3 $0)))",
        "(lam (prev_dc_inv_3 (prev_dc_inv_3 (cdr $0))))",
        "(lam (prev_dc_inv_3 (cdr (prev_dc_inv_3 $0))))",
        "(lam (empty? $0))",
        "(lam (empty? (prev_dc_inv_6 $0)))",
        "(lam (prev_dc_inv_11 $0 (lam (is-square (mod (+ $0 $0) prev_dc_inv_2)))))",
        "(lam (prev_dc_inv_11 $0 (lam (is-prime (+ prev_dc_inv_0 (mod $0 prev_dc_inv_2))))))",
        "(lam (is-square (+ 1 (mod (car $0) (index (length (prev_dc_inv_3 $0)) $0)))))",
        "(lam (is-square (* prev_dc_inv_0 (mod (car $0) (index (length (prev_dc_inv_3 $0)) $0)))))",
        "(lam (prev_dc_inv_1 (prev_dc_inv_13 $0 0)))",
        "(lam (prev_dc_inv_1 (length (prev_dc_inv_11 $0 (lam (gt? 1 $0))))))",
        "(lam (prev_dc_inv_1 (prev_dc_inv_13 $0 prev_dc_inv_0)))",
        "(lam (gt? (prev_dc_inv_13 $0 prev_dc_inv_0) 0))",
        "(lam (prev_dc_inv_1 (prev_dc_inv_13 $0 (+ 1 prev_dc_inv_2))))",
        "(lam (prev_dc_inv_1 (prev_dc_inv_13 $0 (+ prev_dc_inv_2 1))))",
        "(lam (car $0))",
        "(lam (index 0 $0))",
        "(lam (car $0))",
        "(lam (index 0 $0))",
        "(lam (car (prev_dc_inv_3 $0)))",
        "(lam (index 1 (cdr $0)))",
        "(lam (index prev_dc_inv_2 $0))",
        "(lam (index prev_dc_inv_0 (cdr $0)))",
        "(lam (is-prime (+ (index (length $0) (cons 0 $0)) prev_dc_inv_0)))",
        "(lam (is-prime (+ prev_dc_inv_0 (index (length $0) (cons 0 $0)))))",
        "(lam (empty? (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (mod $0 prev_dc_inv_0))))))",
        "(lam (empty? (prev_dc_inv_11 (prev_dc_inv_5 prev_dc_inv_0 $0) (lam (prev_dc_inv_1 $0)))))",
        "(lam (eq? (length $0) (length (prev_dc_inv_11 $0 (lam (is-prime $0))))))",
        "(lam (eq? (length (prev_dc_inv_11 $0 (lam (is-prime $0)))) (length $0)))",
        "(lam (car (prev_dc_inv_11 $0 (lam (empty? (prev_dc_inv_11 $1 (lam (gt? $0 $1))))))))",
        "(lam (fold $0 1 (lam (lam (if (gt? $0 $1) $0 $1)))))",
        "(lam (car (prev_dc_inv_11 $0 (lam (eq? prev_dc_inv_0 (length (prev_dc_inv_11 $1 (lam (gt? $1 $0)))))))))",
        "(lam (fold $0 1 (lam (lam (if (eq? prev_dc_inv_0 (length (prev_dc_inv_11 $2 (lam (gt? $1 $0))))) $0 $1)))))",
        "(lam (car (prev_dc_inv_12 $0 (lam $1))))",
        "(lam (index (length (cdr $0)) $0))",
        "(lam (length $0))",
        "(lam (length (prev_dc_inv_6 $0)))",
        "(lam (prev_dc_inv_5 1 $0))",
        "(fn_14 (lam 0))",
        "(lam (prev_dc_inv_5 (+ 1 1) $0))",
        "(lam (prev_dc_inv_5 (- prev_dc_inv_0 1) $0))",
        "(lam (prev_dc_inv_5 prev_dc_inv_0 $0))",
        "(lam (prev_dc_inv_5 prev_dc_inv_0 (map (lam $0) $0)))",
        "(lam (prev_dc_inv_5 prev_dc_inv_2 $0))",
        "(lam (prev_dc_inv_5 (+ prev_dc_inv_0 1) $0))",
        "(lam (prev_dc_inv_5 (+ 1 prev_dc_inv_2) $0))",
        "(lam (prev_dc_inv_5 (+ prev_dc_inv_0 (+ 1 1)) $0))",
        "(lam (prev_dc_inv_5 1 $0))",
        "(fn_14 (lam 0))",
        "(fn_14 (lam (+ $0 $0)))",
        "(lam (map (lam $0) (map (lam (+ $0 $0)) $0)))",
        "(fn_14 (lam (* prev_dc_inv_0 $0)))",
        "(fn_14 (lam (* $0 prev_dc_inv_0)))",
        "(fn_14 (lam (+ $0 (* prev_dc_inv_2 $0))))",
        "(fn_14 (lam (+ $0 (* $0 prev_dc_inv_2))))",
        "(lam (prev_dc_inv_11 $0 (lam (is-prime (mod (+ $0 $0) prev_dc_inv_2)))))",
        "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (mod (+ $0 $0) prev_dc_inv_2)))))",
        "(lam (prev_dc_inv_7 $0 (length (cdr $0))))",
        "(lam (prev_dc_inv_7 $0 (- (length $0) 1)))",
        "(lam (cons (car $0) $0))",
        "(lam (cons (index 0 $0) $0))",
        "(lam (cons (index 1 $0) $0))",
        "(lam (cons (car (cdr $0)) $0))",
        "(lam (cons (index prev_dc_inv_0 $0) $0))",
        "(lam (cons (index 1 (prev_dc_inv_3 $0)) $0))",
        "(lam (cons 0 $0))",
        "(lam (cons (length empty) $0))",
        "(lam (fold $0 1 (lam (lam (* $0 $1)))))",
        "(lam (fold $0 1 (lam (lam (* $1 $0)))))",
        "(lam (cons (car $0) (prev_dc_inv_3 $0)))",
        "(lam (cons (index 0 $0) (prev_dc_inv_3 $0)))",
        "(lam (prev_dc_inv_12 (cdr (prev_dc_inv_12 $0 (lam (range prev_dc_inv_2)))) (lam $0)))",
        "(lam (prev_dc_inv_12 (cdr (prev_dc_inv_12 $0 (lam (prev_dc_inv_7 $1 prev_dc_inv_2)))) (lam $0)))",
        "(lam (prev_dc_inv_9 $0 (lam (lam ($0 (mod $1 (+ 1 1)))))))",
        "(lam (prev_dc_inv_9 $0 (lam (lam ($0 (mod $1 (- prev_dc_inv_0 1)))))))",
        "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (mod $0 prev_dc_inv_0)))))",
        "(lam (prev_dc_inv_9 $0 (lam (lam ($0 (mod $1 prev_dc_inv_0))))))",
        "(lam (fold $0 $0 (lam (lam (cons $1 $0)))))",
        "(lam (fold $0 (map (lam $0) $0) (lam (lam (cons $1 $0)))))",
        "(lam (map (lam (car $1)) $0))",
        "(lam (map (lam (index 0 $1)) $0))",
        "(lam (map (lam (index prev_dc_inv_0 $1)) $0))",
        "(lam (map (lam (index 1 (prev_dc_inv_3 $1))) $0))",
        "(lam (fold $0 empty (lam (lam (prev_dc_inv_8 $0 $1)))))",
        "(lam (fold $0 $0 (lam (lam (prev_dc_inv_8 (cdr $0) $1)))))",
        "(lam (prev_dc_inv_12 $0 (lam (cdr $0))))",
        "(lam (prev_dc_inv_12 (prev_dc_inv_12 $0 (lam $1)) (lam $0)))",
        "(lam (prev_dc_inv_12 $0 (lam (prev_dc_inv_3 $0))))",
        "(lam (prev_dc_inv_7 $0 1))",
        "(lam (prev_dc_inv_8 empty (car $0)))",
        "(lam (prev_dc_inv_7 $0 prev_dc_inv_2))",
        "(lam (prev_dc_inv_7 $0 (+ prev_dc_inv_0 1)))",
        "(lam (cdr (prev_dc_inv_7 $0 prev_dc_inv_0)))",
        "(lam (prev_dc_inv_7 (cdr $0) (+ 1 1)))",
        "(lam (prev_dc_inv_7 (cdr $0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_7 (prev_dc_inv_10 $0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_10 $0))",
        "(lam (prev_dc_inv_10 (map (lam $0) $0)))",
        "(lam (prev_dc_inv_7 (prev_dc_inv_3 $0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_7 (cdr (cdr $0)) prev_dc_inv_0))",
        "(lam (cdr (prev_dc_inv_10 $0)))",
        "(lam (prev_dc_inv_7 (prev_dc_inv_3 $0) prev_dc_inv_2))",
        "(lam (prev_dc_inv_10 (cdr $0)))",
        "(lam (prev_dc_inv_10 (cdr (map (lam $0) $0))))",
        "(lam (prev_dc_inv_7 (prev_dc_inv_3 (cdr $0)) 1))",
        "(lam (prev_dc_inv_7 (cdr (prev_dc_inv_3 $0)) 1))",
        "(lam (prev_dc_inv_3 (prev_dc_inv_10 $0)))",
        "(lam (cdr (cdr (prev_dc_inv_10 $0))))",
        "(lam (prev_dc_inv_10 (prev_dc_inv_3 $0)))",
        "(lam (prev_dc_inv_10 (cdr (cdr $0))))",
        "(lam (prev_dc_inv_3 (cdr (prev_dc_inv_10 $0))))",
        "(lam (cdr (prev_dc_inv_3 (prev_dc_inv_10 $0))))",
        "(lam (cdr (prev_dc_inv_10 (prev_dc_inv_3 $0))))",
        "(lam (prev_dc_inv_7 (prev_dc_inv_3 (prev_dc_inv_3 $0)) prev_dc_inv_2))",
        "(lam (cdr $0))",
        "(lam (cdr (map (lam $0) $0)))",
        "(lam (prev_dc_inv_7 $0 1))",
        "(lam (prev_dc_inv_8 empty (car $0)))",
        "(lam (prev_dc_inv_7 $0 (+ 1 1)))",
        "(lam (prev_dc_inv_7 $0 (- prev_dc_inv_0 1)))",
        "(lam (prev_dc_inv_7 $0 prev_dc_inv_0))",
        "(lam (prev_dc_inv_7 (map (lam $0) $0) prev_dc_inv_0))",
        "(lam (prev_dc_inv_7 $0 prev_dc_inv_2))",
        "(lam (prev_dc_inv_7 $0 (+ prev_dc_inv_0 1)))",
        "(lam (prev_dc_inv_11 (range (* prev_dc_inv_2 prev_dc_inv_0)) (lam (prev_dc_inv_1 (prev_dc_inv_13 $1 $0)))))",
        "(lam (prev_dc_inv_11 (range (* prev_dc_inv_0 prev_dc_inv_2)) (lam (prev_dc_inv_1 (prev_dc_inv_13 $1 $0)))))",
        "(lam (+ 1 (fold $0 1 (lam (lam (+ $0 (length (range (- $1 $0)))))))))",
        "(lam (+ 1 (fold $0 1 (lam (lam (+ $1 (length (range (- $0 $1)))))))))",
        "(lam (range (+ 1 (fold $0 prev_dc_inv_0 (lam (lam (if (gt? $1 $0) $1 $0)))))))",
        "(lam (range (fold $0 prev_dc_inv_0 (lam (lam (if (gt? $0 $1) $0 (+ $1 1)))))))",
        "(lam (prev_dc_inv_11 $0 (lam (is-square $0))))",
        "(lam (prev_dc_inv_11 (map (lam $0) $0) (lam (is-square $0))))",
        "(lam (prev_dc_inv_11 $0 (lam (is-prime $0))))",
        "(lam (prev_dc_inv_9 $0 (lam (lam ($0 (if (is-prime $1) $1 0))))))",
        "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 $0))))",
        "(lam (prev_dc_inv_9 $0 (lam (lam ($0 $1)))))",
        "(lam (prev_dc_inv_11 $0 (lam (gt? 1 $0))))",
        "(lam (prev_dc_inv_11 $0 (lam (eq? $0 0))))",
        "(lam (prev_dc_inv_11 $0 (lam (gt? $0 1))))",
        "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (- $0 1)))))",
        "(lam (prev_dc_inv_11 $0 (lam (gt? prev_dc_inv_0 $0))))",
        "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (- prev_dc_inv_0 $0)))))",
        "(lam (prev_dc_inv_11 $0 (lam (gt? $0 prev_dc_inv_0))))",
        "(lam (prev_dc_inv_11 $0 (lam (prev_dc_inv_1 (- $0 prev_dc_inv_0)))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) 1 $0))",
        "(#(lambda (lambda (map $1 $0))) (lambda (+ 1 $0)))",
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 (+ 1 1)) $0))",
        "(#(lambda (lambda (map $1 $0))) (lambda (+ #(+ 1 (+ 1 1)) $0)))",
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) (+ 1 #(+ 1 (+ 1 1))) $0))",
        "(#(lambda (lambda (map $1 $0))) (lambda (+ 1 (+ $0 #(+ 1 (+ 1 1))))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 $0)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (cdr $0))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 (cdr $0))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index #(+ 1 (+ 1 1)) $0)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (index 1 (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 0))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (length empty)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 #(+ #(+ 1 (+ 1 1)) 1)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (+ #(+ 1 (+ 1 1)) 1)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (+ #(+ #(+ 1 (+ 1 1)) 1) 1)))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (+ 1 #(+ #(+ 1 (+ 1 1)) 1))))",
        "(#(lambda (lambda (map $1 $0))) (lambda (#(lambda (gt? $0 0)) (+ $0 1))))",
        "(#(lambda (lambda (map $1 $0))) (lambda (#(lambda (gt? $0 0)) (+ 1 $0))))",
        "(#(lambda (lambda (map $1 $0))) (lambda (#(lambda (gt? $0 0)) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (gt? (+ $0 $0) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (gt? $0 #(+ 1 (+ 1 1)))))",
        "(lambda (map (lambda (gt? $0 #(+ 1 (+ 1 1)))) (map (lambda $0) $0)))",
        "(lambda (map (lambda (eq? $0 1)) (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
        "(lambda (map (lambda (eq? 1 $0)) (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (gt? 1 (mod $0 #(+ #(+ 1 (+ 1 1)) 1)))))",
        "(lambda (map (lambda (gt? 1 $0)) (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 (+ 1 1)) 1) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (eq? #(+ 1 (+ 1 1)) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (eq? $0 #(+ 1 (+ 1 1)))))",
        "(#(lambda (lambda (map $1 $0))) (lambda (eq? #(+ #(+ 1 (+ 1 1)) 1) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (eq? $0 #(+ #(+ 1 (+ 1 1)) 1))))",
        "(#(lambda (lambda (map $1 $0))) (lambda (- 1 $0)))",
        "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (map (lambda (+ $0 $0)) $0)))",
        "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0))",
        "(lambda (map (lambda $0) (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ #(+ #(+ 1 (+ 1 1)) 1) 1) (#(lambda (map (lambda (+ $0 $1)))) 1 $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ 1 #(+ #(+ 1 (+ 1 1)) 1)) (#(lambda (map (lambda (+ $0 $1)))) 1 $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 (+ 1 1)) 1) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 (+ 1 1)) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (mod (+ #(+ 1 (+ 1 1)) $0) #(+ #(+ 1 (+ 1 1)) 1))))",
        "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0))",
        "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (map (lambda $0) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (- 1 $0)))",
        "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (map (lambda (+ $0 $0)) $0)))",
        "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
        "(lambda (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) (#(lambda (map (lambda (+ $0 $1)))) 1 $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 (+ 1 1)) 1) (#(lambda (map (lambda (+ $0 $1)))) 1 $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 (+ 1 1)) 1) (map (lambda (+ 1 $0)) $0)))",
        "(lambda (length (cdr (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (eq? $0 (car $1)))))))",
        "(lambda (length (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) (cdr $0) (lambda (lambda (if (eq? $1 (car $2)) $2 empty))))))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 0))",
        "(lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? 1 $0)))))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 (+ 1 #(+ #(+ 1 (+ 1 1)) 1))))",
        "(lambda (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 (+ #(+ #(+ 1 (+ 1 1)) 1) 1)))",
        "(lambda (#(lambda (cdr (cdr $0))) (cdr $0)))",
        "(lambda (cdr (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) (cdr $0))))",
        "(lambda (#(lambda (cdr (cdr $0))) (cdr (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (empty? $0))",
        "(lambda (empty? (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-square (mod (+ $0 $0) #(+ #(+ 1 (+ 1 1)) 1))))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-prime (+ #(+ 1 (+ 1 1)) (mod $0 #(+ #(+ 1 (+ 1 1)) 1)))))))",
        "(lambda (is-square (+ 1 (mod (car $0) (index (length (#(lambda (cdr (cdr $0))) $0)) $0)))))",
        "(lambda (is-square (* #(+ 1 (+ 1 1)) (mod (car $0) (index (length (#(lambda (cdr (cdr $0))) $0)) $0)))))",
        "(lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 0)))",
        "(lambda (#(lambda (gt? $0 0)) (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? 1 $0))))))",
        "(lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1)))))",
        "(lambda (gt? (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 #(+ 1 (+ 1 1))) 0))",
        "(lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 (+ 1 #(+ #(+ 1 (+ 1 1)) 1)))))",
        "(lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $0 (+ #(+ #(+ 1 (+ 1 1)) 1) 1))))",
        "(lambda (car $0))",
        "(lambda (index 0 $0))",
        "(lambda (car $0))",
        "(lambda (index 0 $0))",
        "(lambda (car (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (index 1 (cdr $0)))",
        "(lambda (index #(+ #(+ 1 (+ 1 1)) 1) $0))",
        "(lambda (index #(+ 1 (+ 1 1)) (cdr $0)))",
        "(lambda (is-prime (+ (index (length $0) (cons 0 $0)) #(+ 1 (+ 1 1)))))",
        "(lambda (is-prime (+ #(+ 1 (+ 1 1)) (index (length $0) (cons 0 $0)))))",
        "(lambda (empty? (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 (+ 1 1))))))))",
        "(lambda (empty? (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0) (lambda (#(lambda (gt? $0 0)) $0)))))",
        "(lambda (eq? (length $0) (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-prime $0))))))",
        "(lambda (eq? (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-prime $0)))) (length $0)))",
        "(lambda (car (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (empty? (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (gt? $0 $1))))))))",
        "(lambda (fold $0 1 (lambda (lambda (if (gt? $0 $1) $0 $1)))))",
        "(lambda (car (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (eq? #(+ 1 (+ 1 1)) (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (gt? $1 $0)))))))))",
        "(lambda (fold $0 1 (lambda (lambda (if (eq? #(+ 1 (+ 1 1)) (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $2 (lambda (gt? $1 $0))))) $0 $1)))))",
        "(lambda (car (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda $1))))",
        "(lambda (index (length (cdr $0)) $0))",
        "(lambda (length $0))",
        "(lambda (length (#(map (lambda (mod (+ $0 1) #(+ 1 (+ 1 1))))) $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
        "(#(lambda (lambda (map $1 $0))) (lambda 0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ 1 1) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) (- #(+ 1 (+ 1 1)) 1) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 (+ 1 1)) (map (lambda $0) $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 (+ 1 1)) 1) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ #(+ 1 (+ 1 1)) 1) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ 1 #(+ #(+ 1 (+ 1 1)) 1)) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) (+ #(+ 1 (+ 1 1)) (+ 1 1)) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
        "(#(lambda (lambda (map $1 $0))) (lambda 0))",
        "(#(lambda (lambda (map $1 $0))) (lambda (+ $0 $0)))",
        "(lambda (map (lambda $0) (map (lambda (+ $0 $0)) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (* #(+ 1 (+ 1 1)) $0)))",
        "(#(lambda (lambda (map $1 $0))) (lambda (* $0 #(+ 1 (+ 1 1)))))",
        "(#(lambda (lambda (map $1 $0))) (lambda (+ $0 (* #(+ #(+ 1 (+ 1 1)) 1) $0))))",
        "(#(lambda (lambda (map $1 $0))) (lambda (+ $0 (* $0 #(+ #(+ 1 (+ 1 1)) 1)))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-prime (mod (+ $0 $0) #(+ #(+ 1 (+ 1 1)) 1))))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) (mod (+ $0 $0) #(+ #(+ 1 (+ 1 1)) 1))))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (length (cdr $0))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (- (length $0) 1)))",
        "(lambda (cons (car $0) $0))",
        "(lambda (cons (index 0 $0) $0))",
        "(lambda (cons (index 1 $0) $0))",
        "(lambda (cons (car (cdr $0)) $0))",
        "(lambda (cons (index #(+ 1 (+ 1 1)) $0) $0))",
        "(lambda (cons (index 1 (#(lambda (cdr (cdr $0))) $0)) $0))",
        "(lambda (cons 0 $0))",
        "(lambda (cons (length empty) $0))",
        "(lambda (fold $0 1 (lambda (lambda (* $0 $1)))))",
        "(lambda (fold $0 1 (lambda (lambda (* $1 $0)))))",
        "(lambda (cons (car $0) (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (cons (index 0 $0) (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) (cdr (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda (range #(+ #(+ 1 (+ 1 1)) 1))))) (lambda $0)))",
        "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) (cdr (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 #(+ #(+ 1 (+ 1 1)) 1))))) (lambda $0)))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda ($0 (mod $1 (+ 1 1)))))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda ($0 (mod $1 (- #(+ 1 (+ 1 1)) 1)))))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 (+ 1 1)))))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda ($0 (mod $1 #(+ 1 (+ 1 1))))))))",
        "(lambda (fold $0 $0 (lambda (lambda (cons $1 $0)))))",
        "(lambda (fold $0 (map (lambda $0) $0) (lambda (lambda (cons $1 $0)))))",
        "(lambda (map (lambda (car $1)) $0))",
        "(lambda (map (lambda (index 0 $1)) $0))",
        "(lambda (map (lambda (index #(+ 1 (+ 1 1)) $1)) $0))",
        "(lambda (map (lambda (index 1 (#(lambda (cdr (cdr $0))) $1))) $0))",
        "(lambda (fold $0 empty (lambda (lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 $1)))))",
        "(lambda (fold $0 $0 (lambda (lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) (cdr $0) $1)))))",
        "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda (cdr $0))))",
        "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda $1)) (lambda $0)))",
        "(lambda (#(lambda (lambda (fold (cdr ($0 (#(lambda (cdr (cdr $0))) $1))) $1 (lambda (lambda (cdr (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) $0 (car $0)))))))) $0 (lambda (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 1))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) empty (car $0)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(+ #(+ 1 (+ 1 1)) 1)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) 1)))",
        "(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(+ 1 (+ 1 1)))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr $0) (+ 1 1)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr $0) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0))",
        "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (map (lambda $0) $0)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (#(lambda (cdr (cdr $0))) $0) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr (cdr $0)) #(+ 1 (+ 1 1))))",
        "(lambda (cdr (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (#(lambda (cdr (cdr $0))) $0) #(+ #(+ 1 (+ 1 1)) 1)))",
        "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (cdr $0)))",
        "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (cdr (map (lambda $0) $0))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (#(lambda (cdr (cdr $0))) (cdr $0)) 1))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (cdr (#(lambda (cdr (cdr $0))) $0)) 1))",
        "(lambda (#(lambda (cdr (cdr $0))) (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0)))",
        "(lambda (cdr (cdr (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0))))",
        "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0)))",
        "(lambda (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (cdr (cdr $0))))",
        "(lambda (#(lambda (cdr (cdr $0))) (cdr (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0))))",
        "(lambda (cdr (#(lambda (cdr (cdr $0))) (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) $0))))",
        "(lambda (cdr (#(lambda (cdr (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) #(+ 1 (+ 1 1)))))) (#(lambda (cdr (cdr $0))) $0))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (#(lambda (cdr (cdr $0))) (#(lambda (cdr (cdr $0))) $0)) #(+ #(+ 1 (+ 1 1)) 1)))",
        "(lambda (cdr $0))",
        "(lambda (cdr (map (lambda $0) $0)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 1))",
        "(lambda (#(lambda (lambda (fold $1 (cons $0 empty) (lambda (lambda (cons $1 $0)))))) empty (car $0)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ 1 1)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (- #(+ 1 (+ 1 1)) 1)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) (map (lambda $0) $0) #(+ 1 (+ 1 1))))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(+ #(+ 1 (+ 1 1)) 1)))",
        "(lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ #(+ 1 (+ 1 1)) 1)))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) (range (* #(+ #(+ 1 (+ 1 1)) 1) #(+ 1 (+ 1 1)))) (lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $1 $0)))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) (range (* #(+ 1 (+ 1 1)) #(+ #(+ 1 (+ 1 1)) 1))) (lambda (#(lambda (gt? $0 0)) (#(lambda (lambda (length (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $1 (lambda (eq? $0 $1)))))) $1 $0)))))",
        "(lambda (+ 1 (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))))",
        "(lambda (+ 1 (fold $0 1 (lambda (lambda (+ $1 (length (range (- $0 $1)))))))))",
        "(lambda (range (+ 1 (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (if (gt? $1 $0) $1 $0)))))))",
        "(lambda (range (fold $0 #(+ 1 (+ 1 1)) (lambda (lambda (if (gt? $0 $1) $0 (+ $1 1)))))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-square $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) (map (lambda $0) $0) (lambda (is-square $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (is-prime $0))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda ($0 (if (is-prime $1) $1 0))))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) $0))))",
        "(lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $0 (lambda (lambda ($0 $1)))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? 1 $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (eq? $0 0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? $0 1))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) (- $0 1)))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? #(+ 1 (+ 1 1)) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) (- #(+ 1 (+ 1 1)) $0)))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (gt? $0 #(+ 1 (+ 1 1))))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 empty (lambda (lambda (fold ($2 $1 range) $0 (lambda (lambda (cons $3 $2))))))))) $1 (lambda (lambda (if ($2 $1) $3 empty)))))) $0 (lambda (#(lambda (gt? $0 0)) (- $0 #(+ 1 (+ 1 1)))))))"
      ],
      "utility": 1121,
      "expected_cost": 48114,
      "final_cost": 48114,
      "multiplier": 1.0275179781352621,
      "multiplier_wrt_orig": 1.0275179781352621,
      "num_uses": 27,
      "uses": [
        {
          "fn_14 (lam (* $0 prev_dc_inv_0))": "(lam (map (lam (* $0 prev_dc_inv_0)) $0))"
        },
        {
          "fn_14 (lam (* prev_dc_inv_0 $0))": "(lam (map (lam (* prev_dc_inv_0 $0)) $0))"
        },
        {
          "fn_14 (lam (+ $0 $0))": "(lam (map (lam (+ $0 $0)) $0))"
        },
        {
          "fn_14 (lam (+ $0 (* $0 prev_dc_inv_2)))": "(lam (map (lam (+ $0 (* $0 prev_dc_inv_2))) $0))"
        },
        {
          "fn_14 (lam (+ $0 (* prev_dc_inv_2 $0)))": "(lam (map (lam (+ $0 (* prev_dc_inv_2 $0))) $0))"
        },
        {
          "fn_14 (lam (+ 1 $0))": "(lam (map (lam (+ 1 $0)) $0))"
        },
        {
          "fn_14 (lam (+ 1 (+ $0 prev_dc_inv_0)))": "(lam (map (lam (+ 1 (+ $0 prev_dc_inv_0))) $0))"
        },
        {
          "fn_14 (lam (+ prev_dc_inv_0 $0))": "(lam (map (lam (+ prev_dc_inv_0 $0)) $0))"
        },
        {
          "fn_14 (lam (- 1 $0))": "(lam (map (lam (- 1 $0)) $0))"
        },
        {
          "fn_14 (lam (car #0))": "(lam (map (lam (car $1)) $0))"
        },
        {
          "fn_14 (lam (eq? $0 prev_dc_inv_0))": "(lam (map (lam (eq? $0 prev_dc_inv_0)) $0))"
        },
        {
          "fn_14 (lam (eq? $0 prev_dc_inv_2))": "(lam (map (lam (eq? $0 prev_dc_inv_2)) $0))"
        },
        {
          "fn_14 (lam (eq? prev_dc_inv_0 $0))": "(lam (map (lam (eq? prev_dc_inv_0 $0)) $0))"
        },
        {
          "fn_14 (lam (eq? prev_dc_inv_2 $0))": "(lam (map (lam (eq? prev_dc_inv_2 $0)) $0))"
        },
        {
          "fn_14 (lam (gt? $0 prev_dc_inv_0))": "(lam (map (lam (gt? $0 prev_dc_inv_0)) $0))"
        },
        {
          "fn_14 (lam (gt? (+ $0 $0) $0))": "(lam (map (lam (gt? (+ $0 $0) $0)) $0))"
        },
        {
          "fn_14 (lam (gt? 1 (mod $0 prev_dc_inv_2)))": "(lam (map (lam (gt? 1 (mod $0 prev_dc_inv_2))) $0))"
        },
        {
          "fn_14 (lam (index 0 #0))": "(lam (map (lam (index 0 $1)) $0))"
        },
        {
          "fn_14 (lam (index 1 (prev_dc_inv_3 #0)))": "(lam (map (lam (index 1 (prev_dc_inv_3 $1))) $0))"
        },
        {
          "fn_14 (lam (index prev_dc_inv_0 #0))": "(lam (map (lam (index prev_dc_inv_0 $1)) $0))"
        },
        {
          "fn_14 (lam (mod (+ prev_dc_inv_0 $0) prev_dc_inv_2))": "(lam (map (lam (mod (+ prev_dc_inv_0 $0) prev_dc_inv_2)) $0))"
        },
        {
          "fn_14 (lam (prev_dc_inv_1 $0))": "(lam (map (lam (prev_dc_inv_1 $0)) $0))"
        },
        {
          "fn_14 (lam (prev_dc_inv_1 (+ $0 1)))": "(lam (map (lam (prev_dc_inv_1 (+ $0 1))) $0))"
        },
        {
          "fn_14 (lam (prev_dc_inv_1 (+ 1 $0)))": "(lam (map (lam (prev_dc_inv_1 (+ 1 $0))) $0))"
        },
        {
          "fn_14 (lam 0)": "(lam (map (lam 0) $0))"
        }
      ]
    }
  ]
}