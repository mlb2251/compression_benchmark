Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 134820
Constructed version spaces and coalesced candidates in 1.36953m.
Timing point -1 right before normalizing: 1.58229m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.58238m.
Timing Comparison Point A (vspace+beam) (millis): 94942
Rewrote topK in 1.2172m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.2172m.
sanity check for timing comparison, should be same as comparison point: 2.79958m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 167974
Initial score: -658.369881
Initial language score: 0.000000
Initial joint score: -658.369881 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.3825s.
Best MDL score: -585.341786 with (lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0)))))))))
Scored candidates with language and grammar in 1.20707s.
Best joint score: -585.341786 with (lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0)))))))))
Timing point 3 (all scoring): 2.60033s.
Improved score to -585.341786 (dScore=73.028094) w/ new primitive
	#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) : int -> int -> int -> tower -> tower
rewrote all of the frontiers in 51.9902s.
Timing point 4 (rewrite final frontiers): 51.9903s.
Completed one step of memory consolidation in 3.70969m.
New primitive is used 14 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 6 2 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 2 3 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 4 3 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 8 3 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 4 4 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 6 4 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 2 5 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 4 5 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 2 6 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 4 6 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 6 6 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 6 7 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 2 3 5 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) 2 4 6 $0))
Total number of candidates: 96223
Constructed version spaces and coalesced candidates in 1.06987m.
Timing point -1 right before normalizing: 1.22182m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.22184m.
Timing Comparison Point A (vspace+beam) (millis): 73310
Rewrote topK in 58.8997s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 58.9001s.
sanity check for timing comparison, should be same as comparison point: 2.20351m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 132210
Initial score: -585.227972
Initial language score: 0.000000
Initial joint score: -585.227972 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.11139s.
Best MDL score: -568.762583 with (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $1 $0 (lambda (1x3 (reverseHand $0))))))
Scored candidates with language and grammar in 1.2628s.
Best joint score: -568.762583 with (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $1 $0 (lambda (1x3 (reverseHand $0))))))
Timing point 3 (all scoring): 2.38506s.
Improved score to -568.762583 (dScore=16.465389) w/ new primitive
	#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $1 $0 (lambda (1x3 (reverseHand $0)))))) : tower -> int -> tower
rewrote all of the frontiers in 39.3399s.
Timing point 4 (rewrite final frontiers): 39.34s.
Completed one step of memory consolidation in 2.89903m.
New primitive is used 6 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $1 $0 (lambda (1x3 (reverseHand $0)))))) $0 4))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $1 $0 (lambda (1x3 (reverseHand $0)))))) $0 5))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $1 $0 (lambda (1x3 (reverseHand $0)))))) $0 7))
  (lambda (tower_loopM 4 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $1 $0 (lambda (1x3 (reverseHand $0)))))) (reverseHand (moveHand 4 $0)) 5))) $0))
  (lambda (tower_loopM 7 (lambda (lambda (moveHand 4 (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $1 $0 (lambda (1x3 (reverseHand $0)))))) (reverseHand $0) 5)))) $0))
  (lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 3 2 (reverseHand (moveHand 5 (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $1 $0 (lambda (1x3 (reverseHand $0)))))) $0 4)))))
Total number of candidates: 94996
Constructed version spaces and coalesced candidates in 1.04813m.
Timing point -1 right before normalizing: 1.16938m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.16942m.
Timing Comparison Point A (vspace+beam) (millis): 70165
Rewrote topK in 57.5837s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 57.5842s.
sanity check for timing comparison, should be same as comparison point: 2.12916m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 127749
Initial score: -568.686647
Initial language score: 0.000000
Initial joint score: -568.686647 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.1757s.
Best MDL score: -565.324930 with (lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $0 2 (lambda (reverseHand $0)))))
Scored candidates with language and grammar in 1.25985s.
Best joint score: -565.324930 with (lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $0 2 (lambda (reverseHand $0)))))
Timing point 3 (all scoring): 2.44457s.
Improved score to -565.324930 (dScore=3.361718) w/ new primitive
	#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $0 2 (lambda (reverseHand $0))))) : tower -> tower
rewrote all of the frontiers in 41.5167s.
Timing point 4 (rewrite final frontiers): 41.5167s.
Completed one step of memory consolidation in 2.86195m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (tower_loopM 3 (lambda (lambda (reverseHand (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $0 2 (lambda (reverseHand $0))))) $0)))) $0))
  (lambda (tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) $0 2 (lambda (reverseHand $0))))) (reverseHand $0)))) $0))
Total number of candidates: 83106
Constructed version spaces and coalesced candidates in 1.00765m.
Timing point -1 right before normalizing: 1.13366m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.13372m.
Timing Comparison Point A (vspace+beam) (millis): 68023
Rewrote topK in 57.3493s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 57.3498s.
sanity check for timing comparison, should be same as comparison point: 2.08955m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 125373
Initial score: -565.338855
Initial language score: 0.000000
Initial joint score: -565.338855 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.36489s.
Best MDL score: -562.454813 with (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4)))
Scored candidates with language and grammar in 1.14495s.
Best joint score: -562.454813 with (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4)))
Timing point 3 (all scoring): 2.51897s.
Improved score to -562.454813 (dScore=2.884042) w/ new primitive
	#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) : int -> int -> tower -> tower
rewrote all of the frontiers in 40.6777s.
Timing point 4 (rewrite final frontiers): 40.6777s.
Completed one step of memory consolidation in 2.80961m.
New primitive is used 12 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 2 6 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 3 2 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 3 4 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 3 8 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 4 4 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 4 6 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 5 2 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 5 4 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 6 2 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 6 4 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 6 6 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 ($2 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $2 $0) $4 (lambda (reverseHand $0))))))))) $0 $1 4))) 7 6 $0))
Total number of candidates: 79469
Constructed version spaces and coalesced candidates in 1.01292m.
Timing point -1 right before normalizing: 1.13642m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.13651m.
Timing Comparison Point A (vspace+beam) (millis): 68190
Rewrote topK in 57.9683s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 57.9689s.
sanity check for timing comparison, should be same as comparison point: 2.10266m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 126159
Initial score: -562.487411
Initial language score: 0.000000
Initial joint score: -562.487411 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.32183s.
Best MDL score: -565.659840 with (lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand $2 (3x1 $0)))) $2))))
No improvement possible with MDL.
Scored candidates with language and grammar in 1.36615s.
Best joint score: -565.659840 with (lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand $2 (3x1 $0)))) $2))))
Timing point 3 (all scoring): 2.69786s.
No improvement possible with joint score.
Completed one step of memory consolidation in 2.14764m.
completed ocaml compression in 14.4282m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/towers_tower_batch_50_3600_ellisk_2019-03-26T11.01.50/bench001_it1.json"
	User time (seconds): 69.78
	System time (seconds): 2.20
	Percent of CPU this job got: 8%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 14:25.76
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 994328
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1559468
	Voluntary context switches: 1258
	Involuntary context switches: 7336
	Swaps: 0
	File system inputs: 0
	File system outputs: 72
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
