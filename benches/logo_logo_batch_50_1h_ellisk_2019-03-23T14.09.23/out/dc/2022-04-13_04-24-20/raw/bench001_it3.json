{
  "DSL": {
    "logVariable": -0.7630223047659355,
    "productions": [
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL))",
        "logProbability": -2.0501681065513537
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL))",
        "logProbability": -1.9645471930267542
      },
      {
        "expression":
          "#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0))",
        "logProbability": -1.9093858814367963
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4)))",
        "logProbability": -1.8100021334414493
      },
      {
        "expression":
          "#(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0))",
        "logProbability": -2.080898195638385
      },
      {
        "expression":
          "#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))",
        "logProbability": -1.8830723656714592
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL))",
        "logProbability": -2.0501324378220325
      },
      {
        "expression":
          "#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL)",
        "logProbability": -2.080899597424036
      },
      {
        "expression": "#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0)))",
        "logProbability": -1.8089680100709598
      },
      {
        "expression":
          "#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0))))))))",
        "logProbability": -1.857764715455731
      },
      { "expression": "logo_UL", "logProbability": -0.20075794507283007 },
      { "expression": "logo_MULL", "logProbability": -0.3979791876533474 },
      { "expression": "logo_epsL", "logProbability": -0.5430273418055815 },
      { "expression": "logo_epsA", "logProbability": -0.29846937545662433 },
      { "expression": "logo_UA", "logProbability": -0.1897060631741998 },
      { "expression": "logo_DIVA", "logProbability": -0.22022823034431793 },
      { "expression": "logo_MULA", "logProbability": -0.2827975088595922 },
      { "expression": "logo_ZL", "logProbability": -0.6073001268203457 },
      { "expression": "logo_DIVL", "logProbability": -0.5749469129637785 },
      { "expression": "logo_ADDA", "logProbability": -0.2827976364310083 },
      { "expression": "5", "logProbability": -0.9186128809381278 },
      { "expression": "logo_ZA", "logProbability": -0.299066705463511 },
      { "expression": "3", "logProbability": -1.0595367882936215 },
      { "expression": "logo_SUBA", "logProbability": -0.3155874592539991 },
      { "expression": "7", "logProbability": -1.1112988653759932 },
      { "expression": "logo_IFTY", "logProbability": -1.3573166357205855 },
      { "expression": "2", "logProbability": -1.0427162246291681 },
      { "expression": "8", "logProbability": -1.2269504801248114 },
      { "expression": "4", "logProbability": -1.1514048416634703 },
      { "expression": "6", "logProbability": -1.2552813654197172 },
      { "expression": "9", "logProbability": -1.4322120735787953 },
      { "expression": "0", "logProbability": -1.4251219385596383 },
      { "expression": "1", "logProbability": -1.4649611477217874 },
      { "expression": "logo_forLoop", "logProbability": -1.884838252523806 },
      { "expression": "logo_FWRT", "logProbability": -2.1090835397942165 },
      { "expression": "logo_PT", "logProbability": -2.144666530133254 },
      { "expression": "logo_GETSET", "logProbability": -1.9569283004611644 },
      {
        "expression": "#(logo_DIVA logo_UA 4)",
        "logProbability": -0.27995712099302184
      },
      {
        "expression":
          "#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0)))))))",
        "logProbability": -2.049574040716516
      },
      {
        "expression": "#(logo_FWRT logo_UL logo_UA)",
        "logProbability": -1.717389450218879
      },
      {
        "expression": "#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0)))",
        "logProbability": -1.8375178954088836
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0)))",
        "logProbability": -1.8617539079799217
      },
      {
        "expression":
          "#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0)))))))",
        "logProbability": -2.1126009995974067
      },
      {
        "expression":
          "#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0)))))",
        "logProbability": -1.9849301965735333
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0)))",
        "logProbability": -1.9887478703171446
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 3) logo_UL $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 3 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 (logo_MULL logo_UL 3) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 7 (logo_MULL logo_UL 3) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 (logo_DIVA logo_UA 5) logo_UL $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_UA 7) logo_UL $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) 2) (logo_DIVL logo_UL 2) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 8 (logo_DIVA #(logo_DIVA logo_UA 4) 2) (logo_DIVL logo_UL 2) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 (#(logo_FWRT logo_UL logo_UA) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 2 logo_UL $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(logo_FWRT logo_UL logo_UA) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) (#(logo_FWRT logo_UL logo_UA) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 2 logo_epsL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(logo_FWRT logo_UL logo_UA) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 logo_UL $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 7 logo_UL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 5 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA logo_ZL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 7 (logo_MULL logo_UL 1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 (logo_FWRT logo_UL logo_UA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 4 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (logo_FWRT (logo_MULL logo_UL 3) logo_epsA $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (logo_FWRT (logo_MULL logo_UL 3) logo_ZA $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 7 (logo_MULL logo_UL 1) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 8 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 8 (logo_MULL logo_UL 1) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA 3) logo_IFTY (logo_DIVL logo_UL logo_IFTY) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_DIVA #(logo_DIVA logo_UA 4) 2) logo_IFTY logo_epsL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) (logo_MULL logo_UL 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) (logo_MULL logo_UL 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA (logo_MULA logo_UA 4) 9) (logo_MULL logo_UL 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_MULA (logo_DIVA logo_UA 9) 4) (logo_MULL logo_UL 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 2 logo_UL (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 2 logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 3 logo_UL (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(logo_FWRT logo_UL logo_UA) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 3 logo_UL (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 0 (#(logo_FWRT logo_UL logo_UA) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA logo_epsL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (logo_PT (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 (logo_PT (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (logo_PT (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 3 (logo_PT (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 4 (logo_PT (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 (logo_PT (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 5 (logo_PT (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 5 (logo_PT (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL logo_epsA (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 6 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 6 (logo_PT (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) $2 $0)) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $1 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) $1 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0)) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0)) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 2 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 2 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL $0))) 3 (logo_PT (lambda $0) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA logo_epsL $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) logo_UA 5 logo_epsL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) logo_UA 5 logo_epsL $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA logo_epsL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) (#(logo_FWRT logo_UL logo_UA) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(logo_FWRT logo_UL logo_UA) $0)) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) #(logo_DIVA logo_UA 4) $0)) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0)) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 5 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0))) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 5 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0))) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 5 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0)) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0)) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(logo_FWRT logo_UL logo_UA) $0)) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) logo_IFTY logo_UL $0))) 7 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) logo_IFTY logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 8 logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 logo_UL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 7 logo_UL $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 (logo_MULL logo_UL 2) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 7 (logo_MULL logo_UL 2) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 (logo_MULL logo_UL 3) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 7 (logo_MULL logo_UL 3) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) logo_IFTY (logo_MULL logo_UL $1) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 8 (logo_MULL logo_UL $1) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}