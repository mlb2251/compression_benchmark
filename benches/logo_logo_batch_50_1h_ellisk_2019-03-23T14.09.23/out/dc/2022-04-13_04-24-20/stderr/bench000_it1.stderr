Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 492676
Constructed version spaces and coalesced candidates in 6.0869m.
Timing point -1 right before normalizing: 6.72681m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 6.72684m.
Timing Comparison Point A (vspace+beam) (millis): 403610
Rewrote topK in 3.66728m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 3.66728m.
sanity check for timing comparison, should be same as comparison point: 10.3941m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 623647
Initial score: -904.792466
Initial language score: 0.000000
Initial joint score: -904.792466 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.92002s.
Best MDL score: -890.565584 with (lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0)))))))
Scored candidates with language and grammar in 1.79567s.
Best joint score: -890.565584 with (lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0)))))))
Timing point 3 (all scoring): 3.72957s.
Improved score to -890.565584 (dScore=14.226882) w/ new primitive
	#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) : int -> tangle -> tlength -> turtle -> turtle
rewrote all of the frontiers in 2.74263m.
Timing point 4 (rewrite final frontiers): 2.74263m.
Completed one step of memory consolidation in 13.1991m.
New primitive is used 27 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 logo_epsA logo_ZL (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 3) logo_UL $0)))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_DIVA logo_UA 4) (logo_MULL logo_UL 3) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 5) logo_UL $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 (logo_DIVA logo_UA 7) logo_UL $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 8 (logo_DIVA logo_UA 8) (logo_DIVL logo_UL 2) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 6) logo_ZL (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_UA 4) logo_UL $0)))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) (logo_MULL logo_UL 4) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 9 (logo_DIVA (logo_MULA logo_UA 4) 9) (logo_MULL logo_UL 4) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_epsA 2) logo_epsL $0))
  (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 8) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA logo_epsL $0)))
  (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 6 logo_epsA logo_epsL $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL 2) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL 3) $0))
  (lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL 3) $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_DIVL logo_UL 5) $0))
  (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL 4) $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_DIVL logo_UL 4) $0))
  (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL 5) $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL 6) $0))
  (lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL 6) $0))) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $3) $0))) $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL 3) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_SUBA logo_UA logo_epsA) (logo_MULL logo_epsL 3) $0)))
  (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_GETSET (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA logo_epsL $0)) (logo_FWRT logo_ZL (logo_DIVA logo_UA 6) $0)))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_DIVA logo_UA 4) logo_UL $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_DIVA logo_UA 4) (logo_MULL logo_UL 2) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 4 (logo_DIVA logo_UA 4) (logo_MULL logo_UL 3) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA logo_UA 4) (logo_MULL logo_UL $1) $0))) $0))
Total number of candidates: 266090
Constructed version spaces and coalesced candidates in 4.43692m.
Timing point -1 right before normalizing: 4.9309m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 4.93092m.
Timing Comparison Point A (vspace+beam) (millis): 295854
Rewrote topK in 3.2414m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 3.24141m.
sanity check for timing comparison, should be same as comparison point: 8.17232m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 490339
Initial score: -888.865723
Initial language score: 0.000000
Initial joint score: -888.865723 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.7653s.
Best MDL score: -850.664930 with (logo_DIVA logo_UA 4)
Scored candidates with language and grammar in 1.71588s.
Best joint score: -850.664930 with (logo_DIVA logo_UA 4)
Timing point 3 (all scoring): 3.49404s.
Improved score to -850.664930 (dScore=38.200793) w/ new primitive
	#(logo_DIVA logo_UA 4) : tangle
rewrote all of the frontiers in 2.47645m.
Timing point 4 (rewrite final frontiers): 2.47645m.
Completed one step of memory consolidation in 10.7071m.
New primitive is used 14 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 3) $0))
  (lambda (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (logo_FWRT logo_UL logo_UA $0)))
  (lambda (logo_FWRT (logo_MULL logo_UL 2) #(logo_DIVA logo_UA 4) (logo_FWRT logo_UL logo_UA $0)))
  (lambda (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) (logo_FWRT logo_epsL logo_UA $0)))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 (logo_DIVA logo_UA 6) logo_ZL (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) logo_UL $0)))
  (lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT (logo_MULL logo_UL $1) #(logo_DIVA logo_UA 4) $0))) $0))
  (lambda (logo_forLoop 8 (lambda (lambda (logo_FWRT (logo_MULL logo_UL $1) #(logo_DIVA logo_UA 4) $0))) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) (logo_FWRT logo_UL (logo_SUBA logo_UA #(logo_DIVA logo_UA 4)) $0)))) $0))
  (lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (logo_FWRT (logo_MULL logo_UL $2) #(logo_DIVA logo_UA 4) $0)) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0)))) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT (logo_MULL logo_UL $3) #(logo_DIVA logo_UA 4) (logo_FWRT logo_UL #(logo_DIVA logo_UA 4) $0)))) $0))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) logo_UL $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 2) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 5 #(logo_DIVA logo_UA 4) (logo_MULL logo_UL 3) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) (logo_MULL logo_UL $1) $0))) $0))
Total number of candidates: 191104
Constructed version spaces and coalesced candidates in 2.64296m.
Timing point -1 right before normalizing: 2.95323m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.95326m.
Timing Comparison Point A (vspace+beam) (millis): 177195
Rewrote topK in 2.32447m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 2.32448m.
sanity check for timing comparison, should be same as comparison point: 5.27774m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 316664
Initial score: -850.101243
Initial language score: 0.000000
Initial joint score: -850.101243 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.61053s.
Best MDL score: -834.703613 with (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0))))
Scored candidates with language and grammar in 1.63481s.
Best joint score: -834.703613 with (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0))))
Timing point 3 (all scoring): 3.25741s.
Improved score to -834.703613 (dScore=15.397630) w/ new primitive
	#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) : tangle -> int -> turtle -> turtle
rewrote all of the frontiers in 1.56985m.
Timing point 4 (rewrite final frontiers): 1.56985m.
Completed one step of memory consolidation in 6.902m.
New primitive is used 8 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) (logo_SUBA logo_UA logo_epsA) 2 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) logo_epsA 3 $0))
  (lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) logo_epsA 3 $0))) $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) logo_epsA 5 $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) (logo_SUBA logo_UA logo_epsA) 6 $0))
  (lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) logo_epsA 6 $0))) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) logo_epsA $3 $0))) $0))) $0))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) logo_epsA 3 (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) (logo_SUBA logo_UA logo_epsA) 3 $0)))
Total number of candidates: 159208
Constructed version spaces and coalesced candidates in 2.58625m.
Timing point -1 right before normalizing: 2.89327m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.8933m.
Timing Comparison Point A (vspace+beam) (millis): 173597
Rewrote topK in 2.30807m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 2.30807m.
sanity check for timing comparison, should be same as comparison point: 5.20137m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 312082
Initial score: -834.223424
Initial language score: 0.000000
Initial joint score: -834.223424 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.80553s.
Best MDL score: -829.717570 with (lambda (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $2 logo_epsA (logo_MULL logo_epsL $3) $0))))))
Scored candidates with language and grammar in 1.71007s.
Best joint score: -829.717570 with (lambda (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $2 logo_epsA (logo_MULL logo_epsL $3) $0))))))
Timing point 3 (all scoring): 3.52818s.
Improved score to -829.717570 (dScore=4.505854) w/ new primitive
	#(lambda (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $2 logo_epsA (logo_MULL logo_epsL $3) $0)))))) : int -> int -> turtle -> turtle
rewrote all of the frontiers in 1.59m.
Timing point 4 (rewrite final frontiers): 1.59m.
Completed one step of memory consolidation in 6.85032m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $2 logo_epsA (logo_MULL logo_epsL $3) $0)))))) 3 6 $0))
  (lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $2 logo_epsA (logo_MULL logo_epsL $3) $0)))))) 4 7 $0))
  (lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $2 logo_epsA (logo_MULL logo_epsL $3) $0)))))) 5 7 $0))
  (lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $2 logo_epsA (logo_MULL logo_epsL $3) $0)))))) 6 6 $0))
Total number of candidates: 131895
Constructed version spaces and coalesced candidates in 2.5377m.
Timing point -1 right before normalizing: 2.82375m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.82378m.
Timing Comparison Point A (vspace+beam) (millis): 169427
Rewrote topK in 2.31857m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 2.31858m.
sanity check for timing comparison, should be same as comparison point: 5.14236m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 308541
Initial score: -829.207175
Initial language score: 0.000000
Initial joint score: -829.207175 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.76344s.
Best MDL score: -825.001087 with (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0)))
Scored candidates with language and grammar in 1.6976s.
Best joint score: -825.001087 with (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0)))
Timing point 3 (all scoring): 3.47223s.
Improved score to -825.001087 (dScore=4.206088) w/ new primitive
	#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) : int -> turtle -> turtle
rewrote all of the frontiers in 1.58582m.
Timing point 4 (rewrite final frontiers): 1.58582m.
Completed one step of memory consolidation in 6.78627m.
New primitive is used 6 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 $0))) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 #(logo_DIVA logo_UA 4) logo_UL $0)))
  (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (logo_FWRT (logo_MULL logo_UL 3) logo_epsA $0)))
  (lambda (logo_forLoop logo_IFTY (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (logo_FWRT logo_epsL (logo_DIVA (logo_ADDA logo_UA logo_epsA) 2) $0)))) $0))
  (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA logo_epsL $0)))
  (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA logo_epsL $0)) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 $0)))) $0))
  (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 (logo_GETSET (lambda (logo_FWRT logo_UL logo_UA $0)) $0)))) $0))
Total number of candidates: 119115
Constructed version spaces and coalesced candidates in 1.8781m.
Timing point -1 right before normalizing: 2.10758m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.10765m.
Timing Comparison Point A (vspace+beam) (millis): 126458
Rewrote topK in 1.68774m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.68775m.
sanity check for timing comparison, should be same as comparison point: 3.7954m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 227723
Initial score: -824.762155
Initial language score: 0.000000
Initial joint score: -824.762155 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.74118s.
Best MDL score: -820.608866 with (lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0)))))))
Scored candidates with language and grammar in 1.76308s.
Best joint score: -820.608866 with (lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0)))))))
Timing point 3 (all scoring): 3.51779s.
Improved score to -820.608866 (dScore=4.153289) w/ new primitive
	#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) : tangle -> int -> tlength -> turtle -> turtle
rewrote all of the frontiers in 1.13895m.
Timing point 4 (rewrite final frontiers): 1.13895m.
Completed one step of memory consolidation in 4.99313m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 7 logo_UL $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 8 logo_UL $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA 3) logo_IFTY logo_epsL $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA 5) logo_IFTY logo_epsL $0))
Total number of candidates: 100698
Constructed version spaces and coalesced candidates in 1.79259m.
Timing point -1 right before normalizing: 2.00891m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.00898m.
Timing Comparison Point A (vspace+beam) (millis): 120538
Rewrote topK in 1.63481m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.63482m.
sanity check for timing comparison, should be same as comparison point: 3.64379m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 218627
Initial score: -820.378625
Initial language score: 0.000000
Initial joint score: -820.378625 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.89738s.
Best MDL score: -819.411974 with (logo_FWRT logo_UL logo_UA)
Scored candidates with language and grammar in 1.98428s.
Best joint score: -819.411974 with (logo_FWRT logo_UL logo_UA)
Timing point 3 (all scoring): 3.89624s.
Improved score to -819.411974 (dScore=0.966651) w/ new primitive
	#(logo_FWRT logo_UL logo_UA) : turtle -> turtle
rewrote all of the frontiers in 1.11301m.
Timing point 4 (rewrite final frontiers): 1.11301m.
Completed one step of memory consolidation in 4.82189m.
New primitive is used 6 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (logo_FWRT logo_ZL #(logo_DIVA logo_UA 4) (#(logo_FWRT logo_UL logo_UA) $0)))
  (lambda (logo_FWRT (logo_MULL logo_UL 2) #(logo_DIVA logo_UA 4) (#(logo_FWRT logo_UL logo_UA) $0)))
  (lambda (#(logo_FWRT logo_UL logo_UA) $0))
  (lambda (#(logo_FWRT logo_UL logo_UA) (logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0)) (#(logo_FWRT logo_UL logo_UA) $0))))
  (lambda (logo_forLoop 3 (lambda (lambda (logo_FWRT (logo_DIVL logo_UL 2) logo_UA (logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0)) $0)))) $0))
  (lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 7 (logo_GETSET (lambda (#(logo_FWRT logo_UL logo_UA) $0)) $0)))) $0))
Total number of candidates: 96402
Constructed version spaces and coalesced candidates in 1.56099m.
Timing point -1 right before normalizing: 1.73639m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.73641m.
Timing Comparison Point A (vspace+beam) (millis): 104184
Rewrote topK in 1.38735m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.38735m.
sanity check for timing comparison, should be same as comparison point: 3.12376m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 187425
Initial score: -819.286015
Initial language score: 0.000000
Initial joint score: -819.286015 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.8673s.
Best MDL score: -821.733921 with (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) (logo_SUBA logo_UA logo_epsA) $1 $0)))
No improvement possible with MDL.
Scored candidates with language and grammar in 1.76328s.
Best joint score: -821.733921 with (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY $1 (logo_MULL logo_epsL $0)))) (logo_SUBA logo_UA logo_epsA) $1 $0)))
Timing point 3 (all scoring): 3.64791s.
No improvement possible with joint score.
Completed one step of memory consolidation in 3.18488m.
completed ocaml compression in 57.4453m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/logo_logo_batch_50_1h_ellisk_2019-03-23T14.09.23/bench000_it1.json"
	User time (seconds): 380.14
	System time (seconds): 14.01
	Percent of CPU this job got: 11%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 57:26.92
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 8429036
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 16549858
	Voluntary context switches: 3259
	Involuntary context switches: 39932
	Swaps: 0
	File system inputs: 0
	File system outputs: 72
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
