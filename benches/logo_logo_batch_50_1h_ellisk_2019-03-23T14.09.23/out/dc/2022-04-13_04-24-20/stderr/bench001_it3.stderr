Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 294611
Constructed version spaces and coalesced candidates in 1.40828m.
Timing point -1 right before normalizing: 1.65912m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.65919m.
Timing Comparison Point A (vspace+beam) (millis): 99551
Rewrote topK in 1.37801m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.37802m.
sanity check for timing comparison, should be same as comparison point: 3.03721m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 182232
Initial score: -1204.201694
Initial language score: 0.000000
Initial joint score: -1204.201694 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 2.92804s.
Best MDL score: -1195.856149 with (lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0))))))))
Scored candidates with language and grammar in 3.22799s.
Best joint score: -1195.856149 with (lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0))))))))
Timing point 3 (all scoring): 6.18105s.
Improved score to -1195.856149 (dScore=8.345545) w/ new primitive
	#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) : int -> (turtle -> turtle) -> int -> turtle -> turtle
rewrote all of the frontiers in 54.5346s.
Timing point 4 (rewrite final frontiers): 54.5347s.
Completed one step of memory consolidation in 4.04935m.
New primitive is used 10 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0)) 6 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) 3 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 3 logo_UL $0)) 3 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0)) (#(logo_FWRT logo_UL logo_UA) $0))) 5 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 2 $0)) 5 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))) 6 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0)) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))) 6 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) 6 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) $0)) 7 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY #(logo_DIVA logo_UA 4) logo_UL $0))) 7 $0))
Total number of candidates: 258329
Constructed version spaces and coalesced candidates in 56.7745s.
Timing point -1 right before normalizing: 1.16822m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.16824m.
Timing Comparison Point A (vspace+beam) (millis): 70094
Rewrote topK in 1.05413m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.05413m.
sanity check for timing comparison, should be same as comparison point: 2.22238m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 133342
Initial score: -1195.709802
Initial language score: 0.000000
Initial joint score: -1195.709802 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.14783s.
Best MDL score: -1159.052425 with (logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0)))
Scored candidates with language and grammar in 3.26941s.
Best joint score: -1159.052425 with (logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0)))
Timing point 3 (all scoring): 6.43767s.
Improved score to -1159.052425 (dScore=36.657377) w/ new primitive
	#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) : turtle -> turtle
rewrote all of the frontiers in 38.3234s.
Timing point 4 (rewrite final frontiers): 38.3234s.
Completed one step of memory consolidation in 2.96864m.
New primitive is used 12 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (logo_GETSET (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)))
  (lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))
  (lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0))))
  (lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) logo_UA 5 logo_epsL (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0))))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))))
  (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))
  (lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(logo_FWRT logo_UL logo_UA) $0)))))
  (lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) 2 logo_UL $0)) $0)))) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))) 5 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))) 6 $0))
Total number of candidates: 240136
Constructed version spaces and coalesced candidates in 53.1513s.
Timing point -1 right before normalizing: 1.09845m.
Trimmed down the beam, have only 299 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.09848m.
Timing Comparison Point A (vspace+beam) (millis): 65908
Rewrote topK in 52.0715s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 52.0718s.
sanity check for timing comparison, should be same as comparison point: 1.96634m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 117980
Initial score: -1158.868397
Initial language score: 0.000000
Initial joint score: -1158.868397 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.24643s.
Best MDL score: -1142.525420 with (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL)
Scored candidates with language and grammar in 3.17158s.
Best joint score: -1142.525420 with (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL)
Timing point 3 (all scoring): 6.44141s.
Improved score to -1142.525420 (dScore=16.342977) w/ new primitive
	#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) : turtle -> turtle
rewrote all of the frontiers in 31.6733s.
Timing point 4 (rewrite final frontiers): 31.6734s.
Completed one step of memory consolidation in 2.60182m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0))
  (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) $0)))
  (lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0))
Total number of candidates: 126236
Constructed version spaces and coalesced candidates in 50.1142s.
Timing point -1 right before normalizing: 59.0095s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 59.0108s.
Timing Comparison Point A (vspace+beam) (millis): 59010
Rewrote topK in 50.3889s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 50.3892s.
sanity check for timing comparison, should be same as comparison point: 1.82333m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 109400
Initial score: -1142.440503
Initial language score: 0.000000
Initial joint score: -1142.440503 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.23847s.
Best MDL score: -1137.970629 with (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL))
Scored candidates with language and grammar in 3.2225s.
Best joint score: -1137.970629 with (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL))
Timing point 3 (all scoring): 6.48562s.
Improved score to -1137.970629 (dScore=4.469874) w/ new primitive
	#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) : int -> turtle -> turtle
rewrote all of the frontiers in 31.8116s.
Timing point 4 (rewrite final frontiers): 31.8116s.
Completed one step of memory consolidation in 2.46188m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 3 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 5 $0))
  (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) (logo_MULA logo_epsA $0) logo_IFTY logo_epsL)) 4 $0)))
Total number of candidates: 122213
Constructed version spaces and coalesced candidates in 48.8895s.
Timing point -1 right before normalizing: 57.4097s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 57.4162s.
Timing Comparison Point A (vspace+beam) (millis): 57416
Rewrote topK in 51.9357s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 51.9362s.
sanity check for timing comparison, should be same as comparison point: 1.82254m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 109352
Initial score: -1137.892994
Initial language score: 0.000000
Initial joint score: -1137.892994 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.48803s.
Best MDL score: -1134.544267 with (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))
Scored candidates with language and grammar in 3.22498s.
Best joint score: -1134.544267 with (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))
Timing point 3 (all scoring): 6.7363s.
Improved score to -1134.544267 (dScore=3.348727) w/ new primitive
	#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) : turtle -> turtle
rewrote all of the frontiers in 31.2171s.
Timing point 4 (rewrite final frontiers): 31.2172s.
Completed one step of memory consolidation in 2.45548m.
New primitive is used 8 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) 3 $0))
  (lambda (logo_GETSET (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))
  (lambda (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(logo_FWRT logo_UL logo_UA) $0))))
  (lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0)) (#(logo_FWRT logo_UL logo_UA) $0)))))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 6 $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 6 $0))
Total number of candidates: 112017
Constructed version spaces and coalesced candidates in 46.3759s.
Timing point -1 right before normalizing: 54.2733s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 54.2745s.
Timing Comparison Point A (vspace+beam) (millis): 54274
Rewrote topK in 48.2496s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 48.2499s.
sanity check for timing comparison, should be same as comparison point: 1.70874m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 102524
Initial score: -1134.464713
Initial language score: 0.000000
Initial joint score: -1134.464713 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.40932s.
Best MDL score: -1131.640111 with (lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0))
Scored candidates with language and grammar in 3.25433s.
Best joint score: -1131.640111 with (lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0))
Timing point 3 (all scoring): 6.68867s.
Improved score to -1131.640111 (dScore=2.824602) w/ new primitive
	#(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0)) : turtle -> turtle
rewrote all of the frontiers in 29.9518s.
Timing point 4 (rewrite final frontiers): 29.9518s.
Completed one step of memory consolidation in 2.31967m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0)) $0))
  (lambda (#(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY (logo_DIVA #(logo_DIVA logo_UA 4) logo_IFTY) logo_epsL) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 4 $0)))) $0)) $0))
Total number of candidates: 110052
Constructed version spaces and coalesced candidates in 47.7524s.
Timing point -1 right before normalizing: 55.1504s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 55.1516s.
Timing Comparison Point A (vspace+beam) (millis): 55151
Rewrote topK in 47.6434s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 47.6438s.
sanity check for timing comparison, should be same as comparison point: 1.71326m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 102795
Initial score: -1131.588732
Initial language score: 0.000000
Initial joint score: -1131.588732 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.40099s.
Best MDL score: -1129.498180 with (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4)))
Scored candidates with language and grammar in 3.48853s.
Best joint score: -1129.498180 with (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4)))
Timing point 3 (all scoring): 6.91365s.
Improved score to -1129.498180 (dScore=2.090552) w/ new primitive
	#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) : int -> tlength -> turtle -> turtle
rewrote all of the frontiers in 29.6112s.
Timing point 4 (rewrite final frontiers): 29.6112s.
Completed one step of memory consolidation in 2.32228m.
New primitive is used 12 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 (logo_MULL logo_UL 3) $0))
  (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 2 logo_UL $0)))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 2 logo_epsL $0))
  (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 3 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 logo_UL $0)))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 2 logo_UL (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 $0)))) $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 3 logo_UL (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 2 (#(logo_FWRT logo_UL logo_UA) $0))))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 8 (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) logo_IFTY logo_UL $0))) 7 $0))
  (lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 8 logo_UL (#(logo_FWRT logo_UL logo_UA) $0)))) $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 logo_UL $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 (logo_MULL logo_UL 2) $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 5 (logo_MULL logo_UL 3) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 #(logo_DIVA logo_UA 4))) 8 (logo_MULL logo_UL $1) $0))) $0))
Total number of candidates: 99181
Constructed version spaces and coalesced candidates in 46.3s.
Timing point -1 right before normalizing: 53.6479s.
Trimmed down the beam, have only 299 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 53.6509s.
Timing Comparison Point A (vspace+beam) (millis): 53650
Rewrote topK in 46.7662s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 46.7666s.
sanity check for timing comparison, should be same as comparison point: 1.67363m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 100417
Initial score: -1129.413166
Initial language score: 0.000000
Initial joint score: -1129.413166 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.48252s.
Best MDL score: -1125.137935 with (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0))
Scored candidates with language and grammar in 3.44234s.
Best joint score: -1125.137935 with (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0))
Timing point 3 (all scoring): 6.94971s.
Improved score to -1125.137935 (dScore=4.275231) w/ new primitive
	#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) : turtle -> turtle
rewrote all of the frontiers in 29.4439s.
Timing point 4 (rewrite final frontiers): 29.444s.
Completed one step of memory consolidation in 2.28045m.
New primitive is used 7 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0)))
  (lambda (#(logo_FWRT logo_UL logo_UA) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0))))
  (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0))))
  (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (#(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) 7 logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))
  (lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0)) (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) $0)))) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(logo_FWRT logo_UL logo_UA) (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0))) (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 5 $0)))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 7 (lambda (#(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) logo_IFTY logo_epsA (logo_MULL logo_epsL $0))) 1 $0)) $0)) 6 $0))
Total number of candidates: 91384
Constructed version spaces and coalesced candidates in 40.1174s.
Timing point -1 right before normalizing: 47.809s.
Trimmed down the beam, have only 299 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 47.8107s.
Timing Comparison Point A (vspace+beam) (millis): 47810
Rewrote topK in 42.9105s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 42.9109s.
sanity check for timing comparison, should be same as comparison point: 1.51203m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 90721
Initial score: -1125.012439
Initial language score: 0.000000
Initial joint score: -1125.012439 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.78617s.
Best MDL score: -1123.198714 with (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL))
Scored candidates with language and grammar in 3.47626s.
Best joint score: -1123.198714 with (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL))
Timing point 3 (all scoring): 7.28812s.
Improved score to -1123.198714 (dScore=1.813725) w/ new primitive
	#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) : int -> turtle -> turtle
rewrote all of the frontiers in 27.1321s.
Timing point 4 (rewrite final frontiers): 27.1321s.
Completed one step of memory consolidation in 2.08597m.
New primitive is used 6 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0))
  (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 6 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0)))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 7 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 8 $0))
  (lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 2 $0)) $0)))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) $2 (logo_GETSET $3 $0)))))))) 5 (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_FWRT (logo_MULL $2 $1) $4 $0))))))) #(logo_DIVA logo_UA 4) $0 logo_UL)) 3 $0)) 3 $0))
Total number of candidates: 87364
Constructed version spaces and coalesced candidates in 28.2183s.
Timing point -1 right before normalizing: 33.9478s.
Trimmed down the beam, have only 298 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 33.9491s.
Timing Comparison Point A (vspace+beam) (millis): 33949
Rewrote topK in 32.8904s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 32.8907s.
sanity check for timing comparison, should be same as comparison point: 1.114m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 66839
Initial score: -1123.037819
Initial language score: 0.000000
Initial joint score: -1123.037819 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.80105s.
Best MDL score: -1122.373479 with (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL))
Scored candidates with language and grammar in 3.69056s.
Best joint score: -1122.373479 with (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL))
Timing point 3 (all scoring): 7.51901s.
Improved score to -1122.373479 (dScore=0.664340) w/ new primitive
	#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) : int -> turtle -> turtle
rewrote all of the frontiers in 18.1652s.
Timing point 4 (rewrite final frontiers): 18.1653s.
Completed one step of memory consolidation in 1.54236m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0))) 8 (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 3 $0)))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 5 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $2 $3 $0))))))) $0 (logo_DIVA logo_UA $0) logo_UL)) 7 $0))
Total number of candidates: 83410
Constructed version spaces and coalesced candidates in 28.6255s.
Timing point -1 right before normalizing: 35.2438s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 35.2467s.
Timing Comparison Point A (vspace+beam) (millis): 35246
Rewrote topK in 33.3271s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 33.3274s.
sanity check for timing comparison, should be same as comparison point: 1.1429m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 68574
Initial score: -1122.229951
Initial language score: 0.000000
Initial joint score: -1122.229951 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.664s.
Best MDL score: -1124.433918 with (lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET $4 $0)))) $0))))
No improvement possible with MDL.
Scored candidates with language and grammar in 3.86206s.
Best joint score: -1124.433918 with (lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (#(logo_PT (lambda (#(logo_FWRT logo_UL logo_UA) $0))) (logo_GETSET $4 $0)))) $0))))
Timing point 3 (all scoring): 7.55303s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.26881m.
completed ocaml compression in 26.3582m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/logo_logo_batch_50_1h_ellisk_2019-03-23T14.09.23/bench001_it3.json"
	User time (seconds): 185.18
	System time (seconds): 3.93
	Percent of CPU this job got: 11%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 26:21.55
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 1334604
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 3195099
	Voluntary context switches: 3147
	Involuntary context switches: 18754
	Swaps: 0
	File system inputs: 0
	File system outputs: 128
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
