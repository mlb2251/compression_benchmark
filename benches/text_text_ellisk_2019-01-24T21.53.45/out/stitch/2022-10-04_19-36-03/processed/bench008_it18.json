{
    "bench_group": "text_text_ellisk_2019-01-24T21.53.45",
    "bench": "bench008_it18",
    "mode": "stitch",
    "run": "compression_benchmark/benches/text_text_ellisk_2019-01-24T21.53.45/out/stitch/2022-10-04_19-36-03",
    "metrics": {
        "time_binary_seconds": 0.06,
        "time_per_inv_with_rewrite": 8.0,
        "time_per_inv_no_rewrite": 7.5,
        "mem_peak_kb": 5080,
        "compression_ratio": 1.0307269736345663,
        "absolute_compression": 2036,
        "compression_ratio_min": 1.0700985364439937
    },
    "num_inventions": 2,
    "inventions": [
        {
            "name": "fn_11",
            "dreamcoder": "#(lambda (lambda (lambda ($1 ($0 1) (lambda (lambda (if (char-eq? $1 $4) 1 ($2 $0))))))))",
            "stitch_uncanonical": "(lam (#1 ($0 1) (lam (lam (if (char-eq? $1 #0) 1 ($2 $0))))))",
            "stitch_canonical": "(lam (#0 ($0 1) (lam (lam (if (char-eq? $1 #1) 1 ($2 $0))))))",
            "arity": 2
        },
        {
            "name": "fn_12",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) (cons $2 $0) $1 $3)))))",
            "stitch_uncanonical": "(lam (lam (prev_dc_inv_8 (cons #1 $0) $1 #0)))",
            "stitch_canonical": "(lam (lam (prev_dc_inv_8 (cons #0 $0) $1 #1)))",
            "arity": 2
        }
    ]
}