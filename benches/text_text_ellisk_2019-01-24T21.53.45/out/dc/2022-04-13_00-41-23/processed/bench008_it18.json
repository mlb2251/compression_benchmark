{
    "bench_group": "text_text_ellisk_2019-01-24T21.53.45",
    "bench": "bench008_it18",
    "mode": "dreamcoder",
    "run": "benches/text_text_ellisk_2019-01-24T21.53.45/out/dc/2022-04-13_00-41-23",
    "metrics": {
        "time_binary_seconds": 221.96,
        "time_per_inv_with_rewrite": 59331.0,
        "time_per_inv_no_rewrite": 31528.0,
        "mem_peak_kb": 507772,
        "compression_ratio": 1.0613529347775412,
        "absolute_compression": 3948
    },
    "num_inventions": 2,
    "inventions": [
        {
            "name": "fn_0",
            "stitch_uncanonical": "(fn_8 (cons #0 #1))",
            "stitch_canonical": "(fn_8 (cons #0 #1))",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) (cons $1 $0))))"
        },
        {
            "name": "fn_1",
            "stitch_uncanonical": "(fn_4 #0 (lam (fold (cdr #0) ($0 1) (lam (lam (if (char-eq? $1 #1) 1 ($2 $0)))))))",
            "stitch_canonical": "(fn_4 #0 (lam (fold (cdr #0) ($0 1) (lam (lam (if (char-eq? $1 #2) 1 ($2 $0)))))))",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range ($0 (+ 1)))))) $1 (lambda (fold (cdr $2) ($0 1) (lambda (lambda (if (char-eq? $1 $3) 1 ($2 $0)))))))))"
        }
    ]
}