{
  "DSL": {
    "logVariable": -0.4607407358084563,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $4 $4 $3 $0)) $1 $2 $0) $0))))))",
        "logProbability": -1.280708565895131
      },
      { "expression": "zip", "logProbability": -1.3496950686649791 },
      { "expression": "map", "logProbability": -1.3593945028877399 },
      { "expression": "empty", "logProbability": -1.3966166360746803 },
      { "expression": "cons", "logProbability": -1.4622987131593224 },
      { "expression": "cdr", "logProbability": -1.4630300181718692 },
      { "expression": "*.", "logProbability": -2.021345128916064 },
      { "expression": "pi", "logProbability": -2.368853870786005 },
      { "expression": "/.", "logProbability": -2.4254553569952995 },
      { "expression": "+.", "logProbability": -2.6208668940338913 },
      { "expression": "-.", "logProbability": -2.7279656627239914 },
      { "expression": "0.", "logProbability": -2.779849131724414 },
      { "expression": "1.", "logProbability": -2.952619014874877 },
      { "expression": "power", "logProbability": -2.990790512164934 },
      { "expression": "fold", "logProbability": -3.144971501997925 },
      { "expression": "car", "logProbability": -3.144971501997925 },
      {
        "expression": "#(lambda (map (lambda (*. $0 $1))))",
        "logProbability": -1.1150703711791232
      },
      {
        "expression": "#(lambda (/. 1. $0))",
        "logProbability": -2.382289842512024
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "logProbability": -2.596959037328982
      },
      {
        "expression":
          "#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2))))))",
        "logProbability": -2.7584076211805826
      },
      {
        "expression": "#(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "logProbability": -2.6298658918482722
      },
      {
        "expression": "#(lambda (fold $0 0. (lambda (lambda (+. $0 $1)))))",
        "logProbability": -2.6543261880565363
      },
      {
        "expression":
          "#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.)))",
        "logProbability": -2.7284401503231726
      },
      {
        "expression": "#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1))))",
        "logProbability": -2.6677420887863597
      },
      {
        "expression":
          "#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3)))))",
        "logProbability": -2.733627515098709
      },
      {
        "expression":
          "#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $1 $0))))))",
        "logProbability": -2.728902877289301
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1))))))",
        "logProbability": -2.801703047196471
      },
      {
        "expression": "#(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "logProbability": -2.808488950074234
      },
      {
        "expression":
          "#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1)))))))",
        "logProbability": -2.9666976215764937
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 0.)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) 1. 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (#(lambda (/. 1. $0)) pi) pi)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 0.) (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) 1. 1.)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $0 $0 (*. $0 pi) pi)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $0 $0 (*. pi $0) pi)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) (+. $0 (/. $0 (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) pi))) pi))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) (+. (/. $0 (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) pi)) $0) pi))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $0 $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) $0 $0)) pi)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $1 $0)))))) $3 $3 (+. $2 $2) (-. $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $1 $0)))))) $3 $3 (-. $0 $1) (+. $2 $2))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $0 $1) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (/. 1. $0)) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $0 $1) (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) 1. 1.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $1 $0) (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) 1. 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $1 $0 empty)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $1 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $1 $0 empty)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (/. (+. $0 $0) (-. pi (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $0 $0) (-. pi (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (-. pi (#(lambda (/. 1. $0)) pi)) (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (#(lambda (/. 1. $0)) $0) (-. pi (#(lambda (/. 1. $0)) pi)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (-. pi (#(lambda (/. 1. $0)) pi)) (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $1 $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $1 $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $1 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty (#(lambda (/. 1. $0)) $0)))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $0 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 1.))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (/. $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (/. $0 $0) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (map (lambda $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (map (lambda $0) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (map (lambda $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (map (lambda $0) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      {
                        "constructor": "->",
                        "arguments": [
                          { "constructor": "real", "arguments": [] },
                          { "constructor": "real", "arguments": [] }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $1 $0)))))) $3 $0 $1 $2)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $1 $0)))))) $3 $0 $2 $1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $1 $0)))))) $3 $0 $1 $2) $4))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $1 $0)))))) $3 $0 $1 $2)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (-. (*. $2 $3) (*. $1 $0)))))) $3 $0 $2 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (/. $1 (#(lambda (/. 1. $0)) $2)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (/. $0 (#(lambda (/. 1. $0)) $1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $3 $2 $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $3 $2 $1 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $3 $2 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $1) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $3 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $2) $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $3) $2 $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $1 (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $1 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 0.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 0.) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $1 $1) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (*. $1 $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $3 $2 $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $3 $2 $1 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $3 $2 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $1) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) $3 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $2) $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 (+. (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 $1) $2)) $3))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $3) $2 $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (/. $0 (#(lambda (/. 1. $0)) $1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (/. $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $0 pi)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. pi (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) (#(lambda (/. 1. $0)) pi) $0)))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. (+. pi pi) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) $1 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) $1 (#(lambda (/. 1. $0)) (#(lambda (/. 1. $0)) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) $1 (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (/. 1. $0)) (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) $0 (#(lambda (lambda (/. $1 (/. (+. $0 $0) $1)))) (#(lambda (/. 1. $0)) pi) $1)))))) $1 (#(lambda (/. 1. $0)) (#(lambda (/. 1. $0)) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $4 $4 $3 $0)) $1 $2 $0) $0)))))) $1 pi 0. $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $4 $4 $3 $0)) $1 $2 $0) $0)))))) $2 pi 0. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $4 $4 $3 $0)) $1 $2 $0) $0)))))) $1 pi (#(lambda (/. 1. $0)) $1) $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $4 $4 $3 $0)) $1 $2 $0) $0)))))) $1 pi (#(lambda (/. 1. $0)) $2) $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $2 $2 pi $0)) $1 (#(lambda (/. 1. $0)) $1) $0) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $2 $2 $1 $0)) pi $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $2 $2 $2 $0)) pi $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $2 (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $1 $1 $0)) pi $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $2 (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $1 $2 $0)) pi $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) (#(lambda (power $0 (#(lambda (lambda (/. $0 (/. (+. 1. 1.) $1)))) 1. 1.))) (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $4 $4 $3 $0)) $1 $2 $0) $0)))))) $1 $1 pi $2 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $2 pi $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $2 $1 pi $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $2 0. $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $2 $1 0. $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $2 1. $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $2 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $2 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $2 $1 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $2 $1 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (/. $3 (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) $0 $1) $2)))))) $1 $2 pi $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $1 (-. 0. $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. (-. 0. $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (-. 0. (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (-. 0. (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 (-. 0. $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty (#(lambda (/. 1. $0)) $0)))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        {
          "program":
            "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty (#(lambda (/. 1. $0)) $0)))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) empty $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (#(lambda (map (lambda (*. $0 $1)))) 1. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (cons 0. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0) 1.))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (#(lambda (map (lambda (*. $0 $1)))) 1. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (cons 0. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0) 1.))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (#(lambda (/. 1. $0)) $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $0 (lambda (lambda (#(lambda (/. 1. $0)) $0)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $0 (lambda (lambda (#(lambda (/. 1. $0)) $1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. 1. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (#(lambda (/. 1. $0)) $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (#(lambda (/. 1. $0)) $0)) (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (*. $0 (*. $0 pi)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. $0 (*. pi $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 $0) pi))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 pi) $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. pi $0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) (cons $0 empty) (*. $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) (cons $1 empty) (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (+. $0 (*. $1 $1))))))) (cons $1 (cons $0 empty)) 0.)))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}