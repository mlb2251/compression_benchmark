{
    "verbose": false,
    "arity": 3,
    "topK": 2,
    "pseudoCounts": 30.0,
    "aic": 1.0,
    "bs": 1000000,
    "topI": 300,
    "structurePenalty": 1.5,
    "CPUs": 8,
    "lc_score": 0.0,
    "DSL": {
        "logVariable": -0.767829,
        "productions": [
            {
                "expression": "logo_UA",
                "logProbability": -0.189114
            },
            {
                "expression": "logo_DIVA",
                "logProbability": -0.206001
            },
            {
                "expression": "logo_MULA",
                "logProbability": -0.207526
            },
            {
                "expression": "logo_UL",
                "logProbability": -0.211556
            },
            {
                "expression": "logo_SUBA",
                "logProbability": -0.226441
            },
            {
                "expression": "logo_epsA",
                "logProbability": -0.230983
            },
            {
                "expression": "logo_ZA",
                "logProbability": -0.236764
            },
            {
                "expression": "logo_ADDA",
                "logProbability": -0.240315
            },
            {
                "expression": "logo_ZL",
                "logProbability": -0.44088
            },
            {
                "expression": "logo_MULL",
                "logProbability": -0.538442
            },
            {
                "expression": "logo_DIVL",
                "logProbability": -0.539813
            },
            {
                "expression": "logo_epsL",
                "logProbability": -0.572693
            },
            {
                "expression": "3",
                "logProbability": -0.855141
            },
            {
                "expression": "2",
                "logProbability": -0.922175
            },
            {
                "expression": "4",
                "logProbability": -0.967535
            },
            {
                "expression": "5",
                "logProbability": -1.064308
            },
            {
                "expression": "6",
                "logProbability": -1.10192
            },
            {
                "expression": "8",
                "logProbability": -1.111991
            },
            {
                "expression": "7",
                "logProbability": -1.119122
            },
            {
                "expression": "0",
                "logProbability": -1.132847
            },
            {
                "expression": "1",
                "logProbability": -1.146675
            },
            {
                "expression": "logo_IFTY",
                "logProbability": -1.205843
            },
            {
                "expression": "9",
                "logProbability": -1.239194
            },
            {
                "expression": "logo_forLoop",
                "logProbability": -1.929638
            },
            {
                "expression": "logo_GETSET",
                "logProbability": -2.0031
            },
            {
                "expression": "logo_PT",
                "logProbability": -2.038623
            },
            {
                "expression": "logo_FWRT",
                "logProbability": -2.049053
            },
            {
                "expression": "#(logo_DIVA logo_UA 4)",
                "logProbability": -0.123451
            },
            {
                "expression": "#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0))))",
                "logProbability": -1.746117
            },
            {
                "expression": "#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA)",
                "logProbability": -1.818842
            },
            {
                "expression": "#(lambda (lambda (logo_forLoop 5 $0 $1)))",
                "logProbability": -1.826634
            },
            {
                "expression": "#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)))",
                "logProbability": -1.831777
            },
            {
                "expression": "#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA))",
                "logProbability": -1.845002
            },
            {
                "expression": "#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4))",
                "logProbability": -1.849614
            },
            {
                "expression": "#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))",
                "logProbability": -1.869592
            },
            {
                "expression": "#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA)",
                "logProbability": -1.872921
            },
            {
                "expression": "#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4)))",
                "logProbability": -1.874474
            },
            {
                "expression": "#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0)))))",
                "logProbability": -1.896079
            },
            {
                "expression": "#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA)))",
                "logProbability": -1.89877
            },
            {
                "expression": "#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0)))))",
                "logProbability": -1.907779
            },
            {
                "expression": "#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0))))",
                "logProbability": -1.948325
            },
            {
                "expression": "#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1))))",
                "logProbability": -1.949356
            },
            {
                "expression": "#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0)))))",
                "logProbability": -1.978172
            },
            {
                "expression": "#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0)))))",
                "logProbability": -1.978172
            },
            {
                "expression": "#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0)))))))",
                "logProbability": -1.985072
            },
            {
                "expression": "#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0))",
                "logProbability": -2.008931
            },
            {
                "expression": "#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0))))))))",
                "logProbability": -2.008944
            },
            {
                "expression": "#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0)))",
                "logProbability": -2.008944
            },
            {
                "expression": "#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0)))))))",
                "logProbability": -2.008946
            },
            {
                "expression": "#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY)))",
                "logProbability": -2.01682
            }
        ],
        "continuationType": {
            "constructor": "turtle",
            "arguments": []
        }
    },
    "iterations": 20,
    "frontiers": [
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 3 $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 5 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 6 $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_MULL logo_UL 2) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 7 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 7 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_DIVL logo_UL 2) 8 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) (logo_DIVL logo_UL 2) 8 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 2 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 2 (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 2 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_epsL #(logo_DIVA logo_UA 4) 2 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (logo_FWRT logo_epsL #(logo_DIVA logo_UA 4) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_epsL)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_UL #(logo_DIVA logo_UA 4) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 4 $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 7 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda $0) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda $0) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 3 $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 (logo_MULL logo_UL 3))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 8 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 8 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 5 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 0 (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 6 $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 6 $0)))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_DIVA (logo_MULA logo_UA 4) 9) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_UL 4) (logo_MULA (logo_DIVA logo_UA 9) 4) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 (logo_GETSET (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0)) $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0)) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0)))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 0 $0)))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 1 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 2 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 3 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 5 (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 4 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 1 $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 1 $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 5 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 5 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 5 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 6 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 6 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) $2 $0)) $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 1 3 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 1 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 2 2 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 2 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 3 1 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 3 $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0) logo_ZL)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0) logo_UL))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL) logo_UL))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0) logo_UL))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 1 $0) logo_UL))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 (logo_DIVL logo_UL 2)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 (logo_DIVL logo_UL 2)))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0) logo_ZL)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)) logo_UL))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL)) logo_UL))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0)) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 2 $0)) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_UL #(logo_DIVA logo_UA 4) $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0) logo_UL))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0) logo_UL))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 3 $0)) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 3 $0)) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 6 $0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 1 $0)))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (logo_FWRT logo_UL logo_UA (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (logo_forLoop 8 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 $0)))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0) (lambda (lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 $0)))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (logo_FWRT logo_UL logo_UA (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (logo_FWRT logo_UL logo_ZA (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0) logo_ZL)) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 1 $0)) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0) logo_UL))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL) logo_UL))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (logo_forLoop 8 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 7 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 $0)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (logo_forLoop 8 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_UL 2 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 7 $0)))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0)))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_UL #(logo_DIVA logo_UA 4) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 2 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "turtle",
                        "arguments": []
                    },
                    {
                        "constructor": "turtle",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0)))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        }
    ],
    "info": {
        "iteration": 13,
        "num_learned": 2,
        "new_grammar": {
            "logVariable": -0.766295,
            "productions": [
                {
                    "expression": "logo_UA",
                    "logProbability": -0.169229
                },
                {
                    "expression": "logo_UL",
                    "logProbability": -0.190763
                },
                {
                    "expression": "logo_MULA",
                    "logProbability": -0.20174
                },
                {
                    "expression": "logo_DIVA",
                    "logProbability": -0.20498
                },
                {
                    "expression": "logo_epsA",
                    "logProbability": -0.224272
                },
                {
                    "expression": "logo_ZA",
                    "logProbability": -0.227157
                },
                {
                    "expression": "logo_ADDA",
                    "logProbability": -0.229544
                },
                {
                    "expression": "logo_SUBA",
                    "logProbability": -0.24238
                },
                {
                    "expression": "logo_ZL",
                    "logProbability": -0.531417
                },
                {
                    "expression": "logo_MULL",
                    "logProbability": -0.594049
                },
                {
                    "expression": "logo_DIVL",
                    "logProbability": -0.609684
                },
                {
                    "expression": "logo_epsL",
                    "logProbability": -0.64059
                },
                {
                    "expression": "2",
                    "logProbability": -0.90831
                },
                {
                    "expression": "3",
                    "logProbability": -0.922711
                },
                {
                    "expression": "4",
                    "logProbability": -1.012841
                },
                {
                    "expression": "6",
                    "logProbability": -1.055493
                },
                {
                    "expression": "1",
                    "logProbability": -1.084688
                },
                {
                    "expression": "5",
                    "logProbability": -1.09097
                },
                {
                    "expression": "8",
                    "logProbability": -1.151705
                },
                {
                    "expression": "7",
                    "logProbability": -1.161191
                },
                {
                    "expression": "0",
                    "logProbability": -1.257041
                },
                {
                    "expression": "logo_IFTY",
                    "logProbability": -1.273791
                },
                {
                    "expression": "9",
                    "logProbability": -1.278109
                },
                {
                    "expression": "logo_forLoop",
                    "logProbability": -2.117591
                },
                {
                    "expression": "logo_GETSET",
                    "logProbability": -2.183418
                },
                {
                    "expression": "logo_FWRT",
                    "logProbability": -2.208729
                },
                {
                    "expression": "logo_PT",
                    "logProbability": -2.222118
                },
                {
                    "expression": "#(logo_DIVA logo_UA 4)",
                    "logProbability": -0.172604
                },
                {
                    "expression": "#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0)))",
                    "logProbability": -1.855334
                },
                {
                    "expression": "#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0))))",
                    "logProbability": -1.953177
                },
                {
                    "expression": "#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4))",
                    "logProbability": -1.956197
                },
                {
                    "expression": "#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))",
                    "logProbability": -1.997042
                },
                {
                    "expression": "#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1))))",
                    "logProbability": -1.999358
                },
                {
                    "expression": "#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA)",
                    "logProbability": -2.031619
                },
                {
                    "expression": "#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA)",
                    "logProbability": -2.031678
                },
                {
                    "expression": "#(lambda (lambda (logo_forLoop 5 $0 $1)))",
                    "logProbability": -2.036582
                },
                {
                    "expression": "#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0)))))",
                    "logProbability": -2.045314
                },
                {
                    "expression": "#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA))",
                    "logProbability": -2.063872
                },
                {
                    "expression": "#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0)))",
                    "logProbability": -2.072586
                },
                {
                    "expression": "#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0)))))",
                    "logProbability": -2.087738
                },
                {
                    "expression": "#(lambda (lambda (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $1 (lambda (lambda (logo_GETSET $4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL $2 $0))))))))",
                    "logProbability": -2.100758
                },
                {
                    "expression": "#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0)))))",
                    "logProbability": -2.101366
                },
                {
                    "expression": "#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA)))",
                    "logProbability": -2.119167
                },
                {
                    "expression": "#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4)))",
                    "logProbability": -2.126543
                },
                {
                    "expression": "#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0))))",
                    "logProbability": -2.129745
                },
                {
                    "expression": "#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0)))))",
                    "logProbability": -2.129745
                },
                {
                    "expression": "#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0))))))))",
                    "logProbability": -2.143005
                },
                {
                    "expression": "#(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET $2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))",
                    "logProbability": -2.159598
                },
                {
                    "expression": "#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0)))))))",
                    "logProbability": -2.160665
                },
                {
                    "expression": "#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY)))",
                    "logProbability": -2.178827
                },
                {
                    "expression": "#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0))",
                    "logProbability": -2.190369
                },
                {
                    "expression": "#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0)))))))",
                    "logProbability": -2.213244
                }
            ],
            "continuationType": {
                "constructor": "turtle",
                "arguments": []
            }
        }
    }
}