Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 196750
Constructed version spaces and coalesced candidates in 47.2608s.
Timing point -1 right before normalizing: 57.4261s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 57.428s.
Timing Comparison Point A (vspace+beam) (millis): 57428
Rewrote topK in 46.0824s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 46.0828s.
sanity check for timing comparison, should be same as comparison point: 1.72518m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 103510
Initial score: -1158.985529
Initial language score: 0.000000
Initial joint score: -1158.985529 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.23497s.
Best MDL score: -1156.923157 with (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0))))))))
Scored candidates with language and grammar in 3.48016s.
Best joint score: -1156.923157 with (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0))))))))
Timing point 3 (all scoring): 7.73969s.
Improved score to -1156.923157 (dScore=2.062372) w/ new primitive
	#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) : int -> turtle -> turtle
rewrote all of the frontiers in 25.132s.
Timing point 4 (rewrite final frontiers): 25.1321s.
Completed one step of memory consolidation in 2.27339m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 2 $0))
  (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 3 $0))
Total number of candidates: 98130
Constructed version spaces and coalesced candidates in 41.6007s.
Timing point -1 right before normalizing: 49.9322s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 49.9341s.
Timing Comparison Point A (vspace+beam) (millis): 49934
Rewrote topK in 37.2641s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 37.2645s.
sanity check for timing comparison, should be same as comparison point: 1.45331m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 87198
Initial score: -1156.791094
Initial language score: 0.000000
Initial joint score: -1156.791094 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.68411s.
Best MDL score: -1143.048129 with (lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0)))
Scored candidates with language and grammar in 3.54977s.
Best joint score: -1143.048129 with (lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0)))
Timing point 3 (all scoring): 7.25828s.
Improved score to -1143.048129 (dScore=13.742965) w/ new primitive
	#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) : (turtle -> turtle) -> turtle -> turtle
rewrote all of the frontiers in 23.0998s.
Timing point 4 (rewrite final frontiers): 23.0999s.
Completed one step of memory consolidation in 1.95957m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) (logo_MULL logo_epsL $2) logo_epsA 7 $0))))) 4 $0)) $0))
  (lambda (#(lambda (lambda (logo_forLoop 7 (lambda (lambda (logo_GETSET $3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))) $0))) (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) $0))
Total number of candidates: 85114
Constructed version spaces and coalesced candidates in 40.1997s.
Timing point -1 right before normalizing: 46.9184s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 46.9217s.
Timing Comparison Point A (vspace+beam) (millis): 46921
Rewrote topK in 41.0032s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 41.0035s.
sanity check for timing comparison, should be same as comparison point: 1.46542m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 87925
Initial score: -1142.889010
Initial language score: 0.000000
Initial joint score: -1142.889010 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.96997s.
Best MDL score: -1127.040054 with (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0))))
Scored candidates with language and grammar in 3.53663s.
Best joint score: -1127.040054 with (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0))))
Timing point 3 (all scoring): 7.5324s.
Improved score to -1127.040054 (dScore=15.848956) w/ new primitive
	#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) : turtle -> turtle
rewrote all of the frontiers in 24.3468s.
Timing point 4 (rewrite final frontiers): 24.3469s.
Completed one step of memory consolidation in 1.99724m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))
  (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0))))) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0))) $0))
Total number of candidates: 83501
Constructed version spaces and coalesced candidates in 28.497s.
Timing point -1 right before normalizing: 34.8836s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 34.8855s.
Timing Comparison Point A (vspace+beam) (millis): 34885
Rewrote topK in 30.0281s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 30.0284s.
sanity check for timing comparison, should be same as comparison point: 1.0819m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 64913
Initial score: -1126.915014
Initial language score: 0.000000
Initial joint score: -1126.915014 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.77205s.
Best MDL score: -1124.570881 with (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0)))))
Scored candidates with language and grammar in 3.63942s.
Best joint score: -1124.570881 with (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0)))))
Timing point 3 (all scoring): 7.43677s.
Improved score to -1124.570881 (dScore=2.344133) w/ new primitive
	#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) : int -> turtle -> turtle
rewrote all of the frontiers in 19.4351s.
Timing point 4 (rewrite final frontiers): 19.4351s.
Completed one step of memory consolidation in 1.53029m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 0 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0))))
  (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 7 $0))
  (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 8 $0))
Total number of candidates: 82445
Constructed version spaces and coalesced candidates in 25.6641s.
Timing point -1 right before normalizing: 31.3441s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 31.3472s.
Timing Comparison Point A (vspace+beam) (millis): 31347
Rewrote topK in 28.2579s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 28.2583s.
sanity check for timing comparison, should be same as comparison point: 59.6056s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 59605
Initial score: -1124.422683
Initial language score: 0.000000
Initial joint score: -1124.422683 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.09556s.
Best MDL score: -1122.402312 with (lambda (lambda (logo_forLoop 5 $0 $1)))
Scored candidates with language and grammar in 3.73516s.
Best joint score: -1122.402312 with (lambda (lambda (logo_forLoop 5 $0 $1)))
Timing point 3 (all scoring): 7.85817s.
Improved score to -1122.402312 (dScore=2.020371) w/ new primitive
	#(lambda (lambda (logo_forLoop 5 $0 $1))) : turtle -> (int -> turtle -> turtle) -> turtle
rewrote all of the frontiers in 18.2242s.
Timing point 4 (rewrite final frontiers): 18.2243s.
Completed one step of memory consolidation in 1.42847m.
New primitive is used 9 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 4 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 6 $0))))))
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 $0)))))))
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0)))))
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 2 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 0 $0))))))
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $1 $0))))))
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0)))))))
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (logo_GETSET (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)) $0))))))
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (logo_GETSET (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) $1 $0)))))
Total number of candidates: 78508
Constructed version spaces and coalesced candidates in 25.1645s.
Timing point -1 right before normalizing: 30.4041s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 30.4058s.
Timing Comparison Point A (vspace+beam) (millis): 30405
Rewrote topK in 27.2061s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 27.2064s.
sanity check for timing comparison, should be same as comparison point: 57.6123s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 57612
Initial score: -1122.285763
Initial language score: 0.000000
Initial joint score: -1122.285763 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.13065s.
Best MDL score: -1119.713629 with (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))
Scored candidates with language and grammar in 3.79763s.
Best joint score: -1119.713629 with (lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0)))
Timing point 3 (all scoring): 7.95289s.
Improved score to -1119.713629 (dScore=2.572134) w/ new primitive
	#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) : turtle -> turtle
rewrote all of the frontiers in 15.9721s.
Timing point 4 (rewrite final frontiers): 15.9721s.
Completed one step of memory consolidation in 1.35924m.
New primitive is used 6 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))
  (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $0 (lambda (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL 3 $0))))))
  (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) $0))))
  (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))))
  (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0))))
  (lambda (logo_FWRT logo_UL logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)))))
Total number of candidates: 75136
Constructed version spaces and coalesced candidates in 21.2101s.
Timing point -1 right before normalizing: 25.7633s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 25.765s.
Timing Comparison Point A (vspace+beam) (millis): 25764
Rewrote topK in 24.2535s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 24.2538s.
sanity check for timing comparison, should be same as comparison point: 50.0188s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 50018
Initial score: -1119.737692
Initial language score: 0.000000
Initial joint score: -1119.737692 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.08941s.
Best MDL score: -1117.178988 with (lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1))))
Scored candidates with language and grammar in 3.87072s.
Best joint score: -1117.178988 with (lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1))))
Timing point 3 (all scoring): 7.98781s.
Improved score to -1117.178988 (dScore=2.558704) w/ new primitive
	#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) : turtle -> tlength -> turtle
rewrote all of the frontiers in 15.2639s.
Timing point 4 (rewrite final frontiers): 15.264s.
Completed one step of memory consolidation in 1.22151m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0) logo_UL))
  (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0) logo_UL))
  (lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 (logo_DIVL logo_UL 2)))) $0))
  (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 $0)) logo_UL))
Total number of candidates: 73999
Constructed version spaces and coalesced candidates in 25.4048s.
Timing point -1 right before normalizing: 30.3303s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 30.3336s.
Timing Comparison Point A (vspace+beam) (millis): 30333
Rewrote topK in 27.4385s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 27.439s.
sanity check for timing comparison, should be same as comparison point: 57.7727s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 57772
Initial score: -1117.227020
Initial language score: 0.000000
Initial joint score: -1117.227020 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.53077s.
Best MDL score: -1114.829443 with (lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0)))))))
Scored candidates with language and grammar in 4.09243s.
Best joint score: -1114.829443 with (lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0)))))))
Timing point 3 (all scoring): 8.65207s.
Improved score to -1114.829443 (dScore=2.397577) w/ new primitive
	#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) : int -> int -> turtle -> turtle
rewrote all of the frontiers in 14.2134s.
Timing point 4 (rewrite final frontiers): 14.2134s.
Completed one step of memory consolidation in 1.34432m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 1 3 $0))
  (lambda (#(lambda (lambda (logo_forLoop $0 (lambda (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) $3 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) $3 $0))))))) 2 2 $0))
Total number of candidates: 71539
Constructed version spaces and coalesced candidates in 22.4166s.
Timing point -1 right before normalizing: 27.8893s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 27.892s.
Timing Comparison Point A (vspace+beam) (millis): 27892
Rewrote topK in 24.7063s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 24.7067s.
sanity check for timing comparison, should be same as comparison point: 52.5988s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 52598
Initial score: -1114.864962
Initial language score: 0.000000
Initial joint score: -1114.864962 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.24147s.
Best MDL score: -1113.752957 with (logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4))
Scored candidates with language and grammar in 4.24905s.
Best joint score: -1113.752957 with (logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4))
Timing point 3 (all scoring): 8.5198s.
Improved score to -1113.752957 (dScore=1.112005) w/ new primitive
	#(logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4)) : turtle -> turtle
rewrote all of the frontiers in 15.0547s.
Timing point 4 (rewrite final frontiers): 15.0547s.
Completed one step of memory consolidation in 1.26992m.
New primitive is used 8 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4)) $0)))
  (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 2 (#(logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4)) $0)))
  (lambda (#(logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4)) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4)) $0))))
  (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4)) $0) logo_UL))
  (lambda (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4)) $0))))
  (lambda (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(lambda (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) (#(#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL logo_epsA) $0))) (#(logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4)) $0)) logo_UL))
  (lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0)) (#(logo_FWRT (logo_MULL logo_UL 1) #(logo_DIVA logo_UA 4)) $0)))) $0))
Total number of candidates: 69923
Constructed version spaces and coalesced candidates in 21.5726s.
Timing point -1 right before normalizing: 25.9839s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 25.9866s.
Timing Comparison Point A (vspace+beam) (millis): 25986
Rewrote topK in 27.2943s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 27.2948s.
sanity check for timing comparison, should be same as comparison point: 53.2815s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 53281
Initial score: -1113.729976
Initial language score: 0.000000
Initial joint score: -1113.729976 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.35609s.
Best MDL score: -1114.260338 with (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) $0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 0 $1))))
No improvement possible with MDL.
Scored candidates with language and grammar in 4.18777s.
Best joint score: -1114.260338 with (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) $0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) (logo_SUBA logo_UA logo_epsA))) 0 $1))))
Timing point 3 (all scoring): 8.57266s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.03094m.
completed ocaml compression in 15.4165m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/logo_logo_batch_50_1h_ellisk_2019-03-23T14.02.03/bench002_it8.json"
	User time (seconds): 152.70
	System time (seconds): 2.79
	Percent of CPU this job got: 16%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 15:25.05
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 904484
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 2124452
	Voluntary context switches: 2083
	Involuntary context switches: 15493
	Swaps: 0
	File system inputs: 0
	File system outputs: 152
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
