Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 60734
Constructed version spaces and coalesced candidates in 59.0655s.
Timing point -1 right before normalizing: 1.163m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.16315m.
Timing Comparison Point A (vspace+beam) (millis): 69789
Rewrote topK in 1.08659m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.0866m.
sanity check for timing comparison, should be same as comparison point: 2.24975m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 134985
Initial score: -1300.941042
Initial language score: 0.000000
Initial joint score: -1300.941042 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 5.73992s.
Best MDL score: -1298.558399 with (lambda (lambda (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $1 (lambda (lambda (logo_GETSET $4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL $2 $0))))))))
Scored candidates with language and grammar in 5.45338s.
Best joint score: -1298.558399 with (lambda (lambda (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $1 (lambda (lambda (logo_GETSET $4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL $2 $0))))))))
Timing point 3 (all scoring): 11.2325s.
Improved score to -1298.558399 (dScore=2.382642) w/ new primitive
	#(lambda (lambda (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $1 (lambda (lambda (logo_GETSET $4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL $2 $0)))))))) : (turtle -> turtle) -> turtle -> int -> turtle
rewrote all of the frontiers in 43.0568s.
Timing point 4 (rewrite final frontiers): 43.0568s.
Completed one step of memory consolidation in 3.15497m.
New primitive is used 5 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $1 (lambda (lambda (logo_GETSET $4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL $2 $0)))))))) (lambda (#(lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 0 (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) logo_epsL (logo_DIVA logo_epsA 2) $0)) $0)))) $0)) $0 3))
  (lambda (#(lambda (lambda (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $1 (lambda (lambda (logo_GETSET $4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL $2 $0)))))))) (lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 2 $0)) $0 6))
  (lambda (#(lambda (lambda (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $1 (lambda (lambda (logo_GETSET $4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL $2 $0)))))))) (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))) $0 6))
  (lambda (#(lambda (lambda (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $1 (lambda (lambda (logo_GETSET $4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL $2 $0)))))))) (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0) logo_UL))) $0 3))
  (lambda (#(lambda (lambda (lambda (#(lambda (lambda (logo_forLoop 5 $0 $1))) $1 (lambda (lambda (logo_GETSET $4 (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) $1 (logo_DIVA logo_UA $0)))) logo_ZL $2 $0)))))))) (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) $1 $0))))) 3 $0)) $0 3))
Total number of candidates: 44819
Constructed version spaces and coalesced candidates in 39.0942s.
Timing point -1 right before normalizing: 45.5146s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 45.5167s.
Timing Comparison Point A (vspace+beam) (millis): 45516
Rewrote topK in 44.9357s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 44.9365s.
sanity check for timing comparison, should be same as comparison point: 1.50755m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 90453
Initial score: -1298.415879
Initial language score: 0.000000
Initial joint score: -1298.415879 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 5.52776s.
Best MDL score: -1280.605712 with (lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET $2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))
Scored candidates with language and grammar in 5.49541s.
Best joint score: -1280.605712 with (lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET $2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0))))))
Timing point 3 (all scoring): 11.0611s.
Improved score to -1280.605712 (dScore=17.810167) w/ new primitive
	#(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET $2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))))) : (turtle -> turtle) -> turtle -> turtle
rewrote all of the frontiers in 25.6198s.
Timing point 4 (rewrite final frontiers): 25.6199s.
Completed one step of memory consolidation in 2.11934m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET $2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))))) (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) $0))) $0))
  (lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET $2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))))) (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(logo_FWRT logo_UL #(logo_DIVA logo_UA 4)) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_UL #(logo_DIVA logo_UA 4) 3 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY (#(lambda (logo_FWRT (logo_MULL logo_UL $0) #(logo_DIVA logo_UA 4))) 1 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) logo_IFTY $0)))))))) 1 $0)))) $0))
  (lambda (#(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET $2 (#(#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) logo_ZL logo_epsA) 8 $0)))))) (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $0 (lambda (lambda (logo_FWRT $4 $3 $0))))))) $1 $0 logo_IFTY))) (logo_MULL logo_epsL $0) logo_epsA)) 2 $0)) $0))
Total number of candidates: 40178
Constructed version spaces and coalesced candidates in 23.3071s.
Timing point -1 right before normalizing: 28.3605s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 28.3629s.
Timing Comparison Point A (vspace+beam) (millis): 28362
Rewrote topK in 30.5488s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 30.5491s.
sanity check for timing comparison, should be same as comparison point: 58.912s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 58912
Initial score: -1280.485593
Initial language score: 0.000000
Initial joint score: -1280.485593 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 5.43716s.
Best MDL score: -1280.798258 with (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL)))
No improvement possible with MDL.
Scored candidates with language and grammar in 5.40512s.
Best joint score: -1280.798258 with (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) (#(lambda (lambda (logo_FWRT $0 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_UA $0))) $1)))) $0 logo_UL)))
Timing point 3 (all scoring): 10.8763s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.16317m.
completed ocaml compression in 6.43793m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/logo_logo_batch_50_1h_ellisk_2019-03-23T14.02.03/bench003_it13.json"
	User time (seconds): 49.90
	System time (seconds): 0.77
	Percent of CPU this job got: 13%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 6:26.32
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 526344
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 583314
	Voluntary context switches: 433
	Involuntary context switches: 5085
	Swaps: 0
	File system inputs: 0
	File system outputs: 184
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
