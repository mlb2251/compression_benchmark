{
    "bench_group": "logo_logo_batch_50_1h_ellisk_2019-03-23T14.05.43",
    "bench": "bench001_it1",
    "mode": "dreamcoder",
    "run": "benches/logo_logo_batch_50_1h_ellisk_2019-03-23T14.05.43/out/dc/2022-04-13_02-09-45",
    "metrics": {
        "time_binary_seconds": 1939.88,
        "time_per_inv_with_rewrite": 191162.57142857142,
        "time_per_inv_no_rewrite": 115522.14285714286,
        "mem_peak_kb": 3046608,
        "compression_ratio": 1.1845778643822689,
        "absolute_compression": 15061
    },
    "num_inventions": 7,
    "inventions": [
        {
            "name": "fn_0",
            "stitch_uncanonical": "(fn_1 logo_UL)",
            "stitch_canonical": "(fn_1 logo_UL)",
            "dreamcoder": "#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL)"
        },
        {
            "name": "fn_1",
            "stitch_uncanonical": "(fn_3 logo_epsA logo_epsL)",
            "stitch_canonical": "(fn_3 logo_epsA logo_epsL)",
            "dreamcoder": "#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL)"
        },
        {
            "name": "fn_2",
            "stitch_uncanonical": "(logo_FWRT #1 logo_ZA (fn_2 logo_ZA #0))",
            "stitch_canonical": "(logo_FWRT #0 logo_ZA (fn_2 logo_ZA #1))",
            "dreamcoder": "#(lambda (lambda (logo_FWRT $0 logo_ZA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA $1))))"
        },
        {
            "name": "fn_3",
            "stitch_uncanonical": "(fn_3 (logo_DIVA logo_UA #0))",
            "stitch_canonical": "(fn_3 (logo_DIVA logo_UA #0))",
            "dreamcoder": "#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0)))"
        },
        {
            "name": "fn_4",
            "stitch_uncanonical": "(fn_3 (logo_DIVA logo_epsA 2) logo_epsL)",
            "stitch_canonical": "(fn_3 (logo_DIVA logo_epsA 2) logo_epsL)",
            "dreamcoder": "#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_epsA 2) logo_epsL)"
        },
        {
            "name": "fn_5",
            "stitch_uncanonical": "(fn_4 (lam (logo_GETSET #0 ($0 #1))))",
            "stitch_canonical": "(fn_4 (lam (logo_GETSET #0 ($0 #1))))",
            "dreamcoder": "#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1))))))"
        },
        {
            "name": "fn_6",
            "stitch_uncanonical": "(fn_9 1 #0)",
            "stitch_canonical": "(fn_9 1 #0)",
            "dreamcoder": "#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))"
        }
    ]
}