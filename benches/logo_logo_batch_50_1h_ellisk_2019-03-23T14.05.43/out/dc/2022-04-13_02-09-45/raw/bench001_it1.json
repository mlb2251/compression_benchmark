{
  "DSL": {
    "logVariable": -0.6914824742698897,
    "productions": [
      {
        "expression":
          "#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL)",
        "logProbability": -1.6880563030300877
      },
      {
        "expression":
          "#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL)",
        "logProbability": -1.886458413281077
      },
      {
        "expression":
          "#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_epsA 2) logo_epsL)",
        "logProbability": -1.9734697902707068
      },
      {
        "expression":
          "#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0))",
        "logProbability": -1.8323911920108014
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0)))",
        "logProbability": -1.8091608858237223
      },
      {
        "expression":
          "#(lambda (lambda (logo_FWRT $0 logo_ZA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA $1))))",
        "logProbability": -1.9147417261392805
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1))))))",
        "logProbability": -1.8595875550921779
      },
      { "expression": "logo_epsA", "logProbability": -0.38642081704321196 },
      { "expression": "logo_ZA", "logProbability": -0.4405072421141236 },
      { "expression": "logo_UL", "logProbability": -0.5139057528546584 },
      { "expression": "logo_UA", "logProbability": -0.4841473750057834 },
      { "expression": "3", "logProbability": -0.7300955579678887 },
      { "expression": "logo_DIVA", "logProbability": -0.5570743062091266 },
      { "expression": "logo_epsL", "logProbability": -0.7691343172160092 },
      { "expression": "logo_MULA", "logProbability": -0.5354063693157598 },
      { "expression": "logo_SUBA", "logProbability": -0.6369449448335551 },
      { "expression": "logo_ADDA", "logProbability": -0.6042549495069478 },
      { "expression": "logo_MULL", "logProbability": -0.6327544603160211 },
      { "expression": "5", "logProbability": -0.9330233801251437 },
      { "expression": "4", "logProbability": -0.7850973093548119 },
      { "expression": "6", "logProbability": -0.9832711522181765 },
      { "expression": "logo_DIVL", "logProbability": -0.9634627023714364 },
      { "expression": "2", "logProbability": -0.9909786713612192 },
      { "expression": "7", "logProbability": -1.0355216583453366 },
      { "expression": "8", "logProbability": -1.112000794021442 },
      { "expression": "logo_ZL", "logProbability": -0.9263958581365759 },
      { "expression": "logo_IFTY", "logProbability": -1.178399588840862 },
      { "expression": "9", "logProbability": -1.1719988806424757 },
      { "expression": "0", "logProbability": -1.2047887034654665 },
      { "expression": "1", "logProbability": -1.2047887034654665 },
      { "expression": "logo_FWRT", "logProbability": -1.9684240750713244 },
      { "expression": "logo_forLoop", "logProbability": -1.823240909326048 },
      { "expression": "logo_GETSET", "logProbability": -2.0684640454862 },
      { "expression": "logo_PT", "logProbability": -2.0359901472520407 },
      {
        "expression":
          "#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0))))))",
        "logProbability": -1.863324237749262
      },
      {
        "expression": "#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4)))",
        "logProbability": -1.9162540706477782
      },
      {
        "expression":
          "#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0)))))",
        "logProbability": -1.9397394648455233
      },
      {
        "expression":
          "#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0)))))",
        "logProbability": -1.8864585099844735
      },
      {
        "expression":
          "#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0))))",
        "logProbability": -1.8063148123646395
      },
      {
        "expression":
          "#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0)))))",
        "logProbability": -1.973469790808633
      },
      {
        "expression":
          "#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA))",
        "logProbability": -1.8114566396199558
      },
      {
        "expression": "#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5))",
        "logProbability": -1.9170545873172742
      },
      {
        "expression":
          "#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1)))))))",
        "logProbability": -1.9120741520411566
      },
      {
        "expression":
          "#(lambda (lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop $2 ($3 (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1))) $0))))))",
        "logProbability": -2.0042414489374605
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 3 logo_UL $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 6 (lambda (lambda (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) (logo_FWRT logo_UL (logo_SUBA (logo_DIVA logo_UA 3) (logo_MULA logo_epsA 5)) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 3 ($0 2))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 3) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 5 logo_UL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_MULA logo_epsA 8) logo_UL $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) (logo_DIVA logo_UA 5) (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 6 (logo_MULL logo_UL 2) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 7 logo_UL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 7 logo_UL (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_MULA logo_epsA 5) (logo_DIVL logo_UL 2) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 8 (logo_DIVL logo_UL 2) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_ZL (logo_FWRT logo_UL logo_epsA $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_ZL (logo_FWRT logo_UL logo_ZA $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL 2) (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL 2) (logo_FWRT logo_UL logo_epsA $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_epsL (logo_FWRT logo_epsL logo_epsA $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_epsL (logo_FWRT logo_epsL logo_ZA $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (logo_FWRT logo_UL logo_epsA $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (logo_FWRT logo_UL logo_ZA $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda ($0 3)) (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 4 logo_UL $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda ($0 3)) (logo_forLoop 5 (lambda (lambda (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) (logo_MULA logo_epsA 7) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) (logo_DIVL logo_UL 5) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) (logo_MULA logo_epsA 7) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) (logo_MULL logo_epsL 4) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda ($0 6)) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 7 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 6) (logo_FWRT (logo_MULL logo_UL $1) (logo_SUBA (logo_DIVA logo_UA 4) (logo_DIVA logo_UA 6)) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL 3) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) (logo_FWRT (logo_MULL logo_UL 3) logo_epsA $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 7 (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 8 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 8 $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 (logo_GETSET (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_DIVA logo_UA 8) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop logo_IFTY (lambda (lambda (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0))) (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_MULA logo_epsA 3) logo_ZL (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_MULA (logo_ADDA logo_epsA logo_epsA) 8) (logo_MULL logo_UL 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) (logo_MULL logo_UL 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA (logo_MULA logo_UA 4) 9) (logo_MULL logo_UL 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_MULA (logo_DIVA logo_UA 9) 4) (logo_MULL logo_UL 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_epsA 2) logo_epsL) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_epsA 2) logo_epsL) (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) logo_ZL (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_epsA 2) logo_epsL) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_ZL (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_epsA 2) logo_epsL) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_epsA 2) logo_epsL) ($0 4))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_epsA 2) logo_epsL) ($0 4))) (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) logo_ZL (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))) (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_ZL (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 2 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) (logo_forLoop 4 (lambda (lambda (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) logo_ZL $0))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) (logo_forLoop 4 (lambda (lambda (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_ZL (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_ZL $0)))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) (logo_MULL logo_epsL 2) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) (logo_MULL logo_epsL 2) (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL 3) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL 3) (logo_GETSET (lambda $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL 3) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) (logo_DIVL logo_UL 5) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) (logo_MULL logo_epsL 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL 5) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_DIVL logo_UL 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 5 (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) (logo_MULL logo_epsL 6) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_ZA logo_epsA) (logo_MULL logo_epsL 6) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL 6) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) $1 $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) $1 $0))) (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 ($0 6))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 4 ($0 6))) (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) ($0 3))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) ($0 3))) (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) logo_epsL $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) logo_epsL $0)))) (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL 3) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) (logo_MULL logo_epsL 3) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL 3) (logo_GETSET (lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) (logo_MULL logo_epsL 3) $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_UA (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_FWRT $0 logo_ZA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA $1)))) (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0) logo_UL))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_UL logo_UA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_FWRT $0 logo_ZA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA $1)))) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) $0) logo_UL))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_UL logo_UA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (logo_FWRT $0 logo_ZA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA $1)))) $0 (logo_DIVL logo_UL 2)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (logo_FWRT (logo_DIVL logo_UL 2) logo_ZA $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_UA (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_FWRT $0 logo_ZA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA $1)))) (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0)) logo_UL))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_UL logo_UA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $2) $0)) (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_PT (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $2) $0)) (logo_FWRT logo_UL (logo_SUBA (logo_DIVA logo_UA 4) logo_UA) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(lambda (lambda (logo_FWRT $0 logo_ZA (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA $1)))) (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0) logo_UL))) 3 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 3 $0)) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 3 $0)) 3 (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_UA (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))) 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL 2) $0)) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL 2) (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_SUBA logo_UA logo_epsA)) logo_ZL $0))) 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_ZA (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(lambda (logo_PT (lambda (logo_FWRT logo_UL $1 $0)))) logo_UA (#(lambda (#(lambda (logo_forLoop 6 (lambda (lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA (logo_MULL logo_epsL $2) $0))))) 1 $0)) $0))) 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) $0)) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) logo_epsA logo_epsL) $0)) 6 (#(logo_FWRT logo_ZL (logo_MULA logo_epsA 5)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (logo_GETSET $2 ($0 $1)))))) (lambda (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0)) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 2 logo_UL ($0 7))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop $2 ($3 (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1))) $0)))))) (lambda (lambda (lambda ($2 (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))))) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop $2 ($3 (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1))) $0)))))) (lambda (lambda (lambda ($2 (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))))) logo_IFTY $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) logo_UL) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 2) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL 2) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda ($2 (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA $0) $1))))))) (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1) $0))))) 3 ($0 2))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT $2 $3 $0)))))) (logo_DIVA logo_UA $0))) 4 (logo_MULL logo_UL 3) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop $2 ($3 (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1))) $0)))))) (lambda (lambda (lambda ($2 $0)))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop $2 ($3 (#(lambda (logo_FWRT $0 (logo_DIVA logo_UA 4))) (logo_MULL logo_UL $1))) $0)))))) (lambda (lambda (lambda ($2 $0)))) 8 $0))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}