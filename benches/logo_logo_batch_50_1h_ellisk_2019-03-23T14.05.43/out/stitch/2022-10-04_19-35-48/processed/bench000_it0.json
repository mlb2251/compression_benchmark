{
    "bench_group": "logo_logo_batch_50_1h_ellisk_2019-03-23T14.05.43",
    "bench": "bench000_it0",
    "mode": "stitch",
    "run": "compression_benchmark/benches/logo_logo_batch_50_1h_ellisk_2019-03-23T14.05.43/out/stitch/2022-10-04_19-35-48",
    "metrics": {
        "time_binary_seconds": 0.16,
        "time_per_inv_with_rewrite": 15.0,
        "time_per_inv_no_rewrite": 14.88888888888889,
        "mem_peak_kb": 5404,
        "compression_ratio": 1.4610139229205843,
        "absolute_compression": 24271,
        "compression_ratio_min": 1.508784286105568
    },
    "num_inventions": 9,
    "inventions": [
        {
            "name": "fn_0",
            "dreamcoder": "#(lambda (lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $3) $4 $0))) $0))))",
            "stitch_uncanonical": "(lam (logo_forLoop logo_IFTY (lam (lam (logo_FWRT (logo_MULL logo_epsL #1) #0 $0))) $0))",
            "stitch_canonical": "(lam (logo_forLoop logo_IFTY (lam (lam (logo_FWRT (logo_MULL logo_epsL #0) #1 $0))) $0))",
            "arity": 2
        },
        {
            "name": "fn_1",
            "dreamcoder": "#(lambda (lambda (logo_FWRT $0 (logo_DIVA logo_UA $1))))",
            "stitch_uncanonical": "(logo_FWRT #1 (logo_DIVA logo_UA #0))",
            "stitch_canonical": "(logo_FWRT #0 (logo_DIVA logo_UA #1))",
            "arity": 2
        },
        {
            "name": "fn_2",
            "dreamcoder": "#(lambda (lambda (lambda (logo_forLoop $1 $2 $0))))",
            "stitch_uncanonical": "(lam (logo_forLoop #1 #0 $0))",
            "stitch_canonical": "(lam (logo_forLoop #0 #1 $0))",
            "arity": 2
        },
        {
            "name": "fn_3",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (logo_FWRT $0 (logo_DIVA logo_UA $1)))) 4 (logo_MULL logo_UL $1) $0)))",
            "stitch_uncanonical": "(lam (fn_1 4 (logo_MULL logo_UL #0) $0))",
            "stitch_canonical": "(lam (fn_1 4 (logo_MULL logo_UL #0) $0))",
            "arity": 1
        },
        {
            "name": "fn_4",
            "dreamcoder": "#(lambda (lambda (lambda (logo_FWRT $1 $2 $0))))",
            "stitch_uncanonical": "(lam (logo_FWRT #1 #0 $0))",
            "stitch_canonical": "(lam (logo_FWRT #0 #1 $0))",
            "arity": 2
        },
        {
            "name": "fn_5",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (logo_FWRT $1 $2 $0)))) (logo_MULA logo_epsA $1) (logo_MULL logo_epsL $0))))",
            "stitch_uncanonical": "(lam (fn_4 (logo_MULA logo_epsA #0) (logo_MULL logo_epsL $0)))",
            "stitch_canonical": "(lam (fn_4 (logo_MULA logo_epsA #0) (logo_MULL logo_epsL $0)))",
            "arity": 1
        },
        {
            "name": "fn_6",
            "dreamcoder": "#(lambda (#(lambda (lambda (lambda (logo_forLoop $1 $2 $0)))) (lambda (#(lambda (lambda (lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $3) $4 $0))) $0)))) logo_epsA $1)) 6))",
            "stitch_uncanonical": "(fn_2 (lam (fn_0 logo_epsA #0)) 6)",
            "stitch_canonical": "(fn_2 (lam (fn_0 logo_epsA #0)) 6)",
            "arity": 1
        },
        {
            "name": "fn_7",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (#(lambda (lambda (logo_FWRT $0 (logo_DIVA logo_UA $1)))) $1 $2 (logo_FWRT $3 logo_ZA $0))))))",
            "stitch_uncanonical": "(lam (fn_1 #2 #1 (logo_FWRT #0 logo_ZA $0)))",
            "stitch_canonical": "(lam (fn_1 #0 #1 (logo_FWRT #2 logo_ZA $0)))",
            "arity": 3
        },
        {
            "name": "fn_8",
            "dreamcoder": "#(lambda (lambda (lambda (lambda ($2 $1 ($2 $3 $0))))))",
            "stitch_uncanonical": "(lam (#1 #2 (#1 #0 $0)))",
            "stitch_canonical": "(lam (#0 #1 (#0 #3 $0)))",
            "arity": 3
        }
    ]
}