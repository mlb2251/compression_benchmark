{
    "bench_group": "towers_tower_batch_50_3600_ellisk_2019-03-26T11.05.16",
    "bench": "bench001_it1",
    "mode": "dreamcoder",
    "run": "benches/towers_tower_batch_50_3600_ellisk_2019-03-26T11.05.16/out/dc/2022-04-13_01-15-53",
    "metrics": {
        "time_binary_seconds": 1107.36,
        "time_per_inv_with_rewrite": 153283.2,
        "time_per_inv_no_rewrite": 99193.6,
        "mem_peak_kb": 3038000,
        "compression_ratio": 1.1956817241583104,
        "absolute_compression": 9933
    },
    "num_inventions": 5,
    "inventions": [
        {
            "name": "fn_0",
            "stitch_uncanonical": "(tower_loopM #0 (lam (lam (moveHand 4 (#1 $0)))))",
            "stitch_canonical": "(tower_loopM #0 (lam (lam (moveHand 4 (#1 $0)))))",
            "dreamcoder": "#(lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 4 ($2 $0)))))))"
        },
        {
            "name": "fn_1",
            "stitch_uncanonical": "(tower_loopM #0 (lam (lam (tower_embed (lam (fn_4 $2 4 $0)) $0))))",
            "stitch_canonical": "(tower_loopM #0 (lam (lam (tower_embed (lam (fn_4 $2 4 $0)) $0))))",
            "dreamcoder": "#(lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (#(lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand $2 (1x3 (moveHand 2 (tower_embed (lambda (moveHand 2 (1x3 $0))) (3x1 $0)))))))))) $2 4 $0)) $0)))))"
        },
        {
            "name": "fn_2",
            "stitch_uncanonical": "(fn_0 #0 (lam (fn_5 $0 2)))",
            "stitch_canonical": "(fn_0 #0 (lam (fn_5 $0 2)))",
            "dreamcoder": "#(lambda (#(lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 4 ($2 $0))))))) $0 (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand (1x3 $0))))) $0 2))))"
        },
        {
            "name": "fn_3",
            "stitch_uncanonical": "(fn_0 #1 (lam (fn_5 (reverseHand $0) #0)))",
            "stitch_canonical": "(fn_0 #0 (lam (fn_5 (reverseHand $0) #1)))",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 4 ($2 $0))))))) $0 (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand (1x3 $0))))) (reverseHand $0) $2)))))"
        },
        {
            "name": "fn_4",
            "stitch_uncanonical": "(fn_0 #1 (lam (#0 (moveHand 4 (reverseHand (fn_4 1 2 $0))))))",
            "stitch_canonical": "(fn_0 #0 (lam (#1 (moveHand 4 (reverseHand (fn_4 1 2 $0))))))",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 4 ($2 $0))))))) $0 (lambda ($2 (moveHand 4 (reverseHand (#(lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand $2 (1x3 (moveHand 2 (tower_embed (lambda (moveHand 2 (1x3 $0))) (3x1 $0)))))))))) 1 2 $0))))))))"
        }
    ]
}