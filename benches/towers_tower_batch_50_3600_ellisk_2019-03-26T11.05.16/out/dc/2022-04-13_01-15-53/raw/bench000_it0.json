{
  "DSL": {
    "logVariable": -0.49973862902030275,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (1x3 (moveHand 4 (1x3 (reverseHand $0))))) $0))) (#(lambda (moveHand 2 (3x1 $0))) $1))))",
        "logProbability": -0.9770057214374734
      },
      {
        "expression":
          "#(lambda (tower_loopM 3 (lambda (lambda ($2 (lambda (moveHand $0 (#(lambda (1x3 (moveHand 4 (1x3 (reverseHand $0))))) (#(lambda (moveHand 2 (3x1 $0))) $1)))))))))",
        "logProbability": -0.9770057209427621
      },
      {
        "expression": "#(lambda (moveHand 2 (3x1 $0)))",
        "logProbability": -1.0087544187466726
      },
      {
        "expression":
          "#(lambda (lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $1))))",
        "logProbability": -0.9770057209549918
      },
      {
        "expression": "#(lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))",
        "logProbability": -1.0415442420803331
      },
      {
        "expression":
          "#(lambda (lambda (reverseHand (tower_loopM $0 (lambda (lambda (moveHand 6 (tower_embed (lambda (moveHand 3 (3x1 $0))) (3x1 $0))))) $1))))",
        "logProbability": -0.9770057209428118
      },
      {
        "expression":
          "#(lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand $2 (1x3 (moveHand 2 (tower_embed (lambda (moveHand 2 (1x3 $0))) (3x1 $0))))))))))",
        "logProbability": -0.9770057209427621
      },
      {
        "expression":
          "#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))))))",
        "logProbability": -0.8592226852870839
      },
      { "expression": "4", "logProbability": -0.44743813564200297 },
      { "expression": "6", "logProbability": -0.5000818695325453 },
      { "expression": "5", "logProbability": -0.5000818695333469 },
      { "expression": "2", "logProbability": -0.6767648191618356 },
      { "expression": "3", "logProbability": -0.6144922207103587 },
      { "expression": "7", "logProbability": -0.6452638793778447 },
      { "expression": "8", "logProbability": -0.6452638793778447 },
      { "expression": "1", "logProbability": -0.7098024005154158 },
      { "expression": "reverseHand", "logProbability": -0.9462340617835996 },
      { "expression": "moveHand", "logProbability": -0.9161551987063672 },
      { "expression": "1x3", "logProbability": -0.9462340613047089 },
      { "expression": "tower_loopM", "logProbability": -0.9462340617829272 },
      { "expression": "3x1", "logProbability": -1.0087544192435995 },
      { "expression": "tower_embed", "logProbability": -1.0415442420672347 }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 6 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $1)))) $0 6))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 8 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $1)))) $0 8))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (1x3 (moveHand 4 (1x3 (reverseHand $0))))) $0))) (#(lambda (moveHand 2 (3x1 $0))) $1)))) $0 5))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (#(lambda (moveHand 2 (3x1 $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (1x3 (moveHand 4 (1x3 (reverseHand $0))))) $0))) (#(lambda (moveHand 2 (3x1 $0))) $1)))) $0 7))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 7 (lambda (lambda (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (#(lambda (moveHand 2 (3x1 $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (3x1 (moveHand 7 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (moveHand 7 (3x1 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 3 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 5 (lambda (lambda (moveHand 3 (1x3 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (tower_loopM 3 (lambda (lambda ($2 (lambda (moveHand $0 (#(lambda (1x3 (moveHand 4 (1x3 (reverseHand $0))))) (#(lambda (moveHand 2 (3x1 $0))) $1))))))))) (lambda (reverseHand ($0 4))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand $2 (1x3 (moveHand 2 (tower_embed (lambda (moveHand 2 (1x3 $0))) (3x1 $0)))))))))) 5 4 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 6 (lambda (lambda (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (#(lambda (moveHand 2 (3x1 $0))) $0))))))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 6 (lambda (lambda (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (#(lambda (moveHand 2 (3x1 $0))) $0))))))))) (moveHand 2 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand $2 (1x3 (moveHand 2 (tower_embed (lambda (moveHand 2 (1x3 $0))) (3x1 $0)))))))))) 3 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 3 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (reverseHand (moveHand 3 (3x1 (moveHand 6 (3x1 (moveHand 6 (3x1 $0))))))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (reverseHand (tower_loopM $0 (lambda (lambda (moveHand 6 (tower_embed (lambda (moveHand 3 (3x1 $0))) (3x1 $0))))) $1)))) $0 4))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (reverseHand (tower_loopM 4 (lambda (lambda (moveHand 3 (moveHand 3 (tower_embed (lambda (moveHand 3 (3x1 $0))) (3x1 $0)))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 4 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 6 (lambda (lambda (reverseHand (tower_loopM 4 (lambda (lambda (moveHand 6 (3x1 $0)))) (moveHand 3 $0))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (reverseHand (tower_loopM $0 (lambda (lambda (moveHand 6 (tower_embed (lambda (moveHand 3 (3x1 $0))) (3x1 $0))))) $1)))) $0 5))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (reverseHand (tower_loopM 5 (lambda (lambda (tower_embed (lambda (moveHand 3 (3x1 $0))) (3x1 (moveHand 6 $0))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (reverseHand (tower_loopM 6 (lambda (lambda (moveHand 3 (3x1 (reverseHand (tower_loopM 4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 8 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (reverseHand (tower_loopM 8 (lambda (lambda (moveHand 3 (3x1 (reverseHand (tower_loopM 4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (reverseHand (tower_loopM 4 (lambda (lambda (moveHand 3 (3x1 (reverseHand (tower_loopM 5 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (reverseHand (tower_loopM 6 (lambda (lambda (moveHand 3 (3x1 (reverseHand (tower_loopM 5 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (tower_loopM 3 (lambda (lambda ($2 (lambda (moveHand $0 (#(lambda (1x3 (moveHand 4 (1x3 (reverseHand $0))))) (#(lambda (moveHand 2 (3x1 $0))) $1))))))))) (lambda ($0 4)) $0))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}