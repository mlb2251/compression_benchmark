{
    "verbose": false,
    "arity": 3,
    "topK": 2,
    "pseudoCounts": 30.0,
    "aic": 1.0,
    "bs": 1000000,
    "topI": 300,
    "structurePenalty": 1.5,
    "CPUs": 8,
    "lc_score": 0.0,
    "DSL": {
        "logVariable": -0.614784,
        "productions": [
            {
                "expression": "gt?",
                "logProbability": -0.259561
            },
            {
                "expression": "is-prime",
                "logProbability": -0.271703
            },
            {
                "expression": "eq?",
                "logProbability": -0.30453
            },
            {
                "expression": "is-square",
                "logProbability": -0.336229
            },
            {
                "expression": "empty?",
                "logProbability": -0.346395
            },
            {
                "expression": "1",
                "logProbability": -1.144764
            },
            {
                "expression": "map",
                "logProbability": -1.168352
            },
            {
                "expression": "+",
                "logProbability": -1.182081
            },
            {
                "expression": "0",
                "logProbability": -1.209018
            },
            {
                "expression": "mod",
                "logProbability": -1.263901
            },
            {
                "expression": "range",
                "logProbability": -1.28291
            },
            {
                "expression": "length",
                "logProbability": -1.302943
            },
            {
                "expression": "-",
                "logProbability": -1.318063
            },
            {
                "expression": "cdr",
                "logProbability": -1.368648
            },
            {
                "expression": "*",
                "logProbability": -1.396595
            },
            {
                "expression": "cons",
                "logProbability": -1.410007
            },
            {
                "expression": "empty",
                "logProbability": -1.459916
            },
            {
                "expression": "unfold",
                "logProbability": -1.553826
            },
            {
                "expression": "fold",
                "logProbability": -1.917835
            },
            {
                "expression": "index",
                "logProbability": -1.94685
            },
            {
                "expression": "car",
                "logProbability": -1.955975
            },
            {
                "expression": "if",
                "logProbability": -2.083673
            },
            {
                "expression": "#(+ 1 1)",
                "logProbability": -1.146894
            },
            {
                "expression": "#(+ #(+ 1 1) #(+ 1 1))",
                "logProbability": -1.244671
            },
            {
                "expression": "#(lambda (fold $0 1 (lambda (lambda (* $0 $1)))))",
                "logProbability": -1.32307
            },
            {
                "expression": "#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty))))",
                "logProbability": -1.369321
            },
            {
                "expression": "#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0))))))",
                "logProbability": -1.379642
            },
            {
                "expression": "#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0))))))",
                "logProbability": -1.459439
            },
            {
                "expression": "#(map (lambda (if (is-prime $0) 0 (+ $0 1))))",
                "logProbability": -1.460605
            },
            {
                "expression": "#(lambda (cons (car $0) (cons (car (cdr $0)) empty)))",
                "logProbability": -1.464755
            }
        ]
    },
    "iterations": 20,
    "frontiers": [
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (+ $0 1)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (+ 1 $0)) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (index #(+ 1 1) $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (cdr (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (range 1)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (+ #(+ 1 1) 1)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (+ 1 #(+ 1 1))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (+ 1 #(+ #(+ 1 1) #(+ 1 1)))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (+ #(+ 1 1) (+ 1 #(+ 1 1)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "bool",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (eq? (length (range $0)) $0)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (eq? $0 (length (range $0)))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "bool",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (gt? $0 0)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (gt? $0 (length empty))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "bool",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (gt? 1 (mod $0 (+ #(+ 1 1) 1)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (gt? 1 (mod $0 (+ 1 #(+ 1 1))))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "bool",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (gt? 1 (mod $0 #(+ #(+ 1 1) #(+ 1 1))))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (eq? (mod $0 #(+ #(+ 1 1) #(+ 1 1))) 0)) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "bool",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (eq? $0 (+ #(+ 1 1) 1))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (eq? $0 (+ 1 #(+ 1 1)))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (if (is-prime $0) 0 (+ 1 $0))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (if (is-prime $0) 0 (+ 1 $0))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (- 1 $0)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (range $0))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (index $0 (cons #(+ 1 1) (range $0)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (index $0 (cons #(+ 1 1) (range (+ $0 $0))))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "int",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (fold $0 0 (lambda (lambda (+ $0 (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (range $1)))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold $0 0 (lambda (lambda (+ (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (range $1)) $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "int",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (fold $0 0 (lambda (lambda (+ $0 (if (eq? $1 (+ #(+ 1 1) 1)) 1 0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold $0 0 (lambda (lambda (+ $0 (if (eq? $1 (+ 1 #(+ 1 1))) 1 0))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (fold $0 empty (lambda (lambda (if (eq? (mod $1 #(+ 1 1)) 0) (cons $1 $0) $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "bool",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (gt? 1 (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (empty? (range (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) $0))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "bool",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (gt? (mod (fold $0 0 (lambda (lambda $1))) #(+ #(+ 1 1) #(+ 1 1))) 0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (gt? (mod (fold $0 #(+ #(+ 1 1) #(+ 1 1)) (lambda (lambda $1))) #(+ #(+ 1 1) #(+ 1 1))) 0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "bool",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (is-prime (index #(+ 1 1) (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (range #(+ 1 1))) 1))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (is-prime (index #(+ 1 1) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) (range #(+ 1 1)) 1)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "int",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (car $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (index 0 $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "int",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (index #(+ 1 1) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (index 1 (cdr $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "int",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (index #(+ #(+ 1 1) #(+ 1 1)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (index (* #(+ 1 1) #(+ 1 1)) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "bool",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (is-square (fold $0 1 (lambda (lambda (+ $0 (mod $1 #(+ 1 1))))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (is-prime (fold $0 #(+ 1 1) (lambda (lambda (- $0 (mod $1 $0)))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "bool",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (gt? (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (map (lambda (+ #(+ 1 1) $0)) $0)))) 0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (gt? (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (map (lambda (+ $0 #(+ 1 1))) $0)))) 0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "bool",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (fold $0 (is-prime #(+ 1 1)) (lambda (lambda (if $0 (is-prime $1) $0)))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold $0 (is-square 1) (lambda (lambda (if $0 (is-prime $1) $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "int",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0))))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold $0 1 (lambda (lambda (+ $1 (length (range (- $0 $1))))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "int",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (length $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (length (range (length $0))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda 0) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (length empty)) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (mod $0 #(+ 1 1))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda $0) (map (lambda (mod $0 #(+ 1 1))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (mod $0 #(+ #(+ 1 1) #(+ 1 1)))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda $0) (map (lambda (mod $0 #(+ #(+ 1 1) #(+ 1 1)))) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda 0) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (length empty)) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (+ $0 $0)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (+ $0 $0)) (map (lambda $0) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (+ $0 (+ $0 $0))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (+ $0 (* #(+ 1 1) $0))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (map (lambda (index $0 $1)) (range (length (cdr $0)))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (index $0 $1)) (range (- (length $0) 1))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (cons (car $0) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (cons (index 0 $0) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (cdr (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (cdr (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (cons (car (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0)) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (cons (index #(+ 1 1) (cdr $0)) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "int",
                        "arguments": []
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold $0 1 (lambda (lambda (* $1 $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (cons (car $0) (cdr (cdr $0))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (cons (index 0 $0) (cdr (cdr $0))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (map (lambda $0) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (fold (range (car $0)) empty (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (cdr $2))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold (range (car $0)) empty (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (cdr $2) $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (fold $0 empty (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 $1)))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold $0 $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) (cdr $0) $1)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0) $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0)))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold (cdr $0) $0 (lambda (lambda (cons $1 (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr (cdr $0)))))))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0) (cdr (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (cdr (cdr $0))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (cdr (cdr $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (map (lambda (index $0 $1)) (range #(+ 1 1))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (fold $0 empty (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (range (- 1 $1)))))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold $0 empty (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range (- 1 $1)) $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        },
        {
            "request": {
                "constructor": "->",
                "arguments": [
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    },
                    {
                        "constructor": "list",
                        "arguments": [
                            {
                                "constructor": "int",
                                "arguments": []
                            }
                        ]
                    }
                ]
            },
            "programs": [
                {
                    "program": "(lambda (fold $0 empty (lambda (lambda (if (eq? $1 1) (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 $1) $0)))))",
                    "logLikelihood": 0.0
                },
                {
                    "program": "(lambda (fold $0 empty (lambda (lambda (if (is-prime (+ $1 $1)) (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 $1) $0)))))",
                    "logLikelihood": 0.0
                }
            ]
        }
    ],
    "info": {
        "iteration": 5,
        "num_learned": 4,
        "new_grammar": {
            "logVariable": -0.618519,
            "productions": [
                {
                    "expression": "is-prime",
                    "logProbability": -0.32126
                },
                {
                    "expression": "eq?",
                    "logProbability": -0.364172
                },
                {
                    "expression": "is-square",
                    "logProbability": -0.401137
                },
                {
                    "expression": "gt?",
                    "logProbability": -0.401768
                },
                {
                    "expression": "empty?",
                    "logProbability": -0.414669
                },
                {
                    "expression": "+",
                    "logProbability": -1.265337
                },
                {
                    "expression": "1",
                    "logProbability": -1.272173
                },
                {
                    "expression": "0",
                    "logProbability": -1.344566
                },
                {
                    "expression": "map",
                    "logProbability": -1.366034
                },
                {
                    "expression": "mod",
                    "logProbability": -1.439351
                },
                {
                    "expression": "range",
                    "logProbability": -1.461162
                },
                {
                    "expression": "length",
                    "logProbability": -1.490266
                },
                {
                    "expression": "-",
                    "logProbability": -1.499156
                },
                {
                    "expression": "cdr",
                    "logProbability": -1.499777
                },
                {
                    "expression": "*",
                    "logProbability": -1.572028
                },
                {
                    "expression": "cons",
                    "logProbability": -1.577877
                },
                {
                    "expression": "empty",
                    "logProbability": -1.745229
                },
                {
                    "expression": "unfold",
                    "logProbability": -1.751149
                },
                {
                    "expression": "index",
                    "logProbability": -2.124968
                },
                {
                    "expression": "fold",
                    "logProbability": -2.151956
                },
                {
                    "expression": "car",
                    "logProbability": -2.169948
                },
                {
                    "expression": "if",
                    "logProbability": -2.19884
                },
                {
                    "expression": "#(lambda (gt? $0 0))",
                    "logProbability": -0.309887
                },
                {
                    "expression": "#(lambda (eq? $0 (+ #(+ 1 1) 1)))",
                    "logProbability": -0.362851
                },
                {
                    "expression": "#(lambda (map (lambda (gt? 1 (mod $0 $1)))))",
                    "logProbability": -0.703407
                },
                {
                    "expression": "#(+ 1 1)",
                    "logProbability": -1.243646
                },
                {
                    "expression": "#(+ #(+ 1 1) #(+ 1 1))",
                    "logProbability": -1.422671
                },
                {
                    "expression": "#(lambda (fold $0 1 (lambda (lambda (* $0 $1)))))",
                    "logProbability": -1.439976
                },
                {
                    "expression": "#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0))))))",
                    "logProbability": -1.523731
                },
                {
                    "expression": "#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty))))",
                    "logProbability": -1.53969
                },
                {
                    "expression": "#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0))))))",
                    "logProbability": -1.567053
                },
                {
                    "expression": "#(lambda (fold $0 empty))",
                    "logProbability": -1.592138
                },
                {
                    "expression": "#(map (lambda (if (is-prime $0) 0 (+ $0 1))))",
                    "logProbability": -1.596563
                },
                {
                    "expression": "#(lambda (cons (car $0) (cons (car (cdr $0)) empty)))",
                    "logProbability": -1.634241
                }
            ]
        }
    }
}