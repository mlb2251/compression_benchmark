Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 35457
Constructed version spaces and coalesced candidates in 26.0678s.
Timing point -1 right before normalizing: 29.7562s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 29.7579s.
Timing Comparison Point A (vspace+beam) (millis): 29757
Rewrote topK in 27.0962s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 27.0966s.
sanity check for timing comparison, should be same as comparison point: 56.8545s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 56854
Initial score: -915.957480
Initial language score: 0.000000
Initial joint score: -915.957480 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.14979s.
Best MDL score: -909.786178 with (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0)))
Scored candidates with language and grammar in 2.86769s.
Best joint score: -909.786178 with (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0)))
Timing point 3 (all scoring): 6.03863s.
Improved score to -909.786178 (dScore=6.171302) w/ new primitive
	#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) : list(t0) -> list(t0)
rewrote all of the frontiers in 14.3604s.
Timing point 4 (rewrite final frontiers): 14.3604s.
Completed one step of memory consolidation in 1.28779m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) $0))
  (lambda (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (cdr $0)))
Total number of candidates: 29734
Constructed version spaces and coalesced candidates in 21.8132s.
Timing point -1 right before normalizing: 24.8217s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 24.8234s.
Timing Comparison Point A (vspace+beam) (millis): 24823
Rewrote topK in 23.9124s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 23.9127s.
sanity check for timing comparison, should be same as comparison point: 48.7361s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 48736
Initial score: -910.565692
Initial language score: 0.000000
Initial joint score: -910.565692 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.50923s.
Best MDL score: -904.934222 with (lambda (map (lambda (mod $0 $1))))
Scored candidates with language and grammar in 3.04398s.
Best joint score: -904.934222 with (lambda (map (lambda (mod $0 $1))))
Timing point 3 (all scoring): 6.57997s.
Improved score to -904.934222 (dScore=5.631469) w/ new primitive
	#(lambda (map (lambda (mod $0 $1)))) : int -> list(int) -> list(int)
rewrote all of the frontiers in 19.4268s.
Timing point 4 (rewrite final frontiers): 19.4268s.
Completed one step of memory consolidation in 1.24595m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 1) $0))
  (lambda (#(lambda (map (lambda (mod $0 $1)))) (+ #(+ 1 1) 1) $0))
  (lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 1) #(+ 1 1)) $0))
  (lambda (#(lambda (map (lambda (mod $0 $1)))) (+ #(+ #(+ 1 1) #(+ 1 1)) 1) $0))
Total number of candidates: 26283
Constructed version spaces and coalesced candidates in 21.1185s.
Timing point -1 right before normalizing: 24.0002s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 24.002s.
Timing Comparison Point A (vspace+beam) (millis): 24002
Rewrote topK in 22.1514s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 22.1517s.
sanity check for timing comparison, should be same as comparison point: 46.1537s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 46153
Initial score: -905.662611
Initial language score: 0.000000
Initial joint score: -905.662611 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.14538s.
Best MDL score: -905.543406 with (+ #(+ 1 1) 1)
Scored candidates with language and grammar in 3.08013s.
Best joint score: -905.543406 with (+ #(+ 1 1) 1)
Timing point 3 (all scoring): 6.2443s.
Improved score to -905.543406 (dScore=0.119205) w/ new primitive
	#(+ #(+ 1 1) 1) : int
rewrote all of the frontiers in 14.4555s.
Timing point 4 (rewrite final frontiers): 14.4555s.
Completed one step of memory consolidation in 1.11446m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 #(+ #(+ 1 1) 1)))
  (lambda (map (lambda (gt? $0 #(+ #(+ 1 1) 1))) $0))
  (lambda (#(lambda (map (lambda (gt? 1 (mod $0 $1))))) #(+ #(+ 1 1) 1) $0))
  (lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 1) 1) $0))
Total number of candidates: 25501
Constructed version spaces and coalesced candidates in 19.4927s.
Timing point -1 right before normalizing: 22.1249s.
Trimmed down the beam, have only 299 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 22.1268s.
Timing Comparison Point A (vspace+beam) (millis): 22126
Rewrote topK in 22.8302s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 22.8311s.
sanity check for timing comparison, should be same as comparison point: 44.9579s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 44957
Initial score: -906.355257
Initial language score: 0.000000
Initial joint score: -906.355257 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.77486s.
Best MDL score: -906.991485 with (map (lambda (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (range $0))))
No improvement possible with MDL.
Scored candidates with language and grammar in 3.38323s.
Best joint score: -906.991485 with (map (lambda (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (range $0))))
Timing point 3 (all scoring): 7.18046s.
No improvement possible with joint score.
Completed one step of memory consolidation in 52.1393s.
completed ocaml compression in 4.51761m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/list_list_hard_test_ellisk_2019-02-15T11.35.48/bench006_it6.json"
	User time (seconds): 39.07
	System time (seconds): 0.72
	Percent of CPU this job got: 14%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:31.14
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 411728
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 686392
	Voluntary context switches: 554
	Involuntary context switches: 4043
	Swaps: 0
	File system inputs: 0
	File system outputs: 96
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
