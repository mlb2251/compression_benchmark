Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 2336
Constructed version spaces and coalesced candidates in 8.53822s.
Timing point -1 right before normalizing: 9.69668s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 9.69866s.
Timing Comparison Point A (vspace+beam) (millis): 9698
Rewrote topK in 11.4968s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 11.4973s.
sanity check for timing comparison, should be same as comparison point: 21.196s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 21196
Initial score: -296.676711
Initial language score: 0.000000
Initial joint score: -296.676711 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 745.787ms.
Best MDL score: -291.187030 with (fold $0 1 (lambda (lambda (* $0 $1))))
Scored candidates with language and grammar in 567.064ms.
Best joint score: -291.187030 with (fold $0 1 (lambda (lambda (* $0 $1))))
Timing point 3 (all scoring): 1.32198s.
Improved score to -291.187030 (dScore=5.489681) w/ new primitive
	#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) : list(int) -> int
rewrote all of the frontiers in 7.00439s.
Timing point 4 (rewrite final frontiers): 7.00445s.
Completed one step of memory consolidation in 29.5327s.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (empty? (range (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) $0))))
  (lambda (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) $0))
Total number of candidates: 2200
Constructed version spaces and coalesced candidates in 9.34044s.
Timing point -1 right before normalizing: 11.3513s.
Trimmed down the beam, have only 298 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 11.3534s.
Timing Comparison Point A (vspace+beam) (millis): 11353
Rewrote topK in 9.22566s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 9.22631s.
sanity check for timing comparison, should be same as comparison point: 20.5798s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 20579
Initial score: -291.524613
Initial language score: 0.000000
Initial joint score: -291.524613 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 585.847ms.
Best MDL score: -290.676749 with (lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0))))))
Scored candidates with language and grammar in 668.263ms.
Best joint score: -290.676749 with (lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0))))))
Timing point 3 (all scoring): 1.26963s.
Improved score to -290.676749 (dScore=0.847864) w/ new primitive
	#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) : list(t0) -> list(t0) -> list(t0)
rewrote all of the frontiers in 5.15254s.
Timing point 4 (rewrite final frontiers): 5.15259s.
Completed one step of memory consolidation in 27.0064s.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (cons (+ 1 (+ #(+ 1 1) #(+ 1 1))) empty)))
  (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 $0))
Total number of candidates: 2063
Constructed version spaces and coalesced candidates in 4.13396s.
Timing point -1 right before normalizing: 4.83153s.
Trimmed down the beam, have only 296 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 4.83337s.
Timing Comparison Point A (vspace+beam) (millis): 4833
Rewrote topK in 5.28579s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 5.28609s.
sanity check for timing comparison, should be same as comparison point: 10.1195s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 10119
Initial score: -290.982439
Initial language score: 0.000000
Initial joint score: -290.982439 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 783.148ms.
Best MDL score: -291.921626 with (+ #(+ 1 1) #(+ 1 1))
No improvement possible with MDL.
Scored candidates with language and grammar in 733.211ms.
Best joint score: -291.921626 with (+ #(+ 1 1) #(+ 1 1))
Timing point 3 (all scoring): 1.52137s.
No improvement possible with joint score.
Completed one step of memory consolidation in 11.6416s.
completed ocaml compression in 1.13641m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/list_list_hard_test_ellisk_2019-02-15T11.35.48/bench001_it1.json"
	User time (seconds): 6.31
	System time (seconds): 0.20
	Percent of CPU this job got: 9%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:08.21
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 128352
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 109058
	Voluntary context switches: 324
	Involuntary context switches: 711
	Swaps: 0
	File system inputs: 0
	File system outputs: 24
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
