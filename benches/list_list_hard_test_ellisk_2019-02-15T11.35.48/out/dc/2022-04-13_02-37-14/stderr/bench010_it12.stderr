Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 53358
Constructed version spaces and coalesced candidates in 16.0854s.
Timing point -1 right before normalizing: 19.1974s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 19.2019s.
Timing Comparison Point A (vspace+beam) (millis): 19201
Rewrote topK in 18.0392s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 18.0395s.
sanity check for timing comparison, should be same as comparison point: 37.2414s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 37241
Initial score: -1356.185825
Initial language score: 0.000000
Initial joint score: -1356.185825 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 6.49174s.
Best MDL score: -1354.766083 with (lambda (cdr (cdr (cdr (cdr $0)))))
Scored candidates with language and grammar in 6.19826s.
Best joint score: -1354.766083 with (lambda (cdr (cdr (cdr (cdr $0)))))
Timing point 3 (all scoring): 12.7317s.
Improved score to -1354.766083 (dScore=1.419742) w/ new primitive
	#(lambda (cdr (cdr (cdr (cdr $0))))) : list(t0) -> list(t0)
rewrote all of the frontiers in 9.37076s.
Timing point 4 (rewrite final frontiers): 9.3708s.
Completed one step of memory consolidation in 59.3735s.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (cdr (#(lambda (cdr (cdr (cdr (cdr $0))))) $0)))
  (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0) $0)) (#(lambda (cdr (cdr (cdr (cdr $0))))) $0)))
  (lambda (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) (#(lambda (cdr (cdr (cdr (cdr $0))))) $0)))
Total number of candidates: 49942
Constructed version spaces and coalesced candidates in 18.4252s.
Timing point -1 right before normalizing: 21.6835s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 21.6852s.
Timing Comparison Point A (vspace+beam) (millis): 21685
Rewrote topK in 19.2033s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 19.2036s.
sanity check for timing comparison, should be same as comparison point: 40.8888s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 40888
Initial score: -1355.699674
Initial language score: 0.000000
Initial joint score: -1355.699674 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 6.4287s.
Best MDL score: -1356.619433 with (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0) $0))
No improvement possible with MDL.
Scored candidates with language and grammar in 6.70681s.
Best joint score: -1356.619433 with (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0) $0))
Timing point 3 (all scoring): 13.1787s.
No improvement possible with joint score.
Completed one step of memory consolidation in 54.0682s.
completed ocaml compression in 1.89098m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/list_list_hard_test_ellisk_2019-02-15T11.35.48/bench010_it12.json"
	User time (seconds): 35.73
	System time (seconds): 0.73
	Percent of CPU this job got: 32%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:53.50
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 529260
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 864684
	Voluntary context switches: 250
	Involuntary context switches: 3678
	Swaps: 0
	File system inputs: 0
	File system outputs: 168
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
