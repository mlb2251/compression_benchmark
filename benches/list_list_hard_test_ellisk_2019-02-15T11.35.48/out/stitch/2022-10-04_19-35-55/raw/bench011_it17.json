{
  "cmd": "/scratch/mlbowers/proj/stitch/target/release/compress compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.35.48/bench011_it17.json --max-arity=3 --threads=1 --iterations=1 --fmt=dreamcoder --dreamcoder-comparison --out=compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.35.48/out/stitch/2022-10-04_19-35-55/raw/bench011_it17.json",
  "args": {
    "file": "compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.35.48/bench011_it17.json",
    "out": "compression_benchmark/benches/list_list_hard_test_ellisk_2019-02-15T11.35.48/out/stitch/2022-10-04_19-35-55/raw/bench011_it17.json",
    "iterations": 1,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "args_from_json": false,
    "save_rewritten": null,
    "step": {
      "max_arity": 3,
      "threads": 1,
      "no_stats": false,
      "batch": 1,
      "dynamic_batch": false,
      "inv_candidates": 1,
      "hole_choice": "DepthFirst",
      "no_mismatch_check": false,
      "no_top_lambda": false,
      "track": null,
      "follow_track": false,
      "verbose_worklist": false,
      "verbose_best": false,
      "print_stats": 0,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_opt_arity_zero": false,
      "no_other_util": false,
      "rewrite_check": false,
      "utility_by_rewrite": false,
      "dreamcoder_comparison": true
    }
  },
  "original_cost": 97674,
  "original": [
    "(lam (prev_dc_inv_7 1 $0))",
    "(lam (prev_dc_inv_7 (prev_dc_inv_15 empty) $0))",
    "(lam (prev_dc_inv_7 prev_dc_inv_1 $0))",
    "(lam (map (lam (+ prev_dc_inv_1 $0)) $0))",
    "(lam (prev_dc_inv_7 prev_dc_inv_3 $0))",
    "(lam (map (lam (+ prev_dc_inv_3 $0)) $0))",
    "(lam (prev_dc_inv_18 $0 (index 1 $0)))",
    "(lam (prev_dc_inv_14 $0 (cdr (prev_dc_inv_13 $0))))",
    "(lam (prev_dc_inv_18 $0 (index prev_dc_inv_0 $0)))",
    "(lam (prev_dc_inv_18 $0 (index 1 (cdr $0))))",
    "(lam (prev_dc_inv_18 $0 (index prev_dc_inv_1 $0)))",
    "(lam (prev_dc_inv_18 $0 (car (prev_dc_inv_19 $0))))",
    "(lam (prev_dc_inv_18 $0 0))",
    "(lam (prev_dc_inv_14 $0 (range 1)))",
    "(lam (prev_dc_inv_18 $0 prev_dc_inv_1))",
    "(lam (prev_dc_inv_18 $0 (+ prev_dc_inv_0 1)))",
    "(lam (prev_dc_inv_18 $0 prev_dc_inv_3))",
    "(lam (prev_dc_inv_18 (map (lam $0) $0) prev_dc_inv_3))",
    "(lam (prev_dc_inv_18 $0 prev_dc_inv_5))",
    "(lam (prev_dc_inv_18 (map (lam $0) $0) prev_dc_inv_5))",
    "(lam (map (lam (prev_dc_inv_2 (+ $0 1))) $0))",
    "(lam (map (lam (prev_dc_inv_2 (+ 1 $0))) $0))",
    "(lam (map (lam (prev_dc_inv_2 $0)) $0))",
    "(lam (map (lam $0) (map (lam (prev_dc_inv_2 $0)) $0)))",
    "(lam (map (lam (gt? $0 prev_dc_inv_1)) $0))",
    "(lam (map (lam (prev_dc_inv_2 (- $0 prev_dc_inv_1))) $0))",
    "(lam (prev_dc_inv_10 prev_dc_inv_1 $0))",
    "(lam (prev_dc_inv_10 (+ prev_dc_inv_0 1) $0))",
    "(lam (prev_dc_inv_10 prev_dc_inv_3 $0))",
    "(lam (prev_dc_inv_10 prev_dc_inv_3 (map (lam $0) $0)))",
    "(lam (map (lam (prev_dc_inv_6 $0)) $0))",
    "(lam (map (lam (eq? prev_dc_inv_1 $0)) $0))",
    "(lam (map (lam (eq? prev_dc_inv_3 $0)) $0))",
    "(lam (map (lam (eq? $0 prev_dc_inv_3)) $0))",
    "(lam (prev_dc_inv_8 prev_dc_inv_0 (prev_dc_inv_11 $0)))",
    "(lam (map (lam (- 1 $0)) $0))",
    "(lam (prev_dc_inv_11 $0))",
    "(lam (prev_dc_inv_11 (map (lam $0) $0)))",
    "(lam (prev_dc_inv_8 prev_dc_inv_5 (prev_dc_inv_7 1 $0)))",
    "(lam (map (lam (mod (+ $0 1) prev_dc_inv_5)) $0))",
    "(lam (prev_dc_inv_8 prev_dc_inv_3 (prev_dc_inv_7 prev_dc_inv_1 $0)))",
    "(lam (map (lam (mod (+ prev_dc_inv_1 $0) prev_dc_inv_3)) $0))",
    "(lam (prev_dc_inv_11 $0))",
    "(lam (map (lam (if (is-prime $0) 0 (+ 1 $0))) $0))",
    "(lam (map (lam (- 1 $0)) $0))",
    "(lam (map (lam (prev_dc_inv_12 (range $0))) $0))",
    "(lam (prev_dc_inv_11 (prev_dc_inv_11 $0)))",
    "(lam (prev_dc_inv_8 prev_dc_inv_1 (prev_dc_inv_7 prev_dc_inv_0 $0)))",
    "(lam (prev_dc_inv_8 prev_dc_inv_3 (prev_dc_inv_7 1 $0)))",
    "(lam (prev_dc_inv_8 prev_dc_inv_3 (prev_dc_inv_7 prev_dc_inv_5 $0)))",
    "(lam (length (prev_dc_inv_17 (cdr $0) (lam (eq? $0 (car $1))))))",
    "(lam (length (prev_dc_inv_17 (cdr $0) (lam (eq? (car $1) $0)))))",
    "(lam (length (prev_dc_inv_17 $0 (lam (gt? 1 $0)))))",
    "(lam (length (prev_dc_inv_17 $0 (lam (gt? prev_dc_inv_0 $0)))))",
    "(lam (prev_dc_inv_16 $0 0 (lam (if (prev_dc_inv_6 $0) 1 0))))",
    "(lam (prev_dc_inv_16 $0 0 (lam (if (eq? $0 prev_dc_inv_1) 1 0))))",
    "(lam (cdr (cdr (cdr $0))))",
    "(lam (prev_dc_inv_9 (cons 1 $0)))",
    "(lam (cdr (prev_dc_inv_9 $0)))",
    "(lam (fold (prev_dc_inv_21 $0) $0 (lam (lam (cdr $0)))))",
    "(lam (empty? $0))",
    "(lam (empty? (prev_dc_inv_11 $0)))",
    "(lam (prev_dc_inv_17 $0 (lam (gt? 1 (mod $0 prev_dc_inv_0)))))",
    "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_20 $1 (lam (mod $1 prev_dc_inv_0))))))",
    "(lam (prev_dc_inv_20 $0 (lam (prev_dc_inv_12 (cdr $1)))))",
    "(lam (is-square (prev_dc_inv_12 (cdr (map (lam (- (car $1) $0)) $0)))))",
    "(lam (gt? 1 (prev_dc_inv_12 $0)))",
    "(lam (empty? (range (prev_dc_inv_12 $0))))",
    "(lam (prev_dc_inv_6 (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (prev_dc_inv_6 $0))))))",
    "(lam (is-prime (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (prev_dc_inv_6 $0))))))",
    "(lam (is-prime (index prev_dc_inv_0 (prev_dc_inv_18 (prev_dc_inv_14 $0 (range prev_dc_inv_0)) 1))))",
    "(lam (is-prime (index prev_dc_inv_0 (prev_dc_inv_14 $0 (prev_dc_inv_18 (range prev_dc_inv_0) 1)))))",
    "(lam (car $0))",
    "(lam (index 0 $0))",
    "(lam (car $0))",
    "(lam (index 0 $0))",
    "(lam (index prev_dc_inv_0 $0))",
    "(lam (index 1 (cdr $0)))",
    "(lam (index prev_dc_inv_3 $0))",
    "(lam (index prev_dc_inv_1 (cdr $0)))",
    "(lam (prev_dc_inv_20 $0 (lam (+ prev_dc_inv_1 $0))))",
    "(lam (prev_dc_inv_20 $0 (lam (+ $0 prev_dc_inv_1))))",
    "(lam (prev_dc_inv_20 $0 (lam (+ prev_dc_inv_0 $0))))",
    "(lam (prev_dc_inv_20 $0 (lam (+ $0 prev_dc_inv_0))))",
    "(lam (empty? (prev_dc_inv_17 (prev_dc_inv_11 $0) (lam (prev_dc_inv_2 $0)))))",
    "(lam (prev_dc_inv_6 (prev_dc_inv_16 (prev_dc_inv_11 $0) prev_dc_inv_1 (lam $0))))",
    "(lam (prev_dc_inv_15 $0))",
    "(lam (prev_dc_inv_15 (prev_dc_inv_14 $0 $0)))",
    "(lam (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (gt? prev_dc_inv_1 (length (prev_dc_inv_17 $1 (lam (gt? $1 $0)))))))))",
    "(lam (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (prev_dc_inv_6 (length (prev_dc_inv_17 $1 (lam (gt? $1 $0)))))))))",
    "(lam (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (gt? prev_dc_inv_3 (length (prev_dc_inv_17 $1 (lam (gt? $1 $0)))))))))",
    "(lam (index (length (cdr $0)) $0))",
    "(lam (index (- (length $0) 1) $0))",
    "(lam (length $0))",
    "(lam (length (range (length $0))))",
    "(lam (prev_dc_inv_8 1 $0))",
    "(lam (map (lam 0) $0))",
    "(lam (prev_dc_inv_8 prev_dc_inv_0 $0))",
    "(lam (map (lam (mod $0 prev_dc_inv_0)) $0))",
    "(lam (prev_dc_inv_8 prev_dc_inv_1 $0))",
    "(lam (map (lam (mod $0 prev_dc_inv_1)) $0))",
    "(lam (prev_dc_inv_8 prev_dc_inv_3 $0))",
    "(lam (map (lam (mod $0 prev_dc_inv_3)) $0))",
    "(lam (prev_dc_inv_8 prev_dc_inv_5 $0))",
    "(lam (map (lam (mod $0 prev_dc_inv_5)) $0))",
    "(lam (prev_dc_inv_8 1 $0))",
    "(lam (map (lam 0) $0))",
    "(lam (map (lam (+ $0 $0)) $0))",
    "(lam (map (lam (* prev_dc_inv_0 $0)) $0))",
    "(lam (map (lam (* prev_dc_inv_1 $0)) $0))",
    "(lam (map (lam (* $0 prev_dc_inv_1)) $0))",
    "(lam (map (lam (* prev_dc_inv_5 $0)) $0))",
    "(lam (map (lam (* $0 prev_dc_inv_5)) $0))",
    "(lam (map (lam (index $0 $1)) (range (length (cdr $0)))))",
    "(lam (map (lam (index $0 $1)) (range (- (length $0) 1))))",
    "(lam (cons (car $0) $0))",
    "(lam (prev_dc_inv_4 $0 (lam (lam (cons $1 $2)))))",
    "(lam (prev_dc_inv_14 (cdr (prev_dc_inv_13 $0)) $0))",
    "(lam (cdr (prev_dc_inv_14 (prev_dc_inv_13 $0) $0)))",
    "(lam (cons (index prev_dc_inv_1 $0) $0))",
    "(lam (cons (car (prev_dc_inv_19 $0)) $0))",
    "(lam (cons 0 $0))",
    "(lam (prev_dc_inv_14 (range 1) $0))",
    "(lam (prev_dc_inv_12 $0))",
    "(lam (prev_dc_inv_12 (map (lam $0) $0)))",
    "(lam (cons (car $0) (cdr (cdr $0))))",
    "(lam (cons (index 0 $0) (cdr (cdr $0))))",
    "(lam (prev_dc_inv_14 (prev_dc_inv_19 (prev_dc_inv_14 (prev_dc_inv_19 $0) $0)) (prev_dc_inv_9 $0)))",
    "(lam (prev_dc_inv_14 (cdr (prev_dc_inv_22 (cons 1 $0))) (prev_dc_inv_9 $0)))",
    "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (mod $0 prev_dc_inv_0)))))",
    "(lam (prev_dc_inv_17 $0 (lam (eq? (mod $0 prev_dc_inv_0) 1))))",
    "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (mod $0 prev_dc_inv_1)))))",
    "(lam (prev_dc_inv_17 $0 (lam (gt? (mod $0 prev_dc_inv_1) 0))))",
    "(lam (prev_dc_inv_14 $0 $0))",
    "(lam (prev_dc_inv_14 $0 (map (lam $0) $0)))",
    "(lam (prev_dc_inv_4 (range (car $0)) (lam (lam (prev_dc_inv_14 $0 (cdr $2))))))",
    "(lam (prev_dc_inv_4 (range (car $0)) (lam (lam (prev_dc_inv_14 (cdr $2) $0)))))",
    "(lam (map (lam (car $1)) $0))",
    "(lam (prev_dc_inv_4 $0 (lam (lam (map (lam $2) $2)))))",
    "(lam (map (lam (index prev_dc_inv_1 $1)) $0))",
    "(lam (map (lam (car (prev_dc_inv_19 $1))) $0))",
    "(lam (prev_dc_inv_4 $0 (lam (lam (prev_dc_inv_18 $0 $1)))))",
    "(lam (fold $0 empty (lam (lam (prev_dc_inv_18 $0 $1)))))",
    "(lam (prev_dc_inv_18 empty (car $0)))",
    "(lam (cons (car $0) empty))",
    "(lam (prev_dc_inv_22 $0))",
    "(lam (prev_dc_inv_22 (prev_dc_inv_22 $0)))",
    "(lam (prev_dc_inv_13 (cdr $0)))",
    "(lam (prev_dc_inv_13 (prev_dc_inv_21 $0)))",
    "(lam (prev_dc_inv_19 (prev_dc_inv_14 (prev_dc_inv_13 $0) $0)))",
    "(lam (prev_dc_inv_19 (prev_dc_inv_14 (range prev_dc_inv_0) $0)))",
    "(lam (prev_dc_inv_21 $0))",
    "(lam (prev_dc_inv_21 (prev_dc_inv_14 $0 $0)))",
    "(lam (prev_dc_inv_19 (cons 1 $0)))",
    "(lam (prev_dc_inv_19 (cons prev_dc_inv_0 $0)))",
    "(lam (cdr (prev_dc_inv_21 $0)))",
    "(lam (prev_dc_inv_22 (cdr (cdr $0))))",
    "(lam (prev_dc_inv_21 (cdr $0)))",
    "(lam (prev_dc_inv_21 (cdr (prev_dc_inv_14 $0 $0))))",
    "(lam (cdr (prev_dc_inv_13 (cdr (cdr $0)))))",
    "(lam (cdr (prev_dc_inv_13 (prev_dc_inv_21 (cdr $0)))))",
    "(lam (prev_dc_inv_19 $0))",
    "(lam (prev_dc_inv_19 (prev_dc_inv_19 $0)))",
    "(lam (prev_dc_inv_21 (cdr (cdr $0))))",
    "(lam (prev_dc_inv_14 (prev_dc_inv_19 $0) (cdr (prev_dc_inv_19 (cdr (cdr $0))))))",
    "(lam (cdr (prev_dc_inv_19 $0)))",
    "(lam (prev_dc_inv_13 (prev_dc_inv_9 $0)))",
    "(lam (prev_dc_inv_22 (prev_dc_inv_9 $0)))",
    "(lam (cdr (prev_dc_inv_21 (cdr (cdr $0)))))",
    "(lam (cdr $0))",
    "(lam (cdr (map (lam $0) $0)))",
    "(lam (prev_dc_inv_18 empty (car $0)))",
    "(lam (cons (car $0) empty))",
    "(lam (prev_dc_inv_13 $0))",
    "(lam (prev_dc_inv_13 (prev_dc_inv_13 $0)))",
    "(lam (prev_dc_inv_19 (prev_dc_inv_14 (prev_dc_inv_19 $0) $0)))",
    "(lam (prev_dc_inv_19 (prev_dc_inv_14 (range prev_dc_inv_1) $0)))",
    "(lam (prev_dc_inv_22 $0))",
    "(lam (prev_dc_inv_22 (prev_dc_inv_22 $0)))",
    "(lam (prev_dc_inv_4 (range (prev_dc_inv_15 (prev_dc_inv_7 1 $0))) (lam (lam (prev_dc_inv_14 (prev_dc_inv_17 $2 (lam (eq? $0 $2))) $0)))))",
    "(lam (prev_dc_inv_4 (range (prev_dc_inv_15 (prev_dc_inv_7 1 $0))) (lam (lam (prev_dc_inv_14 (prev_dc_inv_17 $2 (lam (eq? $2 $0))) $0)))))",
    "(lam (+ (prev_dc_inv_15 $0) 1))",
    "(lam (+ 1 (prev_dc_inv_15 $0)))",
    "(lam (range (+ (prev_dc_inv_15 $0) 1)))",
    "(lam (range (+ 1 (prev_dc_inv_15 $0))))",
    "(lam (prev_dc_inv_17 $0 (lam (is-prime $0))))",
    "(lam (prev_dc_inv_17 (map (lam $0) $0) (lam (is-prime $0))))",
    "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 $0))))",
    "(lam (prev_dc_inv_17 $0 (lam (gt? $0 0))))",
    "(lam (prev_dc_inv_17 $0 (lam (gt? 1 $0))))",
    "(lam (prev_dc_inv_17 $0 (lam (eq? $0 0))))",
    "(lam (prev_dc_inv_17 $0 (lam (eq? $0 1))))",
    "(lam (prev_dc_inv_17 $0 (lam (eq? 1 $0))))",
    "(lam (prev_dc_inv_17 $0 (lam (gt? $0 1))))",
    "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (- $0 1)))))",
    "(lam (prev_dc_inv_17 $0 (lam (gt? prev_dc_inv_1 $0))))",
    "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (- prev_dc_inv_1 $0)))))",
    "(lam (prev_dc_inv_17 $0 (lam (gt? $0 prev_dc_inv_1))))",
    "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (- $0 prev_dc_inv_1)))))"
  ],
  "invs": [
    {
      "body": "(lam (map (lam (#0 $0)) $0))",
      "dreamcoder": "#(lambda (lambda (map (lambda ($2 $0)) $0)))",
      "arity": 1,
      "name": "fn_23",
      "rewritten": [
        "(lam (prev_dc_inv_7 1 $0))",
        "(lam (prev_dc_inv_7 (prev_dc_inv_15 empty) $0))",
        "(lam (prev_dc_inv_7 prev_dc_inv_1 $0))",
        "(fn_23 (+ prev_dc_inv_1))",
        "(lam (prev_dc_inv_7 prev_dc_inv_3 $0))",
        "(fn_23 (+ prev_dc_inv_3))",
        "(lam (prev_dc_inv_18 $0 (index 1 $0)))",
        "(lam (prev_dc_inv_14 $0 (cdr (prev_dc_inv_13 $0))))",
        "(lam (prev_dc_inv_18 $0 (index prev_dc_inv_0 $0)))",
        "(lam (prev_dc_inv_18 $0 (index 1 (cdr $0))))",
        "(lam (prev_dc_inv_18 $0 (index prev_dc_inv_1 $0)))",
        "(lam (prev_dc_inv_18 $0 (car (prev_dc_inv_19 $0))))",
        "(lam (prev_dc_inv_18 $0 0))",
        "(lam (prev_dc_inv_14 $0 (range 1)))",
        "(lam (prev_dc_inv_18 $0 prev_dc_inv_1))",
        "(lam (prev_dc_inv_18 $0 (+ prev_dc_inv_0 1)))",
        "(lam (prev_dc_inv_18 $0 prev_dc_inv_3))",
        "(lam (prev_dc_inv_18 (map (lam $0) $0) prev_dc_inv_3))",
        "(lam (prev_dc_inv_18 $0 prev_dc_inv_5))",
        "(lam (prev_dc_inv_18 (map (lam $0) $0) prev_dc_inv_5))",
        "(lam (map (lam (prev_dc_inv_2 (+ $0 1))) $0))",
        "(lam (map (lam (prev_dc_inv_2 (+ 1 $0))) $0))",
        "(fn_23 prev_dc_inv_2)",
        "(lam (map (lam $0) (map (lam (prev_dc_inv_2 $0)) $0)))",
        "(lam (map (lam (gt? $0 prev_dc_inv_1)) $0))",
        "(lam (map (lam (prev_dc_inv_2 (- $0 prev_dc_inv_1))) $0))",
        "(lam (prev_dc_inv_10 prev_dc_inv_1 $0))",
        "(lam (prev_dc_inv_10 (+ prev_dc_inv_0 1) $0))",
        "(lam (prev_dc_inv_10 prev_dc_inv_3 $0))",
        "(lam (prev_dc_inv_10 prev_dc_inv_3 (map (lam $0) $0)))",
        "(fn_23 prev_dc_inv_6)",
        "(fn_23 (eq? prev_dc_inv_1))",
        "(fn_23 (eq? prev_dc_inv_3))",
        "(lam (map (lam (eq? $0 prev_dc_inv_3)) $0))",
        "(lam (prev_dc_inv_8 prev_dc_inv_0 (prev_dc_inv_11 $0)))",
        "(fn_23 (- 1))",
        "(lam (prev_dc_inv_11 $0))",
        "(lam (prev_dc_inv_11 (map (lam $0) $0)))",
        "(lam (prev_dc_inv_8 prev_dc_inv_5 (prev_dc_inv_7 1 $0)))",
        "(lam (map (lam (mod (+ $0 1) prev_dc_inv_5)) $0))",
        "(lam (prev_dc_inv_8 prev_dc_inv_3 (prev_dc_inv_7 prev_dc_inv_1 $0)))",
        "(lam (map (lam (mod (+ prev_dc_inv_1 $0) prev_dc_inv_3)) $0))",
        "(lam (prev_dc_inv_11 $0))",
        "(lam (map (lam (if (is-prime $0) 0 (+ 1 $0))) $0))",
        "(fn_23 (- 1))",
        "(lam (map (lam (prev_dc_inv_12 (range $0))) $0))",
        "(lam (prev_dc_inv_11 (prev_dc_inv_11 $0)))",
        "(lam (prev_dc_inv_8 prev_dc_inv_1 (prev_dc_inv_7 prev_dc_inv_0 $0)))",
        "(lam (prev_dc_inv_8 prev_dc_inv_3 (prev_dc_inv_7 1 $0)))",
        "(lam (prev_dc_inv_8 prev_dc_inv_3 (prev_dc_inv_7 prev_dc_inv_5 $0)))",
        "(lam (length (prev_dc_inv_17 (cdr $0) (lam (eq? $0 (car $1))))))",
        "(lam (length (prev_dc_inv_17 (cdr $0) (lam (eq? (car $1) $0)))))",
        "(lam (length (prev_dc_inv_17 $0 (lam (gt? 1 $0)))))",
        "(lam (length (prev_dc_inv_17 $0 (lam (gt? prev_dc_inv_0 $0)))))",
        "(lam (prev_dc_inv_16 $0 0 (lam (if (prev_dc_inv_6 $0) 1 0))))",
        "(lam (prev_dc_inv_16 $0 0 (lam (if (eq? $0 prev_dc_inv_1) 1 0))))",
        "(lam (cdr (cdr (cdr $0))))",
        "(lam (prev_dc_inv_9 (cons 1 $0)))",
        "(lam (cdr (prev_dc_inv_9 $0)))",
        "(lam (fold (prev_dc_inv_21 $0) $0 (lam (lam (cdr $0)))))",
        "(lam (empty? $0))",
        "(lam (empty? (prev_dc_inv_11 $0)))",
        "(lam (prev_dc_inv_17 $0 (lam (gt? 1 (mod $0 prev_dc_inv_0)))))",
        "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_20 $1 (lam (mod $1 prev_dc_inv_0))))))",
        "(lam (prev_dc_inv_20 $0 (lam (prev_dc_inv_12 (cdr $1)))))",
        "(lam (is-square (prev_dc_inv_12 (cdr (map (lam (- (car $1) $0)) $0)))))",
        "(lam (gt? 1 (prev_dc_inv_12 $0)))",
        "(lam (empty? (range (prev_dc_inv_12 $0))))",
        "(lam (prev_dc_inv_6 (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (prev_dc_inv_6 $0))))))",
        "(lam (is-prime (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (prev_dc_inv_6 $0))))))",
        "(lam (is-prime (index prev_dc_inv_0 (prev_dc_inv_18 (prev_dc_inv_14 $0 (range prev_dc_inv_0)) 1))))",
        "(lam (is-prime (index prev_dc_inv_0 (prev_dc_inv_14 $0 (prev_dc_inv_18 (range prev_dc_inv_0) 1)))))",
        "(lam (car $0))",
        "(lam (index 0 $0))",
        "(lam (car $0))",
        "(lam (index 0 $0))",
        "(lam (index prev_dc_inv_0 $0))",
        "(lam (index 1 (cdr $0)))",
        "(lam (index prev_dc_inv_3 $0))",
        "(lam (index prev_dc_inv_1 (cdr $0)))",
        "(lam (prev_dc_inv_20 $0 (lam (+ prev_dc_inv_1 $0))))",
        "(lam (prev_dc_inv_20 $0 (lam (+ $0 prev_dc_inv_1))))",
        "(lam (prev_dc_inv_20 $0 (lam (+ prev_dc_inv_0 $0))))",
        "(lam (prev_dc_inv_20 $0 (lam (+ $0 prev_dc_inv_0))))",
        "(lam (empty? (prev_dc_inv_17 (prev_dc_inv_11 $0) (lam (prev_dc_inv_2 $0)))))",
        "(lam (prev_dc_inv_6 (prev_dc_inv_16 (prev_dc_inv_11 $0) prev_dc_inv_1 (lam $0))))",
        "(lam (prev_dc_inv_15 $0))",
        "(lam (prev_dc_inv_15 (prev_dc_inv_14 $0 $0)))",
        "(lam (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (gt? prev_dc_inv_1 (length (prev_dc_inv_17 $1 (lam (gt? $1 $0)))))))))",
        "(lam (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (prev_dc_inv_6 (length (prev_dc_inv_17 $1 (lam (gt? $1 $0)))))))))",
        "(lam (prev_dc_inv_15 (prev_dc_inv_17 $0 (lam (gt? prev_dc_inv_3 (length (prev_dc_inv_17 $1 (lam (gt? $1 $0)))))))))",
        "(lam (index (length (cdr $0)) $0))",
        "(lam (index (- (length $0) 1) $0))",
        "(lam (length $0))",
        "(lam (length (range (length $0))))",
        "(lam (prev_dc_inv_8 1 $0))",
        "(lam (map (lam 0) $0))",
        "(lam (prev_dc_inv_8 prev_dc_inv_0 $0))",
        "(lam (map (lam (mod $0 prev_dc_inv_0)) $0))",
        "(lam (prev_dc_inv_8 prev_dc_inv_1 $0))",
        "(lam (map (lam (mod $0 prev_dc_inv_1)) $0))",
        "(lam (prev_dc_inv_8 prev_dc_inv_3 $0))",
        "(lam (map (lam (mod $0 prev_dc_inv_3)) $0))",
        "(lam (prev_dc_inv_8 prev_dc_inv_5 $0))",
        "(lam (map (lam (mod $0 prev_dc_inv_5)) $0))",
        "(lam (prev_dc_inv_8 1 $0))",
        "(lam (map (lam 0) $0))",
        "(lam (map (lam (+ $0 $0)) $0))",
        "(fn_23 (* prev_dc_inv_0))",
        "(fn_23 (* prev_dc_inv_1))",
        "(lam (map (lam (* $0 prev_dc_inv_1)) $0))",
        "(fn_23 (* prev_dc_inv_5))",
        "(lam (map (lam (* $0 prev_dc_inv_5)) $0))",
        "(lam (map (lam (index $0 $1)) (range (length (cdr $0)))))",
        "(lam (map (lam (index $0 $1)) (range (- (length $0) 1))))",
        "(lam (cons (car $0) $0))",
        "(lam (prev_dc_inv_4 $0 (lam (lam (cons $1 $2)))))",
        "(lam (prev_dc_inv_14 (cdr (prev_dc_inv_13 $0)) $0))",
        "(lam (cdr (prev_dc_inv_14 (prev_dc_inv_13 $0) $0)))",
        "(lam (cons (index prev_dc_inv_1 $0) $0))",
        "(lam (cons (car (prev_dc_inv_19 $0)) $0))",
        "(lam (cons 0 $0))",
        "(lam (prev_dc_inv_14 (range 1) $0))",
        "(lam (prev_dc_inv_12 $0))",
        "(lam (prev_dc_inv_12 (map (lam $0) $0)))",
        "(lam (cons (car $0) (cdr (cdr $0))))",
        "(lam (cons (index 0 $0) (cdr (cdr $0))))",
        "(lam (prev_dc_inv_14 (prev_dc_inv_19 (prev_dc_inv_14 (prev_dc_inv_19 $0) $0)) (prev_dc_inv_9 $0)))",
        "(lam (prev_dc_inv_14 (cdr (prev_dc_inv_22 (cons 1 $0))) (prev_dc_inv_9 $0)))",
        "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (mod $0 prev_dc_inv_0)))))",
        "(lam (prev_dc_inv_17 $0 (lam (eq? (mod $0 prev_dc_inv_0) 1))))",
        "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (mod $0 prev_dc_inv_1)))))",
        "(lam (prev_dc_inv_17 $0 (lam (gt? (mod $0 prev_dc_inv_1) 0))))",
        "(lam (prev_dc_inv_14 $0 $0))",
        "(lam (prev_dc_inv_14 $0 (map (lam $0) $0)))",
        "(lam (prev_dc_inv_4 (range (car $0)) (lam (lam (prev_dc_inv_14 $0 (cdr $2))))))",
        "(lam (prev_dc_inv_4 (range (car $0)) (lam (lam (prev_dc_inv_14 (cdr $2) $0)))))",
        "(lam (map (lam (car $1)) $0))",
        "(lam (prev_dc_inv_4 $0 (lam (lam (map (lam $2) $2)))))",
        "(lam (map (lam (index prev_dc_inv_1 $1)) $0))",
        "(lam (map (lam (car (prev_dc_inv_19 $1))) $0))",
        "(lam (prev_dc_inv_4 $0 (lam (lam (prev_dc_inv_18 $0 $1)))))",
        "(lam (fold $0 empty (lam (lam (prev_dc_inv_18 $0 $1)))))",
        "(lam (prev_dc_inv_18 empty (car $0)))",
        "(lam (cons (car $0) empty))",
        "(lam (prev_dc_inv_22 $0))",
        "(lam (prev_dc_inv_22 (prev_dc_inv_22 $0)))",
        "(lam (prev_dc_inv_13 (cdr $0)))",
        "(lam (prev_dc_inv_13 (prev_dc_inv_21 $0)))",
        "(lam (prev_dc_inv_19 (prev_dc_inv_14 (prev_dc_inv_13 $0) $0)))",
        "(lam (prev_dc_inv_19 (prev_dc_inv_14 (range prev_dc_inv_0) $0)))",
        "(lam (prev_dc_inv_21 $0))",
        "(lam (prev_dc_inv_21 (prev_dc_inv_14 $0 $0)))",
        "(lam (prev_dc_inv_19 (cons 1 $0)))",
        "(lam (prev_dc_inv_19 (cons prev_dc_inv_0 $0)))",
        "(lam (cdr (prev_dc_inv_21 $0)))",
        "(lam (prev_dc_inv_22 (cdr (cdr $0))))",
        "(lam (prev_dc_inv_21 (cdr $0)))",
        "(lam (prev_dc_inv_21 (cdr (prev_dc_inv_14 $0 $0))))",
        "(lam (cdr (prev_dc_inv_13 (cdr (cdr $0)))))",
        "(lam (cdr (prev_dc_inv_13 (prev_dc_inv_21 (cdr $0)))))",
        "(lam (prev_dc_inv_19 $0))",
        "(lam (prev_dc_inv_19 (prev_dc_inv_19 $0)))",
        "(lam (prev_dc_inv_21 (cdr (cdr $0))))",
        "(lam (prev_dc_inv_14 (prev_dc_inv_19 $0) (cdr (prev_dc_inv_19 (cdr (cdr $0))))))",
        "(lam (cdr (prev_dc_inv_19 $0)))",
        "(lam (prev_dc_inv_13 (prev_dc_inv_9 $0)))",
        "(lam (prev_dc_inv_22 (prev_dc_inv_9 $0)))",
        "(lam (cdr (prev_dc_inv_21 (cdr (cdr $0)))))",
        "(lam (cdr $0))",
        "(lam (cdr (map (lam $0) $0)))",
        "(lam (prev_dc_inv_18 empty (car $0)))",
        "(lam (cons (car $0) empty))",
        "(lam (prev_dc_inv_13 $0))",
        "(lam (prev_dc_inv_13 (prev_dc_inv_13 $0)))",
        "(lam (prev_dc_inv_19 (prev_dc_inv_14 (prev_dc_inv_19 $0) $0)))",
        "(lam (prev_dc_inv_19 (prev_dc_inv_14 (range prev_dc_inv_1) $0)))",
        "(lam (prev_dc_inv_22 $0))",
        "(lam (prev_dc_inv_22 (prev_dc_inv_22 $0)))",
        "(lam (prev_dc_inv_4 (range (prev_dc_inv_15 (prev_dc_inv_7 1 $0))) (lam (lam (prev_dc_inv_14 (prev_dc_inv_17 $2 (lam (eq? $0 $2))) $0)))))",
        "(lam (prev_dc_inv_4 (range (prev_dc_inv_15 (prev_dc_inv_7 1 $0))) (lam (lam (prev_dc_inv_14 (prev_dc_inv_17 $2 (lam (eq? $2 $0))) $0)))))",
        "(lam (+ (prev_dc_inv_15 $0) 1))",
        "(lam (+ 1 (prev_dc_inv_15 $0)))",
        "(lam (range (+ (prev_dc_inv_15 $0) 1)))",
        "(lam (range (+ 1 (prev_dc_inv_15 $0))))",
        "(lam (prev_dc_inv_17 $0 (lam (is-prime $0))))",
        "(lam (prev_dc_inv_17 (map (lam $0) $0) (lam (is-prime $0))))",
        "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 $0))))",
        "(lam (prev_dc_inv_17 $0 (lam (gt? $0 0))))",
        "(lam (prev_dc_inv_17 $0 (lam (gt? 1 $0))))",
        "(lam (prev_dc_inv_17 $0 (lam (eq? $0 0))))",
        "(lam (prev_dc_inv_17 $0 (lam (eq? $0 1))))",
        "(lam (prev_dc_inv_17 $0 (lam (eq? 1 $0))))",
        "(lam (prev_dc_inv_17 $0 (lam (gt? $0 1))))",
        "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (- $0 1)))))",
        "(lam (prev_dc_inv_17 $0 (lam (gt? prev_dc_inv_1 $0))))",
        "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (- prev_dc_inv_1 $0)))))",
        "(lam (prev_dc_inv_17 $0 (lam (gt? $0 prev_dc_inv_1))))",
        "(lam (prev_dc_inv_17 $0 (lam (prev_dc_inv_2 (- $0 prev_dc_inv_1)))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) 1 $0))",
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) empty) $0))",
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ 1 1)) $0))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) (+ #(+ 1 #(+ 1 1))))",
        "(lambda (#(lambda (map (lambda (+ $0 $1)))) #(+ #(+ 1 1) #(+ 1 1)) $0))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) (+ #(+ #(+ 1 1) #(+ 1 1))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (index 1 $0)))",
        "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (cdr (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (index #(+ 1 1) $0)))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (index 1 (cdr $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (index #(+ 1 #(+ 1 1)) $0)))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (car (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 0))",
        "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (range 1)))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 #(+ 1 #(+ 1 1))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 (+ #(+ 1 1) 1)))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 #(+ #(+ 1 1) #(+ 1 1))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) (map (lambda $0) $0) #(+ #(+ 1 1) #(+ 1 1))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 #(+ 1 #(+ #(+ 1 1) #(+ 1 1)))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) (map (lambda $0) $0) #(+ 1 #(+ #(+ 1 1) #(+ 1 1)))))",
        "(lambda (map (lambda (#(lambda (gt? $0 0)) (+ $0 1))) $0))",
        "(lambda (map (lambda (#(lambda (gt? $0 0)) (+ 1 $0))) $0))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) #(lambda (gt? $0 0)))",
        "(lambda (map (lambda $0) (map (lambda (#(lambda (gt? $0 0)) $0)) $0)))",
        "(lambda (map (lambda (gt? $0 #(+ 1 #(+ 1 1)))) $0))",
        "(lambda (map (lambda (#(lambda (gt? $0 0)) (- $0 #(+ 1 #(+ 1 1))))) $0))",
        "(lambda (#(lambda (map (lambda (gt? 1 (mod $0 $1))))) #(+ 1 #(+ 1 1)) $0))",
        "(lambda (#(lambda (map (lambda (gt? 1 (mod $0 $1))))) (+ #(+ 1 1) 1) $0))",
        "(lambda (#(lambda (map (lambda (gt? 1 (mod $0 $1))))) #(+ #(+ 1 1) #(+ 1 1)) $0))",
        "(lambda (#(lambda (map (lambda (gt? 1 (mod $0 $1))))) #(+ #(+ 1 1) #(+ 1 1)) (map (lambda $0) $0)))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) #(lambda (eq? $0 (+ #(+ 1 1) 1))))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) (eq? #(+ 1 #(+ 1 1))))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) (eq? #(+ #(+ 1 1) #(+ 1 1))))",
        "(lambda (map (lambda (eq? $0 #(+ #(+ 1 1) #(+ 1 1)))) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 1) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) $0)))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) (- 1))",
        "(lambda (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) $0))",
        "(lambda (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (map (lambda $0) $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ #(+ 1 1) #(+ 1 1))) (#(lambda (map (lambda (+ $0 $1)))) 1 $0)))",
        "(lambda (map (lambda (mod (+ $0 1) #(+ 1 #(+ #(+ 1 1) #(+ 1 1))))) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 1) #(+ 1 1)) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ 1 1)) $0)))",
        "(lambda (map (lambda (mod (+ #(+ 1 #(+ 1 1)) $0) #(+ #(+ 1 1) #(+ 1 1)))) $0))",
        "(lambda (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) $0))",
        "(lambda (map (lambda (if (is-prime $0) 0 (+ 1 $0))) $0))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) (- 1))",
        "(lambda (map (lambda (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (range $0))) $0))",
        "(lambda (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 1)) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 1) $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 1) #(+ 1 1)) (#(lambda (map (lambda (+ $0 $1)))) 1 $0)))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 1) #(+ 1 1)) (#(lambda (map (lambda (+ $0 $1)))) #(+ 1 #(+ #(+ 1 1) #(+ 1 1))) $0)))",
        "(lambda (length (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (cdr $0) (lambda (eq? $0 (car $1))))))",
        "(lambda (length (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (cdr $0) (lambda (eq? (car $1) $0)))))",
        "(lambda (length (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? 1 $0)))))",
        "(lambda (length (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? #(+ 1 1) $0)))))",
        "(lambda (#(lambda (lambda (lambda (fold $2 $1 (lambda (lambda (+ $0 ($2 $1)))))))) $0 0 (lambda (if (#(lambda (eq? $0 (+ #(+ 1 1) 1))) $0) 1 0))))",
        "(lambda (#(lambda (lambda (lambda (fold $2 $1 (lambda (lambda (+ $0 ($2 $1)))))))) $0 0 (lambda (if (eq? $0 #(+ 1 #(+ 1 1))) 1 0))))",
        "(lambda (cdr (cdr (cdr $0))))",
        "(lambda (#(lambda (cdr (cdr (cdr (cdr $0))))) (cons 1 $0)))",
        "(lambda (cdr (#(lambda (cdr (cdr (cdr (cdr $0))))) $0)))",
        "(lambda (fold (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) $0) $0 (lambda (lambda (cdr $0)))))",
        "(lambda (empty? $0))",
        "(lambda (empty? (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) $0)))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? 1 (mod $0 #(+ 1 1))))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (lambda (#(lambda (gt? $0 0)) (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (map $0 $1))))))) $1 (lambda (mod $1 #(+ 1 1)))))))",
        "(lambda (#(lambda (lambda (#(lambda (gt? $0 0)) (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (map $0 $1))))))) $0 (lambda (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (cdr $1)))))",
        "(lambda (is-square (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (cdr (map (lambda (- (car $1) $0)) $0)))))",
        "(lambda (gt? 1 (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) $0)))",
        "(lambda (empty? (range (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) $0))))",
        "(lambda (#(lambda (eq? $0 (+ #(+ 1 1) 1))) (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (eq? $0 (+ #(+ 1 1) 1))) $0))))))",
        "(lambda (is-prime (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (eq? $0 (+ #(+ 1 1) 1))) $0))))))",
        "(lambda (is-prime (index #(+ 1 1) (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (range #(+ 1 1))) 1))))",
        "(lambda (is-prime (index #(+ 1 1) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) (range #(+ 1 1)) 1)))))",
        "(lambda (car $0))",
        "(lambda (index 0 $0))",
        "(lambda (car $0))",
        "(lambda (index 0 $0))",
        "(lambda (index #(+ 1 1) $0))",
        "(lambda (index 1 (cdr $0)))",
        "(lambda (index #(+ #(+ 1 1) #(+ 1 1)) $0))",
        "(lambda (index #(+ 1 #(+ 1 1)) (cdr $0)))",
        "(lambda (#(lambda (lambda (#(lambda (gt? $0 0)) (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (map $0 $1))))))) $0 (lambda (+ #(+ 1 #(+ 1 1)) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (gt? $0 0)) (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (map $0 $1))))))) $0 (lambda (+ $0 #(+ 1 #(+ 1 1))))))",
        "(lambda (#(lambda (lambda (#(lambda (gt? $0 0)) (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (map $0 $1))))))) $0 (lambda (+ #(+ 1 1) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (gt? $0 0)) (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) (map $0 $1))))))) $0 (lambda (+ $0 #(+ 1 1)))))",
        "(lambda (empty? (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) $0) (lambda (#(lambda (gt? $0 0)) $0)))))",
        "(lambda (#(lambda (eq? $0 (+ #(+ 1 1) 1))) (#(lambda (lambda (lambda (fold $2 $1 (lambda (lambda (+ $0 ($2 $1)))))))) (#(map (lambda (if (is-prime $0) 0 (+ $0 1)))) $0) #(+ 1 #(+ 1 1)) (lambda $0))))",
        "(lambda (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) $0))",
        "(lambda (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 $0)))",
        "(lambda (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? #(+ 1 #(+ 1 1)) (length (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (gt? $1 $0)))))))))",
        "(lambda (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (eq? $0 (+ #(+ 1 1) 1))) (length (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (gt? $1 $0)))))))))",
        "(lambda (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? #(+ #(+ 1 1) #(+ 1 1)) (length (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $1 (lambda (gt? $1 $0)))))))))",
        "(lambda (index (length (cdr $0)) $0))",
        "(lambda (index (- (length $0) 1) $0))",
        "(lambda (length $0))",
        "(lambda (length (range (length $0))))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
        "(lambda (map (lambda 0) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 1) $0))",
        "(lambda (map (lambda (mod $0 #(+ 1 1))) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ 1 1)) $0))",
        "(lambda (map (lambda (mod $0 #(+ 1 #(+ 1 1)))) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ #(+ 1 1) #(+ 1 1)) $0))",
        "(lambda (map (lambda (mod $0 #(+ #(+ 1 1) #(+ 1 1)))) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) #(+ 1 #(+ #(+ 1 1) #(+ 1 1))) $0))",
        "(lambda (map (lambda (mod $0 #(+ 1 #(+ #(+ 1 1) #(+ 1 1))))) $0))",
        "(lambda (#(lambda (map (lambda (mod $0 $1)))) 1 $0))",
        "(lambda (map (lambda 0) $0))",
        "(lambda (map (lambda (+ $0 $0)) $0))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) (* #(+ 1 1)))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) (* #(+ 1 #(+ 1 1))))",
        "(lambda (map (lambda (* $0 #(+ 1 #(+ 1 1)))) $0))",
        "(#(lambda (lambda (map (lambda ($2 $0)) $0))) (* #(+ 1 #(+ #(+ 1 1) #(+ 1 1)))))",
        "(lambda (map (lambda (* $0 #(+ 1 #(+ #(+ 1 1) #(+ 1 1))))) $0))",
        "(lambda (map (lambda (index $0 $1)) (range (length (cdr $0)))))",
        "(lambda (map (lambda (index $0 $1)) (range (- (length $0) 1))))",
        "(lambda (cons (car $0) $0))",
        "(lambda (#(lambda (fold $0 empty)) $0 (lambda (lambda (cons $1 $2)))))",
        "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (cdr (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)) $0))",
        "(lambda (cdr (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0) $0)))",
        "(lambda (cons (index #(+ 1 #(+ 1 1)) $0) $0))",
        "(lambda (cons (car (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0)) $0))",
        "(lambda (cons 0 $0))",
        "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range 1) $0))",
        "(lambda (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) $0))",
        "(lambda (#(lambda (fold $0 1 (lambda (lambda (* $0 $1))))) (map (lambda $0) $0)))",
        "(lambda (cons (car $0) (cdr (cdr $0))))",
        "(lambda (cons (index 0 $0) (cdr (cdr $0))))",
        "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0) $0)) (#(lambda (cdr (cdr (cdr (cdr $0))))) $0)))",
        "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (cdr (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) (cons 1 $0))) (#(lambda (cdr (cdr (cdr (cdr $0))))) $0)))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 1))))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? (mod $0 #(+ 1 1)) 1))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (mod $0 #(+ 1 #(+ 1 1)))))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? (mod $0 #(+ 1 #(+ 1 1))) 0))))",
        "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 $0))",
        "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (map (lambda $0) $0)))",
        "(lambda (#(lambda (fold $0 empty)) (range (car $0)) (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 (cdr $2))))))",
        "(lambda (#(lambda (fold $0 empty)) (range (car $0)) (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (cdr $2) $0)))))",
        "(lambda (map (lambda (car $1)) $0))",
        "(lambda (#(lambda (fold $0 empty)) $0 (lambda (lambda (map (lambda $2) $2)))))",
        "(lambda (map (lambda (index #(+ 1 #(+ 1 1)) $1)) $0))",
        "(lambda (map (lambda (car (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $1))) $0))",
        "(lambda (#(lambda (fold $0 empty)) $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 $1)))))",
        "(lambda (fold $0 empty (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) $0 $1)))))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) empty (car $0)))",
        "(lambda (cons (car $0) empty))",
        "(lambda (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) $0))",
        "(lambda (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) $0)))",
        "(lambda (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)))",
        "(lambda (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) $0)))",
        "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0) $0)))",
        "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))",
        "(lambda (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) $0))",
        "(lambda (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 $0)))",
        "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (cons 1 $0)))",
        "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (cons #(+ 1 1) $0)))",
        "(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) $0)))",
        "(lambda (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) (cdr (cdr $0))))",
        "(lambda (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (cdr $0)))",
        "(lambda (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (cdr (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 $0))))",
        "(lambda (cdr (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr (cdr $0)))))",
        "(lambda (cdr (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (cdr $0)))))",
        "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))",
        "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0)))",
        "(lambda (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (cdr (cdr $0))))",
        "(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0) (cdr (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (cdr (cdr $0))))))",
        "(lambda (cdr (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0)))",
        "(lambda (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (#(lambda (cdr (cdr (cdr (cdr $0))))) $0)))",
        "(lambda (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) (#(lambda (cdr (cdr (cdr (cdr $0))))) $0)))",
        "(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (cdr (cdr $0)))))",
        "(lambda (cdr $0))",
        "(lambda (cdr (map (lambda $0) $0)))",
        "(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 empty)))) empty (car $0)))",
        "(lambda (cons (car $0) empty))",
        "(lambda (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0))",
        "(lambda (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))",
        "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0) $0)))",
        "(lambda (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 #(+ 1 1))) $0)))",
        "(lambda (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) $0))",
        "(lambda (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) (#(lambda (cdr (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) (cdr $0)) (#(lambda (fold (cdr (cdr (cdr $0))) $0 (lambda (lambda (cons $1 (#(lambda (cons (car $0) (cons (car (cdr $0)) empty))) $0)))))) $0))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (range #(+ 1 1)) $0)))) $0)))",
        "(lambda (#(lambda (fold $0 empty)) (range (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) (#(lambda (map (lambda (+ $0 $1)))) 1 $0))) (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $2 (lambda (eq? $0 $2))) $0)))))",
        "(lambda (#(lambda (fold $0 empty)) (range (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) (#(lambda (map (lambda (+ $0 $1)))) 1 $0))) (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $2 (lambda (eq? $2 $0))) $0)))))",
        "(lambda (+ (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) $0) 1))",
        "(lambda (+ 1 (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) $0)))",
        "(lambda (range (+ (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) $0) 1)))",
        "(lambda (range (+ 1 (#(lambda (fold $0 1 (lambda (lambda (+ $0 (length (range (- $1 $0)))))))) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (is-prime $0))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) (map (lambda $0) $0) (lambda (is-prime $0))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? $0 0))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? 1 $0))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? $0 0))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? $0 1))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (eq? 1 $0))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? $0 1))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (- $0 1)))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? #(+ 1 #(+ 1 1)) $0))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (- #(+ 1 #(+ 1 1)) $0)))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (gt? $0 #(+ 1 #(+ 1 1))))))",
        "(lambda (#(lambda (lambda (#(lambda (fold $0 empty)) $1 (lambda (lambda (if ($2 $1) (cons $1 $0) $0)))))) $0 (lambda (#(lambda (gt? $0 0)) (- $0 #(+ 1 #(+ 1 1)))))))"
      ],
      "utility": 1227,
      "expected_cost": 42848,
      "final_cost": 42848,
      "multiplier": 1.03575429424944,
      "multiplier_wrt_orig": 1.03575429424944,
      "num_uses": 12,
      "uses": [
        {
          "fn_23 (* prev_dc_inv_0)": "(lam (map (lam (* prev_dc_inv_0 $0)) $0))"
        },
        {
          "fn_23 (* prev_dc_inv_1)": "(lam (map (lam (* prev_dc_inv_1 $0)) $0))"
        },
        {
          "fn_23 (* prev_dc_inv_5)": "(lam (map (lam (* prev_dc_inv_5 $0)) $0))"
        },
        {
          "fn_23 (+ #0)": "(lam (map (lam (+ $0 $0)) $0))"
        },
        {
          "fn_23 (+ prev_dc_inv_1)": "(lam (map (lam (+ prev_dc_inv_1 $0)) $0))"
        },
        {
          "fn_23 (+ prev_dc_inv_3)": "(lam (map (lam (+ prev_dc_inv_3 $0)) $0))"
        },
        {
          "fn_23 (- 1)": "(lam (map (lam (- 1 $0)) $0))"
        },
        {
          "fn_23 (eq? prev_dc_inv_1)": "(lam (map (lam (eq? prev_dc_inv_1 $0)) $0))"
        },
        {
          "fn_23 (eq? prev_dc_inv_3)": "(lam (map (lam (eq? prev_dc_inv_3 $0)) $0))"
        },
        {
          "fn_23 prev_dc_inv_2": "(lam (map (lam (prev_dc_inv_2 $0)) $0))"
        },
        {
          "fn_23 prev_dc_inv_6": "(lam (map (lam (prev_dc_inv_6 $0)) $0))"
        }
      ]
    }
  ]
}