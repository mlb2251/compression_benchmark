{
  "DSL": {
    "logVariable": -0.7133801334629766,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0))))",
        "logProbability": -1.8830693256237065
      },
      {
        "expression":
          "#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA))",
        "logProbability": -1.826909239837732
      },
      {
        "expression":
          "#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA)",
        "logProbability": -1.7716875401251748
      },
      {
        "expression":
          "#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0))",
        "logProbability": -1.7766682476186264
      },
      {
        "expression":
          "#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0)))",
        "logProbability": -1.8367694594001853
      },
      {
        "expression":
          "#(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0))))",
        "logProbability": -1.9124370109299642
      },
      {
        "expression":
          "#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0)))))",
        "logProbability": -1.8708573340158625
      },
      {
        "expression":
          "#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0))))))))",
        "logProbability": -1.8825830306010372
      },
      { "expression": "logo_epsA", "logProbability": -0.34497342387603736 },
      { "expression": "logo_UA", "logProbability": -0.3598178891426005 },
      { "expression": "logo_DIVA", "logProbability": -0.3508881809987656 },
      { "expression": "logo_epsL", "logProbability": -0.3503271587680632 },
      { "expression": "logo_UL", "logProbability": -0.6982891964586493 },
      { "expression": "logo_MULA", "logProbability": -0.47452006698768034 },
      { "expression": "logo_ZA", "logProbability": -0.5379955429528422 },
      { "expression": "4", "logProbability": -0.8443325026960742 },
      { "expression": "logo_ZL", "logProbability": -0.8115541427975241 },
      { "expression": "logo_SUBA", "logProbability": -0.5379955429528422 },
      { "expression": "logo_ADDA", "logProbability": -0.5052057201298514 },
      { "expression": "logo_MULL", "logProbability": -0.6086770408614792 },
      { "expression": "7", "logProbability": -1.0439975356301159 },
      { "expression": "5", "logProbability": -0.9377346561516537 },
      { "expression": "3", "logProbability": -0.8314305285541916 },
      { "expression": "2", "logProbability": -0.978183277173899 },
      { "expression": "logo_DIVL", "logProbability": -0.7886656357022397 },
      { "expression": "6", "logProbability": -1.116908052849229 },
      { "expression": "8", "logProbability": -1.173636704344235 },
      { "expression": "9", "logProbability": -1.233075526802689 },
      { "expression": "logo_IFTY", "logProbability": -1.2304232157361183 },
      { "expression": "0", "logProbability": -1.2004325003058454 },
      { "expression": "1", "logProbability": -1.2201982557438664 },
      { "expression": "logo_FWRT", "logProbability": -1.9422863267664265 },
      { "expression": "logo_forLoop", "logProbability": -1.7229312342247298 },
      { "expression": "logo_GETSET", "logProbability": -1.82542460031787 },
      { "expression": "logo_PT", "logProbability": -2.007746165098531 },
      {
        "expression":
          "#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY)",
        "logProbability": -1.7724048644985029
      },
      {
        "expression":
          "#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0)))))",
        "logProbability": -1.6746372705625001
      },
      {
        "expression":
          "#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2)))",
        "logProbability": -1.91161641730916
      },
      {
        "expression":
          "#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0)))))))",
        "logProbability": -1.9669656313066537
      },
      {
        "expression":
          "#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4)))",
        "logProbability": -1.9431834903883662
      },
      {
        "expression":
          "#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0)))))",
        "logProbability": -1.798025634116462
      },
      {
        "expression":
          "#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA)))",
        "logProbability": -1.7632153246752504
      },
      {
        "expression":
          "#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0)))))",
        "logProbability": -1.91243598600733
      },
      {
        "expression": "#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0)))",
        "logProbability": -1.7852029649021897
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 5 (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 3 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 5 (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 4 logo_UL (logo_DIVA logo_UA 3) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 3 $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_MULA logo_epsA 8) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 8 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_UL 2) (logo_DIVA logo_UA 6) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 6 logo_ZL (logo_DIVA logo_UA 5) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_UL 2) (logo_DIVA logo_UA 6) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 logo_UL (logo_DIVA logo_UA 7) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_DIVL logo_UL 2) (logo_DIVA logo_UA 8) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_DIVL logo_UL 2) (logo_MULA logo_epsA 5) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 2 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 2 (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 2 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_UA $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 2 logo_epsL (logo_DIVA logo_UA 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 2 logo_epsL (logo_DIVA logo_UA 4) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_UA $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_FWRT logo_epsL (logo_DIVA logo_UA 3) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 4 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_ZL (logo_DIVA logo_epsA 6) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 7 (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 4 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (logo_MULA logo_epsA 7) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_ZL (logo_DIVA logo_epsA 3) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 7 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 6) (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 7 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 5 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 3 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_ZL (logo_DIVA logo_epsA 4) (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 3 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 7 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 8 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 8 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_DIVA logo_UA 8) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 0 (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) logo_IFTY (#(lambda (logo_forLoop logo_IFTY (lambda (lambda (logo_FWRT (logo_MULL logo_epsL $1) (logo_MULA logo_epsA $2) $0))))) 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_UL 4) (logo_DIVA (logo_ADDA logo_UA logo_UA) 5) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_UL 4) (logo_MULA (logo_ADDA logo_epsA logo_epsA) 8) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_UL 4) (logo_MULA (logo_DIVA logo_UA 9) 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_UL 4) (logo_DIVA (logo_MULA logo_UA 4) 9) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 0 (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) logo_IFTY (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 0 (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 0 (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 0 $0))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL $0)))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 3 logo_UL (logo_DIVA logo_UA 4) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 2 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 5 (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 8) (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 2 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 2 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL 3) logo_epsA $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY (logo_MULL logo_epsL 3) logo_epsA $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) (logo_MULL logo_epsL 3) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 3 (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 3 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) (logo_MULL logo_epsL 4) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) (logo_DIVL logo_UL 5) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL 5) logo_epsA $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_DIVL logo_UL 4) logo_epsA $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) (logo_MULL logo_epsL 5) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) (logo_DIVL logo_UL 4) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 6 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) (logo_MULL logo_epsL 6) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 6 (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 6 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) (logo_MULL logo_epsL $2) $0)) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) (logo_MULL logo_epsL $2) $0)) $0))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 3 4 (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 3 7 (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 1 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY logo_epsL logo_epsA (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 1 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL 3) logo_epsA (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 3 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY (logo_MULL logo_epsL 3) logo_epsA (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 3 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) logo_epsL (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_UL logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) logo_epsL (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_FWRT logo_UL logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) (logo_DIVL logo_epsL 2) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 3 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_DIVL logo_epsL 2) logo_UA $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY logo_epsL logo_epsA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_GETSET (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) logo_epsL (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) logo_epsL (logo_GETSET (lambda (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0)) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (logo_GETSET (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 2 $0)) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 2 $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (logo_GETSET (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_GETSET (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 3 4 (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 3 $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 6 7 (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 6 4 (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (logo_FWRT logo_ZL (logo_DIVA logo_UA 7) (logo_GETSET (lambda (logo_FWRT logo_UL logo_epsA $0)) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 7 7 (lambda (logo_FWRT logo_UL logo_epsA $0)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 4 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 4 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) 2 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 2 $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 3 $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "turtle", "arguments": [] },
          { "constructor": "turtle", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) $1 $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (logo_forLoop 5 (lambda (lambda (logo_forLoop 8 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $3 $0))) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}