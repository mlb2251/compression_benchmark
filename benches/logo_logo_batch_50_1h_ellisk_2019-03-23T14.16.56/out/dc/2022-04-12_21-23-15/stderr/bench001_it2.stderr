Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 145421
Constructed version spaces and coalesced candidates in 2.23806m.
Timing point -1 right before normalizing: 2.48008m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 2.48019m.
Timing Comparison Point A (vspace+beam) (millis): 148811
Rewrote topK in 2.01674m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 2.01674m.
sanity check for timing comparison, should be same as comparison point: 4.49694m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 269816
Initial score: -1064.954473
Initial language score: 0.000000
Initial joint score: -1064.954473 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.3392s.
Best MDL score: -1061.985101 with (lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0))))))))
Scored candidates with language and grammar in 3.0121s.
Best joint score: -1061.985101 with (lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0))))))))
Timing point 3 (all scoring): 6.37257s.
Improved score to -1061.985101 (dScore=2.969372) w/ new primitive
	#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) : int -> int -> (turtle -> turtle) -> turtle -> turtle
rewrote all of the frontiers in 1.44559m.
Timing point 4 (rewrite final frontiers): 1.44559m.
Completed one step of memory consolidation in 6.04903m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 3 4 (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 3 4 (lambda (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 3 $0)) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 6 7 (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA $0)) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 7 7 (lambda (logo_FWRT logo_UL logo_epsA $0)) $0))
Total number of candidates: 94571
Constructed version spaces and coalesced candidates in 44.2143s.
Timing point -1 right before normalizing: 53.3648s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 53.3663s.
Timing Comparison Point A (vspace+beam) (millis): 53366
Rewrote topK in 45.5833s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 45.5837s.
sanity check for timing comparison, should be same as comparison point: 1.64917m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 98950
Initial score: -1060.804978
Initial language score: 0.000000
Initial joint score: -1060.804978 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 2.83454s.
Best MDL score: -1050.025320 with (lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0)))))
Scored candidates with language and grammar in 2.866s.
Best joint score: -1050.025320 with (lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0)))))
Timing point 3 (all scoring): 5.72181s.
Improved score to -1050.025320 (dScore=10.779658) w/ new primitive
	#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) : int -> turtle -> turtle
rewrote all of the frontiers in 31.6544s.
Timing point 4 (rewrite final frontiers): 31.6545s.
Completed one step of memory consolidation in 2.2725m.
New primitive is used 5 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))
  (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) 1 $0))
  (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) 2 $0))
  (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) 3 $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (logo_forLoop 4 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $2 $0))))) $1 $0))) $0))
Total number of candidates: 93350
Constructed version spaces and coalesced candidates in 44.365s.
Timing point -1 right before normalizing: 51.5978s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 51.5994s.
Timing Comparison Point A (vspace+beam) (millis): 51599
Rewrote topK in 43.1349s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 43.1352s.
sanity check for timing comparison, should be same as comparison point: 1.57891m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 94734
Initial score: -1048.835430
Initial language score: 0.000000
Initial joint score: -1048.835430 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.12047s.
Best MDL score: -1042.846819 with (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))
Scored candidates with language and grammar in 3.17149s.
Best joint score: -1042.846819 with (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))
Timing point 3 (all scoring): 6.30817s.
Improved score to -1042.846819 (dScore=5.988611) w/ new primitive
	#(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))) : turtle -> turtle
rewrote all of the frontiers in 29.9548s.
Timing point 4 (rewrite final frontiers): 29.9549s.
Completed one step of memory consolidation in 2.18354m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))) $0))
  (lambda (#(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))) $0))
  (lambda (logo_forLoop 4 (lambda (lambda (#(lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_epsL $0)))) $0))) $0))
Total number of candidates: 86854
Constructed version spaces and coalesced candidates in 42.8548s.
Timing point -1 right before normalizing: 49.4693s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 49.4706s.
Timing Comparison Point A (vspace+beam) (millis): 49470
Rewrote topK in 44.766s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 44.7664s.
sanity check for timing comparison, should be same as comparison point: 1.57062m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 94236
Initial score: -1041.786510
Initial language score: 0.000000
Initial joint score: -1041.786510 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.08681s.
Best MDL score: -1037.639916 with (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0)))
Scored candidates with language and grammar in 3.02089s.
Best joint score: -1037.639916 with (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0)))
Timing point 3 (all scoring): 6.12983s.
Improved score to -1037.639916 (dScore=4.146594) w/ new primitive
	#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) : int -> turtle -> turtle
rewrote all of the frontiers in 24.6911s.
Timing point 4 (rewrite final frontiers): 24.6911s.
Completed one step of memory consolidation in 2.08456m.
New primitive is used 6 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 5 logo_ZL logo_epsA (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 3 $0)))
  (lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 5 $0))
  (lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 7 $0))
  (lambda (logo_FWRT logo_epsL (logo_DIVA logo_UA 3) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 4 $0)))
  (lambda (logo_forLoop 4 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 4 $0)))) $0))
  (lambda (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 4 $0))
Total number of candidates: 81231
Constructed version spaces and coalesced candidates in 32.6074s.
Timing point -1 right before normalizing: 39.5235s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 39.5283s.
Timing Comparison Point A (vspace+beam) (millis): 39528
Rewrote topK in 37.3169s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 37.3174s.
sanity check for timing comparison, should be same as comparison point: 1.28076m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 76845
Initial score: -1036.593312
Initial language score: 0.000000
Initial joint score: -1036.593312 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.62592s.
Best MDL score: -1032.689877 with (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0))
Scored candidates with language and grammar in 3.78559s.
Best joint score: -1032.689877 with (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0))
Timing point 3 (all scoring): 7.43516s.
Improved score to -1032.689877 (dScore=3.903435) w/ new primitive
	#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) : turtle -> turtle
rewrote all of the frontiers in 21.6934s.
Timing point 4 (rewrite final frontiers): 21.6934s.
Completed one step of memory consolidation in 1.76655m.
New primitive is used 7 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 2 (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0)))
  (lambda (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))
  (lambda (logo_forLoop 5 (lambda (lambda (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 0 $0))))) $0))
  (lambda (logo_forLoop 3 (lambda (lambda (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $0 (logo_DIVA logo_epsA 2))) logo_ZL (#(lambda (logo_forLoop $0 (lambda (lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) $1 $0))))) 2 $0))))
  (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))))
  (lambda (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))))
  (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0)))))
Total number of candidates: 77739
Constructed version spaces and coalesced candidates in 31.5554s.
Timing point -1 right before normalizing: 37.3678s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 37.3695s.
Timing Comparison Point A (vspace+beam) (millis): 37369
Rewrote topK in 36.9091s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 36.9094s.
sanity check for timing comparison, should be same as comparison point: 1.23798m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 74278
Initial score: -1031.778882
Initial language score: 0.000000
Initial joint score: -1031.778882 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.35147s.
Best MDL score: -1029.420111 with (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA)
Scored candidates with language and grammar in 3.24218s.
Best joint score: -1029.420111 with (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA)
Timing point 3 (all scoring): 6.6156s.
Improved score to -1029.420111 (dScore=2.358771) w/ new primitive
	#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) : turtle -> turtle
rewrote all of the frontiers in 23.8004s.
Timing point 4 (rewrite final frontiers): 23.8005s.
Completed one step of memory consolidation in 1.74516m.
New primitive is used 7 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 5 logo_ZL logo_epsA (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)))
  (lambda (logo_forLoop 3 (lambda (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 1 $0)))) $0))
  (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0))))
  (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0))))
  (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0))))
  (lambda (logo_forLoop 5 (lambda (lambda (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) (logo_GETSET (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)) $0)))) $0))
  (lambda (#(lambda (lambda (lambda (logo_forLoop $1 (lambda (lambda (logo_GETSET $2 (logo_FWRT logo_ZL (logo_DIVA logo_UA $4) $0)))))))) 6 7 (lambda (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)) $0))
Total number of candidates: 65809
Constructed version spaces and coalesced candidates in 30.7847s.
Timing point -1 right before normalizing: 36.561s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 36.5642s.
Timing Comparison Point A (vspace+beam) (millis): 36564
Rewrote topK in 27.9896s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 27.9899s.
sanity check for timing comparison, should be same as comparison point: 1.0759m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 64554
Initial score: -1028.990195
Initial language score: 0.000000
Initial joint score: -1028.990195 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.38087s.
Best MDL score: -1026.624293 with (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA))
Scored candidates with language and grammar in 3.76578s.
Best joint score: -1026.624293 with (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA))
Timing point 3 (all scoring): 7.16986s.
Improved score to -1026.624293 (dScore=2.365902) w/ new primitive
	#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) : int -> turtle -> turtle
rewrote all of the frontiers in 18.099s.
Timing point 4 (rewrite final frontiers): 18.0991s.
Completed one step of memory consolidation in 1.49734m.
New primitive is used 5 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 5 (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_UL (logo_DIVA logo_UA $0))) 3 $0)))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 8 (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_UL 2) (logo_DIVA logo_UA 6) $0)))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 7 (#(lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) (logo_MULL logo_epsL $0) (logo_SUBA logo_ZA logo_epsA))) 4 $0)))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 5 (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 3 $0)))
  (lambda (#(lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) $0 logo_ZL logo_epsA)) 5 (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)))
Total number of candidates: 63070
Constructed version spaces and coalesced candidates in 26.4711s.
Timing point -1 right before normalizing: 31.8506s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 31.8539s.
Timing Comparison Point A (vspace+beam) (millis): 31853
Rewrote topK in 30.1443s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 30.1448s.
sanity check for timing comparison, should be same as comparison point: 1.03331m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 61998
Initial score: -1026.178636
Initial language score: 0.000000
Initial joint score: -1026.178636 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.84411s.
Best MDL score: -1025.823309 with (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0))))
Scored candidates with language and grammar in 4.15144s.
Best joint score: -1025.823309 with (lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0))))
Timing point 3 (all scoring): 8.0198s.
Improved score to -1025.823309 (dScore=0.355327) w/ new primitive
	#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) : tlength -> turtle -> turtle
rewrote all of the frontiers in 18.0096s.
Timing point 4 (rewrite final frontiers): 18.0096s.
Completed one step of memory consolidation in 1.46752m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) logo_epsL (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0)))
  (lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) logo_epsL (#(#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) logo_epsL logo_epsA) $0)))
  (lambda (logo_forLoop 3 (lambda (lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) (logo_DIVL logo_epsL 2) $0))) $0))
  (lambda (#(lambda (lambda (#(#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) logo_IFTY) $1 logo_UA (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) logo_epsL (logo_GETSET (lambda (#(lambda (logo_forLoop 7 (lambda (lambda (#(lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_FWRT $3 $2 $0))))))) 7 $2 logo_epsA $0))))) logo_epsL $0)) (#(lambda (#(lambda (logo_FWRT (logo_MULL logo_UL $0) (logo_DIVA logo_UA 4))) 1 $0)) $0))))
Total number of candidates: 62052
Constructed version spaces and coalesced candidates in 26.0159s.
Timing point -1 right before normalizing: 31.0516s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 31.0533s.
Timing Comparison Point A (vspace+beam) (millis): 31053
Rewrote topK in 30.1042s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 30.1046s.
sanity check for timing comparison, should be same as comparison point: 1.0193m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 61157
Initial score: -1025.540218
Initial language score: 0.000000
Initial joint score: -1025.540218 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 3.56096s.
Best MDL score: -1027.488084 with (lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_GETSET $3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) $0))))
No improvement possible with MDL.
Scored candidates with language and grammar in 3.62641s.
Best joint score: -1027.488084 with (lambda (lambda (lambda (logo_forLoop $2 (lambda (lambda (logo_GETSET $3 (#(logo_PT (lambda (logo_FWRT logo_UL logo_ZA $0))) $0)))) $0))))
Timing point 3 (all scoring): 7.21141s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.13966m.
completed ocaml compression in 20.207m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/logo_logo_batch_50_1h_ellisk_2019-03-23T14.16.56/bench001_it2.json"
	User time (seconds): 162.46
	System time (seconds): 3.93
	Percent of CPU this job got: 13%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 20:12.51
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 1464568
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 2849767
	Voluntary context switches: 2284
	Involuntary context switches: 17399
	Swaps: 0
	File system inputs: 0
	File system outputs: 120
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
