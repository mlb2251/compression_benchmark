{
  "DSL": {
    "logVariable": -0.45729642242554913,
    "productions": [
      {
        "expression":
          "#(lambda (power $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) 1. 1.)))",
        "logProbability": -2.6255330865089035
      },
      { "expression": "map", "logProbability": -1.3682730007668118 },
      { "expression": "zip", "logProbability": -1.4688438697391923 },
      { "expression": "cons", "logProbability": -1.484906764060296 },
      { "expression": "empty", "logProbability": -1.4850086757563767 },
      { "expression": "cdr", "logProbability": -1.4853010604014547 },
      { "expression": "*.", "logProbability": -1.7068745142074833 },
      { "expression": "/.", "logProbability": -2.288097048928017 },
      { "expression": "pi", "logProbability": -2.471373496550829 },
      { "expression": "-.", "logProbability": -2.4713742454332563 },
      { "expression": "1.", "logProbability": -2.7694365803583674 },
      { "expression": "+.", "logProbability": -2.624584259749105 },
      { "expression": "power", "logProbability": -2.8078366886443233 },
      { "expression": "0.", "logProbability": -2.712536300883534 },
      { "expression": "fold", "logProbability": -2.9952562394525333 },
      { "expression": "car", "logProbability": -2.9952562394525333 },
      {
        "expression": "#(lambda (map (lambda (*. $1 $0))))",
        "logProbability": -1.0017265179732449
      },
      {
        "expression":
          "#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0)))))",
        "logProbability": -1.1523501089410568
      },
      {
        "expression":
          "#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "logProbability": -1.3195506969609827
      },
      {
        "expression": "#(lambda (/. 1. $0))",
        "logProbability": -2.1779083711265397
      },
      {
        "expression": "#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.))))",
        "logProbability": -2.520905735417069
      },
      {
        "expression": "#(lambda (fold $0 0. (lambda (lambda (+. $0 $1)))))",
        "logProbability": -2.4713742454332572
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "logProbability": -2.513023666751082
      },
      {
        "expression": "#(lambda (lambda (/. (*. $1 $1) (+. $0 $0))))",
        "logProbability": -2.5529780580486174
      },
      {
        "expression": "#(lambda (lambda (/. (+. $0 $0) $1)))",
        "logProbability": -2.615677795247441
      },
      {
        "expression":
          "#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3))))))",
        "logProbability": -2.6255249252605153
      },
      {
        "expression": "#(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "logProbability": -2.6256098844472193
      },
      {
        "expression":
          "#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0)))))",
        "logProbability": -2.6257901450905337
      },
      {
        "expression":
          "#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0)))))",
        "logProbability": -2.6615565284065257
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $0 (map (lambda $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) (map (lambda $0) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) (map (lambda $0) $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (map (lambda $0) (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (map (lambda (*. $1 $0)))) 1. (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) (cons (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) $0) empty)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (power $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) 1. 1.))) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0) (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) 1. 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (power $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) 1. 1.))) (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) 1. 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0) (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (#(lambda (/. 1. $0)) pi) pi)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) 1. 1.))) (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (power $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) 1. 1.))) (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $0 $1) (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 (#(lambda (/. 1. $0)) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $0 $1) (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 (#(lambda (/. 1. $0)) $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $0 $1) (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (#(lambda (/. 1. $0)) $0) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (#(lambda (map (lambda (*. $1 $0)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (#(lambda (map (lambda (*. $1 $0)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (#(lambda (map (lambda (*. $1 $0)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (/. 1. $0)) (*. $0 (#(lambda (/. 1. $0)) $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (/. 1. $0)) (*. $0 (#(lambda (/. 1. $0)) $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $1 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (-. pi (#(lambda (/. 1. $0)) pi)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (-. pi (/. 1. pi)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. (+. $0 $0) (-. pi (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (-. pi (#(lambda (/. 1. $0)) pi)) (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $0 $0) (-. pi (#(lambda (/. 1. $0)) pi))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (*. $1 $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $1 $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. $1 (#(lambda (lambda (/. (+. $0 $0) $1))) $1 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (*. 1. (#(lambda (/. 1. $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $0 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 1.))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) 1. $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (/. $0 $0) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $0) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          },
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (#(lambda (map (lambda (*. $1 $0)))) 0. (car $0)) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (#(lambda (map (lambda (*. $1 $0)))) 0. (car $0)) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (fold $0 (map (lambda 0.) (car $0)) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $0 $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) (#(lambda (/. 1. $0)) $1) (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda (/. $0 $2)) (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) (#(lambda (/. 1. $0)) $1) (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) (/. 1. $1) (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) (#(lambda (/. 1. $0)) $1) (map (lambda $0) (#(lambda (fold (cdr $0) (car $0) (lambda (lambda (#(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1)))))) $1 $0))))) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (map (lambda $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (map (lambda $0) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (map (lambda $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (map (lambda $0) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      {
                        "constructor": "->",
                        "arguments": [
                          { "constructor": "real", "arguments": [] },
                          { "constructor": "real", "arguments": [] }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (/. $0 (#(lambda (/. 1. $0)) $3)) (*. $1 $2))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (/. $0 (#(lambda (/. 1. $0)) $1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 $2 $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 $2 $1 (*. $0 1.))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 $2 (*. $1 1.) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 $2 (*. 1. $1) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 (*. $2 1.) $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $1 $0)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $1 $0)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $1 (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0) (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $1 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) (*. $1 $0) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $1 $0)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $1 $0)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $1 $0)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (/. 1. $0)) (*. $0 (#(lambda (/. 1. $0)) $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 $2 $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 $2 $1 (*. $0 1.))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 $2 (*. $1 1.) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 $2 (*. 1. $1) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. (*. $0 $2) (+. (*. $0 (#(lambda (lambda (/. (*. $0 $1) (+. 1. 1.)))) $0 $1)) $3)))))) $3 (*. $2 1.) $1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (/. $0 (#(lambda (/. 1. $0)) $1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 pi))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. $0 (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $0 pi)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. pi (#(lambda (lambda (/. (*. $1 $1) (+. $0 $0)))) $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (*. 1. pi)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. pi (#(lambda (lambda (/. (+. $0 $0) $1))) $0 1.)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0))))) $1 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0))))) $2 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0))))) $1 $2 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0))))) $2 $1 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (*. (/. $1 (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0)) $2))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0))))) $1 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0))))) $2 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0))))) $1 $2 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0))))) $2 $1 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (*. (/. $1 (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) $0)) $2))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $1 (-. 0. $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. (-. 0. $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (-. 0. (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (-. 0. (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 (-. 0. $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. 1. (*. $0 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. 1. (*. $0 $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (*. 1. (#(lambda (/. 1. $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (*. 1. (#(lambda (/. 1. $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (/. 1. $0)) (*. $0 (#(lambda (/. 1. $0)) $1)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (#(lambda (map (lambda (*. $1 $0)))) 1. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0) 1.))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. 1. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (#(lambda (map (lambda (*. $1 $0)))) 1. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0) 1.))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. 1. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (#(lambda (/. 1. $0)) $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $0 (lambda (lambda (#(lambda (/. 1. $0)) $0)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $0 (lambda (lambda (#(lambda (/. 1. $0)) $1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. 1. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (#(lambda (/. 1. $0)) $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (*. $0 (*. $0 pi)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. $0 (*. pi $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 $0) pi))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 pi) $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. pi $0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (+. (*. $0 $0) (*. $1 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) (cons $0 (cons $1 empty)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) (cons $1 (cons $0 empty)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. (*. $1 $1) $0))))) (cons $0 (cons $1 (#(lambda (map (lambda (*. $1 $0)))) $0 empty))))))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}