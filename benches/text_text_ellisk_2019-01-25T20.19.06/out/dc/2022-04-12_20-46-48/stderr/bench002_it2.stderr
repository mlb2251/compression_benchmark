Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 51102
Constructed version spaces and coalesced candidates in 29.7685s.
Timing point -1 right before normalizing: 33.4284s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 33.4398s.
Timing Comparison Point A (vspace+beam) (millis): 33439
Rewrote topK in 25.5637s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 25.5639s.
sanity check for timing comparison, should be same as comparison point: 59.0038s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 59003
Initial score: -498.211309
Initial language score: 0.000000
Initial joint score: -498.211309 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.19735s.
Best MDL score: -477.416893 with (lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $1 $2) $3 $0)))))))
Scored candidates with language and grammar in 1.18531s.
Best joint score: -477.416893 with (lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $1 $2) $3 $0)))))))
Timing point 3 (all scoring): 2.40073s.
Improved score to -477.416893 (dScore=20.794416) w/ new primitive
	#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $1 $2) $3 $0))))))) : list(char) -> char -> list(char)
rewrote all of the frontiers in 18.6654s.
Timing point 4 (rewrite final frontiers): 18.6654s.
Completed one step of memory consolidation in 1.33468m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $1 $2) $3 $0))))))) $0 '.'))
  (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $1 $2) $3 $0))))))) $0 SPACE))
  (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $1 $2) $3 $0))))))) $0 LPAREN))
Total number of candidates: 44818
Constructed version spaces and coalesced candidates in 27.2323s.
Timing point -1 right before normalizing: 30.5998s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 30.6037s.
Timing Comparison Point A (vspace+beam) (millis): 30603
Rewrote topK in 23.954s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 23.9544s.
sanity check for timing comparison, should be same as comparison point: 54.5581s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 54558
Initial score: -477.622798
Initial language score: 0.000000
Initial joint score: -477.622798 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.30617s.
Best MDL score: -455.176977 with (lambda (lambda (fold $1 $1 (lambda (lambda (fold $0 $0 (lambda (lambda (if (char-eq? $1 $4) (cdr $0) $0)))))))))
Scored candidates with language and grammar in 1.20641s.
Best joint score: -455.176977 with (lambda (lambda (fold $1 $1 (lambda (lambda (fold $0 $0 (lambda (lambda (if (char-eq? $1 $4) (cdr $0) $0)))))))))
Timing point 3 (all scoring): 2.52744s.
Improved score to -455.176977 (dScore=22.445821) w/ new primitive
	#(lambda (lambda (fold $1 $1 (lambda (lambda (fold $0 $0 (lambda (lambda (if (char-eq? $1 $4) (cdr $0) $0))))))))) : list(char) -> char -> list(char)
rewrote all of the frontiers in 17.5105s.
Timing point 4 (rewrite final frontiers): 17.5106s.
Completed one step of memory consolidation in 1.24342m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (fold $0 $0 (lambda (lambda (if (char-eq? $1 $4) (cdr $0) $0))))))))) $0 ','))
  (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (fold $0 $0 (lambda (lambda (if (char-eq? $1 $4) (cdr $0) $0))))))))) $0 SPACE))
Total number of candidates: 36796
Constructed version spaces and coalesced candidates in 23.4205s.
Timing point -1 right before normalizing: 26.1399s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 26.1568s.
Timing Comparison Point A (vspace+beam) (millis): 26156
Rewrote topK in 19.3981s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 19.3984s.
sanity check for timing comparison, should be same as comparison point: 45.5552s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 45555
Initial score: -455.381394
Initial language score: 0.000000
Initial joint score: -455.381394 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.21265s.
Best MDL score: -441.050508 with (lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $1 $2) empty (cons $1 $0)))))))
Scored candidates with language and grammar in 1.22734s.
Best joint score: -441.050508 with (lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $1 $2) empty (cons $1 $0)))))))
Timing point 3 (all scoring): 2.45897s.
Improved score to -441.050508 (dScore=14.330887) w/ new primitive
	#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $1 $2) empty (cons $1 $0))))))) : list(char) -> char -> list(char)
rewrote all of the frontiers in 14.7146s.
Timing point 4 (rewrite final frontiers): 14.7146s.
Completed one step of memory consolidation in 1.04569m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $1 $2) empty (cons $1 $0))))))) $0 ','))
  (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $1 $2) empty (cons $1 $0))))))) $0 LPAREN))
Total number of candidates: 30054
Constructed version spaces and coalesced candidates in 23.4361s.
Timing point -1 right before normalizing: 25.9364s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 25.9389s.
Timing Comparison Point A (vspace+beam) (millis): 25938
Rewrote topK in 19.5579s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 19.5582s.
sanity check for timing comparison, should be same as comparison point: 45.4971s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 45497
Initial score: -441.111231
Initial language score: 0.000000
Initial joint score: -441.111231 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.25524s.
Best MDL score: -442.045633 with (lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1))))
No improvement possible with MDL.
Scored candidates with language and grammar in 1.27747s.
Best joint score: -442.045633 with (lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1))))
Timing point 3 (all scoring): 2.54027s.
No improvement possible with joint score.
Completed one step of memory consolidation in 48.0381s.
completed ocaml compression in 4.42459m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-25T20.19.06/bench002_it2.json"
	User time (seconds): 29.42
	System time (seconds): 1.31
	Percent of CPU this job got: 11%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:25.56
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 727892
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1150033
	Voluntary context switches: 564
	Involuntary context switches: 3090
	Swaps: 0
	File system inputs: 0
	File system outputs: 48
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
