{
  "DSL": {
    "logVariable": -0.6395673261958219,
    "productions": [
      {
        "expression":
          "#(lambda (reverseHand (moveHand 6 (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) $0))))",
        "logProbability": -1.6198097524699082
      },
      {
        "expression":
          "#(lambda (lambda (lambda (tower_embed (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) $1 $2 $0)) (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $1 $2)))))",
        "logProbability": -1.6198030213598846
      },
      {
        "expression":
          "#(lambda (lambda (tower_embed (lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) $1 $0)) (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $0 $1))))",
        "logProbability": -1.6198030118803972
      },
      {
        "expression":
          "#(lambda (lambda (tower_loopM 4 (lambda (lambda (tower_embed (lambda ($3 $0)) (moveHand 6 $0)))) $1)))",
        "logProbability": -1.6198030588792833
      },
      {
        "expression":
          "#(lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $2 $0)) $0)))))",
        "logProbability": -1.5890313388834305
      },
      { "expression": "4", "logProbability": -0.759705792860637 },
      { "expression": "6", "logProbability": -0.8763222972532514 },
      { "expression": "5", "logProbability": -1.0668975208260507 },
      { "expression": "2", "logProbability": -1.0447441848950119 },
      { "expression": "3", "logProbability": -1.1384695943351568 },
      { "expression": "7", "logProbability": -1.1588754758479012 },
      { "expression": "8", "logProbability": -1.268975243785099 },
      { "expression": "1", "logProbability": -1.2818369385386879 },
      { "expression": "reverseHand", "logProbability": -1.5112620437641202 },
      { "expression": "moveHand", "logProbability": -1.5591783045929901 },
      { "expression": "tower_loopM", "logProbability": -1.5890312628589065 },
      { "expression": "tower_embed", "logProbability": -1.619799176469018 },
      { "expression": "3x1", "logProbability": -1.6515516889518134 },
      { "expression": "1x3", "logProbability": -1.6515516889518134 },
      {
        "expression":
          "#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))))))",
        "logProbability": -1.3243387777433973
      },
      {
        "expression":
          "#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4)",
        "logProbability": -1.320905902359367
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1)))",
        "logProbability": -1.5509480991543905
      },
      {
        "expression":
          "#(lambda (tower_loopM 6 (lambda ($1 (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))))))",
        "logProbability": -1.6496145071569903
      },
      {
        "expression":
          "#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0)))))))",
        "logProbability": -1.6062885729406702
      },
      {
        "expression":
          "#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3)))))))",
        "logProbability": -1.5505610544000161
      },
      {
        "expression":
          "#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0)))))",
        "logProbability": -1.5591748950024908
      },
      {
        "expression":
          "#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2))))))",
        "logProbability": -1.6843415117748042
      },
      {
        "expression":
          "#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2)))",
        "logProbability": -1.5494680450627225
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 6 1 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 8 1 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) 1 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 7 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (3x1 (moveHand 7 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (moveHand 7 (3x1 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 3 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 5 (lambda (lambda (moveHand 3 (1x3 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 2 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 6 2 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 6 2 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 4 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 4 3 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 8 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 8 3 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 4 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 4 4 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 6 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 6 4 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) 4 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 2 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 4 5 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 4 5 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (tower_loopM 6 (lambda ($1 (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2)))))) (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 4 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 4 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 6 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 6 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 4 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 4 7 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 6 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 6 7 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) 7 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (tower_loopM 6 (lambda ($1 (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2)))))) (lambda (lambda (tower_embed (lambda ($2 $0)) $0))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (tower_loopM 6 (lambda ($1 (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2)))))) (lambda (lambda (tower_embed (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) $0)) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_embed (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) $1 $2 $0)) (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $1 $2))))) $0 4 8))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_embed (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 8 4 $0)) (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 2 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_embed (lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) $1 $0)) (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $0 $1)))) $0 4))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_embed (lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) 4 $0)) (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 2 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_embed (lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) $1 $0)) (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $0 $1)))) $0 5))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_embed (lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0))))))) 5 $0)) (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 2 5 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_embed (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) $1 $2 $0)) (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $1 $2))))) $0 6 6))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_embed (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 6 6 $0)) (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 6 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 5 2 3 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 5 2 3 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 6 2 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 6 2 4 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM 4 (lambda (lambda (tower_embed (lambda ($3 $0)) (moveHand 6 $0)))) $1))) $0 (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 4 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (moveHand 6 (tower_embed (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 4 $0)) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (moveHand 6 (tower_embed (lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 4 1 $0)) $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM 4 (lambda (lambda (tower_embed (lambda ($3 $0)) (moveHand 6 $0)))) $1))) $0 (lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 4 1 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (moveHand 6 (tower_embed (lambda (reverseHand (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 1 2 $2 $0))) $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 3 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 3 4 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 4 2 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 4 2 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 4 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 4 6 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 2 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 2 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 6 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 8 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 8 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 4 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 6 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 6 (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 4 (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 6 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 6 (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 4 $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (reverseHand (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (reverseHand (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) (reverseHand $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $2 $0)) $0))))) 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 1 (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (tower_embed (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) $0)) (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $2 $0)) $0))))) 7 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 7 (lambda (lambda (tower_embed (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4 2 $2 $0)) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) (reverseHand $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) (#(lambda (reverseHand (moveHand 6 (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) $0)))) (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) (reverseHand (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (tower_embed (lambda (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) $0)) (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (reverseHand (#(lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $2 $0)) $0))))) 7 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 7 (lambda (lambda (tower_embed (lambda (reverseHand (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 2 $2 $0))) $0))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 4 (#(lambda (reverseHand (moveHand 6 (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) $0)))) (reverseHand (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 4 (reverseHand (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) $0))))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 3 2 (reverseHand (moveHand 5 (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 4 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 3 2 (reverseHand (moveHand 5 (#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4) 8 1 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}