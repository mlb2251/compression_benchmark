{
  "DSL": {
    "logVariable": -0.4584783044709244,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $1))))",
        "logProbability": -0.8394537876867236
      },
      {
        "expression":
          "#(lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $1)))))",
        "logProbability": -0.839453787579683
      },
      {
        "expression":
          "#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))))))",
        "logProbability": -0.6676035306107826
      },
      { "expression": "6", "logProbability": -0.3968813645489848 },
      { "expression": "4", "logProbability": -0.5050949491533041 },
      { "expression": "5", "logProbability": -0.5050949491935284 },
      { "expression": "3", "logProbability": -0.5947071078816317 },
      { "expression": "2", "logProbability": -0.5947071076866006 },
      { "expression": "7", "logProbability": -0.5947071078832153 },
      { "expression": "8", "logProbability": -0.5947071078832153 },
      { "expression": "1", "logProbability": -0.6592456290207864 },
      { "expression": "reverseHand", "logProbability": -0.8685200557722874 },
      { "expression": "moveHand", "logProbability": -0.7788291654834705 },
      { "expression": "tower_loopM", "logProbability": -0.7788291655298223 },
      { "expression": "1x3", "logProbability": -0.8712024856002878 },
      { "expression": "3x1", "logProbability": -0.8086821286694605 },
      { "expression": "tower_embed", "logProbability": -0.9039923085105181 }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 6 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $1)))) $0 6))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 8 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $1)))) $0 8))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $1))))) $0 5))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $1))))) $0 7))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 7 (lambda (lambda (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (3x1 (moveHand 7 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (moveHand 7 (3x1 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 3 $0)))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 5 (lambda (lambda (moveHand 3 (1x3 $0)))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (3x1 (tower_loopM 6 (lambda (lambda (reverseHand (moveHand 6 (tower_loopM $1 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (3x1 (reverseHand (tower_loopM 6 (lambda (lambda (reverseHand (moveHand 6 (tower_loopM $1 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 3 4 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 4 (lambda (lambda (reverseHand (moveHand 3 (3x1 (moveHand 6 (3x1 (moveHand 6 (3x1 $0))))))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 4 2 $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (tower_loopM 2 (lambda (lambda (reverseHand (moveHand 3 (3x1 (tower_loopM 3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 4 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 2 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 5 8 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 4 $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "tower", "arguments": [] },
          { "constructor": "tower", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 6 6 $0))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}