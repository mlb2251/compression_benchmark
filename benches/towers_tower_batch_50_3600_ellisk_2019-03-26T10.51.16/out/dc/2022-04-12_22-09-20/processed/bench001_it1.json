{
    "bench_group": "towers_tower_batch_50_3600_ellisk_2019-03-26T10.51.16",
    "bench": "bench001_it1",
    "mode": "dreamcoder",
    "run": "benches/towers_tower_batch_50_3600_ellisk_2019-03-26T10.51.16/out/dc/2022-04-12_22-09-20",
    "metrics": {
        "time_binary_seconds": 1025.4,
        "time_per_inv_with_rewrite": 141363.8,
        "time_per_inv_no_rewrite": 81887.8,
        "mem_peak_kb": 1237692,
        "compression_ratio": 1.3474278866729437,
        "absolute_compression": 16236
    },
    "num_inventions": 5,
    "inventions": [
        {
            "name": "fn_0",
            "stitch_uncanonical": "(fn_0 #1 (lam (reverseHand $0)) #0)",
            "stitch_canonical": "(fn_0 #0 (lam (reverseHand $0)) #1)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) $1)))"
        },
        {
            "name": "fn_1",
            "stitch_uncanonical": "(fn_0 #1 (lam (1x3 (reverseHand $0))) #0)",
            "stitch_canonical": "(fn_0 #0 (lam (1x3 (reverseHand $0))) #1)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1)))"
        },
        {
            "name": "fn_2",
            "stitch_uncanonical": "(tower_loopM #2 (lam (lam (fn_0 (moveHand #0 $0) (lam (reverseHand $0)) #1))))",
            "stitch_canonical": "(tower_loopM #0 (lam (lam (fn_0 (moveHand #1 $0) (lam (reverseHand $0)) #2))))",
            "dreamcoder": "#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3)))))))"
        },
        {
            "name": "fn_3",
            "stitch_uncanonical": "(fn_2 4)",
            "stitch_canonical": "(fn_2 4)",
            "dreamcoder": "#(#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $4 $0) (lambda (reverseHand $0)) $3))))))) 4)"
        },
        {
            "name": "fn_4",
            "stitch_uncanonical": "(tower_loopM #0 (lam (lam (fn_1 5 (reverseHand (moveHand 4 $0))))))",
            "stitch_canonical": "(tower_loopM #0 (lam (lam (fn_1 5 (reverseHand (moveHand 4 $0))))))",
            "dreamcoder": "#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))) $1))) 5 (reverseHand (moveHand 4 $0)))))))"
        }
    ]
}