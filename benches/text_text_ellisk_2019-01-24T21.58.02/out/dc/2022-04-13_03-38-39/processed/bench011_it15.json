{
    "bench_group": "text_text_ellisk_2019-01-24T21.58.02",
    "bench": "bench011_it15",
    "mode": "dreamcoder",
    "run": "benches/text_text_ellisk_2019-01-24T21.58.02/out/dc/2022-04-13_03-38-39",
    "metrics": {
        "time_binary_seconds": 223.27,
        "time_per_inv_with_rewrite": 90270.0,
        "time_per_inv_no_rewrite": 60490.0,
        "mem_peak_kb": 1691108,
        "compression_ratio": 1.0082069616974596,
        "absolute_compression": 808
    },
    "num_inventions": 1,
    "inventions": [
        {
            "name": "fn_0",
            "stitch_uncanonical": "(fn_17 (cons #0 #1) #0)",
            "stitch_canonical": "(fn_17 (cons #0 #1) #0)",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) (#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 (length (cdr $0))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (map (lambda $1) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $2 $1)) $2) $2))))) (#(lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) empty (cons LPAREN $0) RPAREN)) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0)) $0 '-' LPAREN))) (cons $1 $0) $1)))"
        }
    ]
}