Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 14318
Constructed version spaces and coalesced candidates in 5.94127s.
Timing point -1 right before normalizing: 6.80706s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 6.81054s.
Timing Comparison Point A (vspace+beam) (millis): 6810
Rewrote topK in 5.75044s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 5.75072s.
sanity check for timing comparison, should be same as comparison point: 12.5613s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 12561
Initial score: -281.713227
Initial language score: 0.000000
Initial joint score: -281.713227 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 752.163ms.
Best MDL score: -269.372505 with (lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0)))))))
Scored candidates with language and grammar in 552.767ms.
Best joint score: -269.372505 with (lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0)))))))
Timing point 3 (all scoring): 1.31029s.
Improved score to -269.372505 (dScore=12.340722) w/ new primitive
	#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) : list(char) -> char -> list(char)
rewrote all of the frontiers in 4.87415s.
Timing point 4 (rewrite final frontiers): 4.87419s.
Completed one step of memory consolidation in 18.7491s.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $0 '.'))
  (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $0 RPAREN))
Total number of candidates: 9287
Constructed version spaces and coalesced candidates in 3.5252s.
Timing point -1 right before normalizing: 4.00615s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 4.0082s.
Timing Comparison Point A (vspace+beam) (millis): 4008
Rewrote topK in 3.10052s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 3.10077s.
sanity check for timing comparison, should be same as comparison point: 7.10899s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 7108
Initial score: -269.390445
Initial language score: 0.000000
Initial joint score: -269.390445 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 545.66ms.
Best MDL score: -266.898551 with (lambda (lambda (map (lambda (if (char-eq? $0 $2) $1 $0)))))
Scored candidates with language and grammar in 532.195ms.
Best joint score: -266.898551 with (lambda (lambda (map (lambda (if (char-eq? $0 $2) $1 $0)))))
Timing point 3 (all scoring): 1.08146s.
Improved score to -266.898551 (dScore=2.491894) w/ new primitive
	#(lambda (lambda (map (lambda (if (char-eq? $0 $2) $1 $0))))) : char -> char -> list(char) -> list(char)
rewrote all of the frontiers in 2.58957s.
Timing point 4 (rewrite final frontiers): 2.58961s.
Completed one step of memory consolidation in 10.7834s.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (map (lambda (if (char-eq? $0 $2) $1 $0))))) ',' LPAREN $0))
  (lambda (#(lambda (lambda (map (lambda (if (char-eq? $0 $2) $1 $0))))) '-' ',' $0))
Total number of candidates: 8478
Constructed version spaces and coalesced candidates in 3.76006s.
Timing point -1 right before normalizing: 4.30806s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 4.31102s.
Timing Comparison Point A (vspace+beam) (millis): 4311
Rewrote topK in 3.29805s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 3.29834s.
sanity check for timing comparison, should be same as comparison point: 7.6096s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 7609
Initial score: -266.903758
Initial language score: 0.000000
Initial joint score: -266.903758 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 592.185ms.
Best MDL score: -266.602610 with (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING)
Scored candidates with language and grammar in 551.686ms.
Best joint score: -266.602610 with (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING)
Timing point 3 (all scoring): 1.14931s.
Improved score to -266.602610 (dScore=0.301147) w/ new primitive
	#(#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING) : list(char) -> list(char)
rewrote all of the frontiers in 2.22682s.
Timing point 4 (rewrite final frontiers): 2.22686s.
Completed one step of memory consolidation in 10.9889s.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING) $0))
  (lambda (#(#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING) $0))
  (lambda (#(#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING) $0))
Total number of candidates: 8441
Constructed version spaces and coalesced candidates in 3.21314s.
Timing point -1 right before normalizing: 3.8321s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 3.83408s.
Timing Comparison Point A (vspace+beam) (millis): 3834
Rewrote topK in 3.22363s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 3.22385s.
sanity check for timing comparison, should be same as comparison point: 7.05795s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 7057
Initial score: -266.604070
Initial language score: 0.000000
Initial joint score: -266.604070 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 607.116ms.
Best MDL score: -267.860665 with (cons SPACE)
No improvement possible with MDL.
Scored candidates with language and grammar in 563.635ms.
Best joint score: -267.860665 with (cons SPACE)
Timing point 3 (all scoring): 1.17594s.
No improvement possible with joint score.
Completed one step of memory consolidation in 8.23479s.
completed ocaml compression in 48.7608s.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-24T21.58.02/bench002_it2.json"
	User time (seconds): 6.95
	System time (seconds): 0.19
	Percent of CPU this job got: 14%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:48.79
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 107148
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 111648
	Voluntary context switches: 359
	Involuntary context switches: 740
	Swaps: 0
	File system inputs: 0
	File system outputs: 32
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
