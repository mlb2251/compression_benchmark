Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 66677
Constructed version spaces and coalesced candidates in 50.3838s.
Timing point -1 right before normalizing: 55.7266s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 55.7315s.
Timing Comparison Point A (vspace+beam) (millis): 55731
Rewrote topK in 25.9634s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 25.9637s.
sanity check for timing comparison, should be same as comparison point: 1.36159m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 81695
Initial score: -991.476049
Initial language score: 0.000000
Initial joint score: -991.476049 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 5.11737s.
Best MDL score: -989.766678 with (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.')))) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1)))
Scored candidates with language and grammar in 5.13099s.
Best joint score: -989.766678 with (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.')))) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1)))
Timing point 3 (all scoring): 10.2742s.
Improved score to -989.766678 (dScore=1.709371) w/ new primitive
	#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.')))) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1))) : list(char) -> char -> list(char)
rewrote all of the frontiers in 12.4722s.
Timing point 4 (rewrite final frontiers): 12.4723s.
Completed one step of memory consolidation in 1.7411m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.')))) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1))) $0 '.'))
  (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.')))) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1))) $0 LPAREN))
  (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.')))) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1))) $0 RPAREN))
  (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.')))) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1))) $0 '-'))
Total number of candidates: 65854
Constructed version spaces and coalesced candidates in 53.8217s.
Timing point -1 right before normalizing: 1.0104m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.01044m.
Timing Comparison Point A (vspace+beam) (millis): 60626
Rewrote topK in 28.4333s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 28.4336s.
sanity check for timing comparison, should be same as comparison point: 1.48433m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 89059
Initial score: -990.082239
Initial language score: 0.000000
Initial joint score: -990.082239 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 6.0482s.
Best MDL score: -992.806098 with (lambda (length (cdr (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1 (lambda (lambda (cdr $0)))))))
No improvement possible with MDL.
Scored candidates with language and grammar in 5.10954s.
Best joint score: -992.806098 with (lambda (length (cdr (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1 (lambda (lambda (cdr $0)))))))
Timing point 3 (all scoring): 11.204s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.67107m.
completed ocaml compression in 3.41241m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-24T21.58.02/bench009_it10.json"
	User time (seconds): 63.75
	System time (seconds): 2.09
	Percent of CPU this job got: 32%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 3:24.88
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 2045060
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 2366107
	Voluntary context switches: 268
	Involuntary context switches: 6508
	Swaps: 0
	File system inputs: 0
	File system outputs: 192
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
