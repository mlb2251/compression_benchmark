Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 73839
Constructed version spaces and coalesced candidates in 21.324s.
Timing point -1 right before normalizing: 25.7514s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 25.7584s.
Timing Comparison Point A (vspace+beam) (millis): 25758
Rewrote topK in 15.9775s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 15.978s.
sanity check for timing comparison, should be same as comparison point: 41.7364s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 41736
Initial score: -1217.529202
Initial language score: 0.000000
Initial joint score: -1217.529202 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 7.50877s.
Best MDL score: -1216.360964 with (- (length (cdr $0)) #(+ 1 (+ 1 1)))
Scored candidates with language and grammar in 7.5959s.
Best joint score: -1216.360964 with (- (length (cdr $0)) #(+ 1 (+ 1 1)))
Timing point 3 (all scoring): 15.1531s.
Improved score to -1216.360964 (dScore=1.168238) w/ new primitive
	#(lambda (- (length (cdr $0)) #(+ 1 (+ 1 1)))) : list(t0) -> int
rewrote all of the frontiers in 6.4035s.
Timing point 4 (rewrite final frontiers): 6.40354s.
Completed one step of memory consolidation in 1.05542m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (#(lambda (- (length (cdr $0)) #(+ 1 (+ 1 1)))) $0)))
  (lambda (#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 (length (cdr $0))))) $0 (range (#(lambda (- (length (cdr $0)) #(+ 1 (+ 1 1)))) $0))))
Total number of candidates: 71325
Constructed version spaces and coalesced candidates in 19.9128s.
Timing point -1 right before normalizing: 23.6531s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 23.66s.
Timing Comparison Point A (vspace+beam) (millis): 23659
Rewrote topK in 16.0826s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 16.0831s.
sanity check for timing comparison, should be same as comparison point: 39.7431s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 39743
Initial score: -1216.490486
Initial language score: 0.000000
Initial joint score: -1216.490486 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 7.5957s.
Best MDL score: -1217.789968 with (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) (#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 (length (cdr $0))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (map (lambda $1) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $2 $1)) $2) $2))))) (#(lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) empty (cons LPAREN $0) RPAREN)) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0)) $0 '-' LPAREN))) (#(lambda (lambda (map (lambda (if (char-eq? $0 $2) $1 $0))))) LPAREN '.' $0) '.')
No improvement possible with MDL.
Scored candidates with language and grammar in 7.72873s.
Best joint score: -1217.789968 with (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) (#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 (length (cdr $0))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (map (lambda $1) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $2 $1)) $2) $2))))) (#(lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) empty (cons LPAREN $0) RPAREN)) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0)) $0 '-' LPAREN))) (#(lambda (lambda (map (lambda (if (char-eq? $0 $2) $1 $0))))) LPAREN '.' $0) '.')
Timing point 3 (all scoring): 15.3767s.
No improvement possible with joint score.
Completed one step of memory consolidation in 55.1208s.
completed ocaml compression in 1.97442m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-24T21.58.02/bench013_it19.json"
	User time (seconds): 52.13
	System time (seconds): 0.57
	Percent of CPU this job got: 44%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 1:58.53
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 670432
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 672947
	Voluntary context switches: 486
	Involuntary context switches: 5312
	Swaps: 0
	File system inputs: 0
	File system outputs: 280
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
