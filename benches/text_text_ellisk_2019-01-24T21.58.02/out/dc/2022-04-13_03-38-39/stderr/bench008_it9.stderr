Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 70577
Constructed version spaces and coalesced candidates in 49.5581s.
Timing point -1 right before normalizing: 54.6312s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 54.6381s.
Timing Comparison Point A (vspace+beam) (millis): 54638
Rewrote topK in 26.2044s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 26.2048s.
sanity check for timing comparison, should be same as comparison point: 1.34738m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 80843
Initial score: -918.444054
Initial language score: 0.000000
Initial joint score: -918.444054 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.53036s.
Best MDL score: -914.931169 with (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) (#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 (length (cdr $0))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (map (lambda $1) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $2 $1)) $2) $2))))) (#(lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) empty (cons LPAREN $0) RPAREN)) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0)) $0 '-' LPAREN))) (cons SPACE (#(#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING) $0)) SPACE)
Scored candidates with language and grammar in 5.13026s.
Best joint score: -914.931169 with (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) (#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 (length (cdr $0))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (map (lambda $1) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $2 $1)) $2) $2))))) (#(lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) empty (cons LPAREN $0) RPAREN)) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0)) $0 '-' LPAREN))) (cons SPACE (#(#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING) $0)) SPACE)
Timing point 3 (all scoring): 9.69236s.
Improved score to -914.931169 (dScore=3.512884) w/ new primitive
	#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) (#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 (length (cdr $0))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (map (lambda $1) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $2 $1)) $2) $2))))) (#(lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) empty (cons LPAREN $0) RPAREN)) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0)) $0 '-' LPAREN))) (cons SPACE (#(#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING) $0)) SPACE)) : list(char) -> list(char)
rewrote all of the frontiers in 12.9437s.
Timing point 4 (rewrite final frontiers): 12.9438s.
Completed one step of memory consolidation in 1.72504m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) (#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 (length (cdr $0))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (map (lambda $1) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $2 $1)) $2) $2))))) (#(lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) empty (cons LPAREN $0) RPAREN)) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0)) $0 '-' LPAREN))) (cons SPACE (#(#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING) $0)) SPACE)) $0))
  (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) (#(lambda (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $1 (length (cdr $0))))) (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (map (lambda $1) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $2 $1)) $2) $2))))) (#(lambda (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) empty (cons LPAREN $0) RPAREN)) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0)) $0 '-' LPAREN))) (cons SPACE (#(#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) STRING) $0)) SPACE)) $0))
Total number of candidates: 64767
Constructed version spaces and coalesced candidates in 49.1343s.
Timing point -1 right before normalizing: 53.7722s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 53.7764s.
Timing Comparison Point A (vspace+beam) (millis): 53776
Rewrote topK in 23.9215s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 23.9218s.
sanity check for timing comparison, should be same as comparison point: 1.29497m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 77698
Initial score: -915.378846
Initial language score: 0.000000
Initial joint score: -915.378846 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.80795s.
Best MDL score: -914.276168 with (+ 1 (+ 1 1))
Scored candidates with language and grammar in 4.4875s.
Best joint score: -914.276168 with (+ 1 (+ 1 1))
Timing point 3 (all scoring): 9.32929s.
Improved score to -914.276168 (dScore=1.102678) w/ new primitive
	#(+ 1 (+ 1 1)) : int
rewrote all of the frontiers in 13.0024s.
Timing point 4 (rewrite final frontiers): 13.0025s.
Completed one step of memory consolidation in 1.66752m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 #(+ 1 (+ 1 1))))
  (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (+ 1 #(+ 1 (+ 1 1)))))
Total number of candidates: 60493
Constructed version spaces and coalesced candidates in 49.0894s.
Timing point -1 right before normalizing: 53.4549s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 53.4574s.
Timing Comparison Point A (vspace+beam) (millis): 53457
Rewrote topK in 26.0015s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 26.0017s.
sanity check for timing comparison, should be same as comparison point: 1.32432m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 79459
Initial score: -914.627254
Initial language score: 0.000000
Initial joint score: -914.627254 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 4.45293s.
Best MDL score: -916.024100 with (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.')))) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1)))
No improvement possible with MDL.
Scored candidates with language and grammar in 4.62089s.
Best joint score: -916.024100 with (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.')))) (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 $0) $1)))
Timing point 3 (all scoring): 9.10779s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.47613m.
completed ocaml compression in 4.86912m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-24T21.58.02/bench008_it9.json"
	User time (seconds): 90.93
	System time (seconds): 3.20
	Percent of CPU this job got: 32%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:52.30
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 2179404
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 3540071
	Voluntary context switches: 517
	Involuntary context switches: 9354
	Swaps: 0
	File system inputs: 0
	File system outputs: 168
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
