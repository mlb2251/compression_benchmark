Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 80626
Constructed version spaces and coalesced candidates in 52.5397s.
Timing point -1 right before normalizing: 59.2713s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 59.2822s.
Timing Comparison Point A (vspace+beam) (millis): 59282
Rewrote topK in 35.2163s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 35.2166s.
sanity check for timing comparison, should be same as comparison point: 1.57498m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 94498
Initial score: -1217.424338
Initial language score: 0.000000
Initial joint score: -1217.424338 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 7.38928s.
Best MDL score: -1212.677044 with (lambda (lambda (if ($0 (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 SPACE)) (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 STRING)) $1) $1)))
Scored candidates with language and grammar in 7.16302s.
Best joint score: -1212.677044 with (lambda (lambda (if ($0 (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 SPACE)) (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 STRING)) $1) $1)))
Timing point 3 (all scoring): 14.6142s.
Improved score to -1212.677044 (dScore=4.747294) w/ new primitive
	#(lambda (lambda (if ($0 (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 SPACE)) (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 STRING)) $1) $1))) : list(char) -> (list(char) -> bool) -> list(char)
rewrote all of the frontiers in 19.866s.
Timing point 4 (rewrite final frontiers): 19.8661s.
Completed one step of memory consolidation in 2.15022m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (if ($0 (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 SPACE)) (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 STRING)) $1) $1))) $0 (lambda (#(lambda (char-eq? SPACE (index #(+ 1 (+ 1 1)) $0))) (cdr (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 $1))))))
  (lambda (#(lambda (lambda (if ($0 (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 SPACE)) (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 STRING)) $1) $1))) $0 (lambda (#(lambda (char-eq? SPACE (index #(+ 1 (+ 1 1)) $0))) (#(lambda (lambda (lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $1 (cons $0 $2))))) $1 $0 SPACE)))))
  (lambda (#(lambda (lambda (if ($0 (#(lambda (lambda (fold $1 $1 (lambda (lambda (cdr (if (char-eq? $2 $1) $3 $0))))))) $1 SPACE)) (#(lambda (#(lambda (lambda (fold $1 $0 (lambda (lambda (cons $1 $0)))))) $0 STRING)) $1) $1))) $0 (lambda (char-eq? SPACE (if (#(lambda (char-eq? SPACE (index #(+ 1 (+ 1 1)) $0))) $0) '.' SPACE)))))
Total number of candidates: 76557
Constructed version spaces and coalesced candidates in 50.8837s.
Timing point -1 right before normalizing: 58.0514s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 58.0553s.
Timing Comparison Point A (vspace+beam) (millis): 58055
Rewrote topK in 29.0279s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 29.0283s.
sanity check for timing comparison, should be same as comparison point: 1.45139m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 87083
Initial score: -1212.530554
Initial language score: 0.000000
Initial joint score: -1212.530554 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 7.08341s.
Best MDL score: -1216.962873 with (#(lambda (lambda (map (lambda (if (char-eq? $0 $2) $1 $0))))) LPAREN)
No improvement possible with MDL.
Scored candidates with language and grammar in 7.36319s.
Best joint score: -1216.962873 with (#(lambda (lambda (map (lambda (if (char-eq? $0 $2) $1 $0))))) LPAREN)
Timing point 3 (all scoring): 14.4966s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.69302m.
completed ocaml compression in 3.84356m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-24T21.58.02/bench012_it16.json"
	User time (seconds): 72.39
	System time (seconds): 2.13
	Percent of CPU this job got: 32%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 3:50.68
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 1892584
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 2497884
	Voluntary context switches: 360
	Involuntary context switches: 7384
	Swaps: 0
	File system inputs: 0
	File system outputs: 264
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
