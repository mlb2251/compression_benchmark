{
    "bench_group": "list_list_hard_test_ellisk_2019-02-15T11.26.41",
    "bench": "bench009_it12",
    "mode": "dreamcoder",
    "run": "benches/list_list_hard_test_ellisk_2019-02-15T11.26.41/out/dc/2022-04-12_20-46-50",
    "metrics": {
        "time_binary_seconds": 328.19,
        "time_per_inv_with_rewrite": 58193.0,
        "time_per_inv_no_rewrite": 32725.333333333332,
        "mem_peak_kb": 954604,
        "compression_ratio": 1.0267320199830332,
        "absolute_compression": 2836
    },
    "num_inventions": 3,
    "inventions": [
        {
            "name": "fn_0",
            "stitch_uncanonical": "(gt? #0 (mod #1 fn_12))",
            "stitch_canonical": "(gt? #0 (mod #1 fn_12))",
            "dreamcoder": "#(lambda (lambda (gt? $1 (mod $0 #(+ 1 (car (#(#(lambda (map (lambda (index $0 (cons (+ 1 $1) (range $0)))))) (+ 1 1)) (range 1))))))))"
        },
        {
            "name": "fn_1",
            "stitch_uncanonical": "(fold (cdr (fn_2 #0)) #1 (lam (lam (fn_10 (map (lam (car $1)) $0) (cdr $0)))))",
            "stitch_canonical": "(fold (cdr (fn_2 #0)) #1 (lam (lam (fn_10 (map (lam (car $1)) $0) (cdr $0)))))",
            "dreamcoder": "#(lambda (lambda (fold (cdr (#(lambda (cdr (cdr (cdr $0)))) $1)) $0 (lambda (lambda (#(lambda (lambda (fold $0 (cons (index 1 (cdr $1)) empty) (lambda (lambda (cons $1 $0)))))) (map (lambda (car $1)) $0) (cdr $0)))))))"
        },
        {
            "name": "fn_2",
            "stitch_uncanonical": "(fn_10 (map (lam #0) (range fn_12)))",
            "stitch_canonical": "(fn_10 (map (lam #0) (range fn_12)))",
            "dreamcoder": "#(lambda (#(lambda (lambda (fold $0 (cons (index 1 (cdr $1)) empty) (lambda (lambda (cons $1 $0)))))) (map (lambda $1) (range #(+ 1 (car (#(#(lambda (map (lambda (index $0 (cons (+ 1 $1) (range $0)))))) (+ 1 1)) (range 1))))))))"
        }
    ]
}