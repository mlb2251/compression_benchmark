Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 48035
Constructed version spaces and coalesced candidates in 1.5608m.
Timing point -1 right before normalizing: 1.7229m.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 1.72295m.
Timing Comparison Point A (vspace+beam) (millis): 103376
Rewrote topK in 1.24617m.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 1.24618m.
sanity check for timing comparison, should be same as comparison point: 2.96913m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 178147
Initial score: -1107.768501
Initial language score: 0.000000
Initial joint score: -1107.768501 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 6.74014s.
Best MDL score: -1088.785246 with (lambda (if (fold (cdr $1) (#(lambda (empty? (cdr (cdr $0)))) $1) (lambda ($1 (lambda (char-eq? (if $0 '.' $1) $1))))) (#(#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) STRING) $1) $1))
Scored candidates with language and grammar in 6.21974s.
Best joint score: -1088.785246 with (lambda (if (fold (cdr $1) (#(lambda (empty? (cdr (cdr $0)))) $1) (lambda ($1 (lambda (char-eq? (if $0 '.' $1) $1))))) (#(#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) STRING) $1) $1))
Timing point 3 (all scoring): 13.0053s.
Improved score to -1088.785246 (dScore=18.983255) w/ new primitive
	#(lambda (lambda (if (fold (cdr $1) (#(lambda (empty? (cdr (cdr $0)))) $1) (lambda ($1 (lambda (char-eq? (if $0 '.' $1) $1))))) (#(#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) STRING) $1) $1))) : list(char) -> ((bool -> bool) -> bool -> bool) -> list(char)
rewrote all of the frontiers in 57.3889s.
Timing point 4 (rewrite final frontiers): 57.3889s.
Completed one step of memory consolidation in 4.14283m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (if (fold (cdr $1) (#(lambda (empty? (cdr (cdr $0)))) $1) (lambda ($1 (lambda (char-eq? (if $0 '.' $1) $1))))) (#(#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) STRING) $1) $1))) $0 (lambda (lambda ($1 (#(lambda (#(lambda (empty? (cdr (cdr $0)))) (cdr $0))) (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) (cdr $2) SPACE)))))))
  (lambda (#(lambda (lambda (if (fold (cdr $1) (#(lambda (empty? (cdr (cdr $0)))) $1) (lambda ($1 (lambda (char-eq? (if $0 '.' $1) $1))))) (#(#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) STRING) $1) $1))) $0 (lambda (lambda ($1 $0)))))
Total number of candidates: 37974
Constructed version spaces and coalesced candidates in 47.9811s.
Timing point -1 right before normalizing: 53.9193s.
Trimmed down the beam, have only 299 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 53.9213s.
Timing Comparison Point A (vspace+beam) (millis): 53921
Rewrote topK in 41.6748s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 41.6752s.
sanity check for timing comparison, should be same as comparison point: 1.59328m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 95596
Initial score: -1089.588320
Initial language score: 0.000000
Initial joint score: -1089.588320 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 6.5972s.
Best MDL score: -1091.382188 with (lambda (range (- $0 1)))
No improvement possible with MDL.
Scored candidates with language and grammar in 6.24292s.
Best joint score: -1091.382188 with (lambda (range (- $0 1)))
Timing point 3 (all scoring): 12.8828s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.80803m.
completed ocaml compression in 5.95114m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-24T22.05.53/bench010_it17.json"
	User time (seconds): 44.12
	System time (seconds): 0.83
	Percent of CPU this job got: 12%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 5:57.12
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 1119432
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1489154
	Voluntary context switches: 334
	Involuntary context switches: 4577
	Swaps: 0
	File system inputs: 0
	File system outputs: 216
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
