Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 32937
Constructed version spaces and coalesced candidates in 20.7769s.
Timing point -1 right before normalizing: 23.7207s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 23.7229s.
Timing Comparison Point A (vspace+beam) (millis): 23722
Rewrote topK in 20.2901s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 20.2907s.
sanity check for timing comparison, should be same as comparison point: 44.0136s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 44013
Initial score: -1014.989940
Initial language score: 0.000000
Initial joint score: -1014.989940 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 5.30893s.
Best MDL score: -1013.312188 with (lambda (lambda (#(lambda (lambda (lambda (fold (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) $0 $2) $1 (lambda (lambda (cdr $0))))))) $0 $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) RPAREN empty (cons LPAREN $0))) $1))))
Scored candidates with language and grammar in 5.19582s.
Best joint score: -1013.312188 with (lambda (lambda (#(lambda (lambda (lambda (fold (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) $0 $2) $1 (lambda (lambda (cdr $0))))))) $0 $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) RPAREN empty (cons LPAREN $0))) $1))))
Timing point 3 (all scoring): 10.5396s.
Improved score to -1013.312188 (dScore=1.677752) w/ new primitive
	#(lambda (lambda (#(lambda (lambda (lambda (fold (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) $0 $2) $1 (lambda (lambda (cdr $0))))))) $0 $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) RPAREN empty (cons LPAREN $0))) $1)))) : list(char) -> char -> list(char)
rewrote all of the frontiers in 12.1462s.
Timing point 4 (rewrite final frontiers): 12.1462s.
Completed one step of memory consolidation in 1.11214m.
New primitive is used 4 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (fold (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) $0 $2) $1 (lambda (lambda (cdr $0))))))) $0 $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) RPAREN empty (cons LPAREN $0))) $1)))) $0 '.'))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (fold (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) $0 $2) $1 (lambda (lambda (cdr $0))))))) $0 $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) RPAREN empty (cons LPAREN $0))) $1)))) $0 ','))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (fold (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) $0 $2) $1 (lambda (lambda (cdr $0))))))) $0 $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) RPAREN empty (cons LPAREN $0))) $1)))) $0 SPACE))
  (lambda (#(lambda (lambda (#(lambda (lambda (lambda (fold (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) $0 $2) $1 (lambda (lambda (cdr $0))))))) $0 $1 (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) RPAREN empty (cons LPAREN $0))) $1)))) $0 '-'))
Total number of candidates: 32618
Constructed version spaces and coalesced candidates in 20.6416s.
Timing point -1 right before normalizing: 24.8218s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 24.8273s.
Timing Comparison Point A (vspace+beam) (millis): 24827
Rewrote topK in 21.2892s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 21.2894s.
sanity check for timing comparison, should be same as comparison point: 46.1167s.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 46116
Initial score: -1014.233922
Initial language score: 0.000000
Initial joint score: -1014.233922 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 6.27016s.
Best MDL score: -1019.084572 with (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.')))) (#(lambda (lambda (lambda (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) $0 $2 (cdr (#(lambda (lambda (lambda (fold (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) $0 $2) $1 (lambda (lambda (cdr $0))))))) $1 $2 $2))) $1)))) $1 $0 LPAREN) $1)))
No improvement possible with MDL.
Scored candidates with language and grammar in 5.52692s.
Best joint score: -1019.084572 with (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.')))) (#(lambda (lambda (lambda (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) $0 $2 (cdr (#(lambda (lambda (lambda (fold (#(lambda (lambda (#(lambda (lambda (unfold $1 $0 (lambda (car $0)) (lambda (cdr $0))))) $1 (lambda (char-eq? $1 (car $0)))))) $0 $2) $1 (lambda (lambda (cdr $0))))))) $1 $2 $2))) $1)))) $1 $0 LPAREN) $1)))
Timing point 3 (all scoring): 11.8359s.
No improvement possible with joint score.
Completed one step of memory consolidation in 57.9539s.
completed ocaml compression in 2.07829m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-24T22.05.53/bench008_it13.json"
	User time (seconds): 31.67
	System time (seconds): 0.48
	Percent of CPU this job got: 25%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 2:04.76
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 435444
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 441435
	Voluntary context switches: 324
	Involuntary context switches: 3366
	Swaps: 0
	File system inputs: 0
	File system outputs: 200
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
