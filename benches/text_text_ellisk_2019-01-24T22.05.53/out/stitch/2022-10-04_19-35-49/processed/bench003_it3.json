{
    "bench_group": "text_text_ellisk_2019-01-24T22.05.53",
    "bench": "bench003_it3",
    "mode": "stitch",
    "run": "compression_benchmark/benches/text_text_ellisk_2019-01-24T22.05.53/out/stitch/2022-10-04_19-35-49",
    "metrics": {
        "time_binary_seconds": 0.03,
        "time_per_inv_with_rewrite": 2.2,
        "time_per_inv_no_rewrite": 2.2,
        "mem_peak_kb": 4076,
        "compression_ratio": 1.121111384716408,
        "absolute_compression": 2951,
        "compression_ratio_min": 1.187302235378177
    },
    "num_inventions": 5,
    "inventions": [
        {
            "name": "fn_5",
            "dreamcoder": "#(lambda (lambda (unfold $0 $1 (lambda (car $0)) (lambda (cdr $0)))))",
            "stitch_uncanonical": "(unfold #1 #0 (lam (car $0)) (lam (cdr $0)))",
            "stitch_canonical": "(unfold #0 #1 (lam (car $0)) (lam (cdr $0)))",
            "arity": 2
        },
        {
            "name": "fn_6",
            "dreamcoder": "#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $0 '.') (#(lambda (lambda (cons (car $1) (cons $0 empty)))) $1 '.'))))",
            "stitch_uncanonical": "(lam (lam (prev_dc_inv_2 (prev_dc_inv_0 $0 '.') (prev_dc_inv_0 $1 '.'))))",
            "stitch_canonical": "(lam (lam (prev_dc_inv_2 (prev_dc_inv_0 $0 '.') (prev_dc_inv_0 $1 '.'))))",
            "arity": 0
        },
        {
            "name": "fn_7",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) $2 (cons $3 $0) $1)))))",
            "stitch_uncanonical": "(lam (lam (prev_dc_inv_4 #1 (cons #0 $0) $1)))",
            "stitch_canonical": "(lam (lam (prev_dc_inv_4 #0 (cons #1 $0) $1)))",
            "arity": 2
        },
        {
            "name": "fn_8",
            "dreamcoder": "#(lambda (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $1 $0)))) RPAREN empty (cons LPAREN $0)))",
            "stitch_uncanonical": "(lam (prev_dc_inv_4 RPAREN empty (cons LPAREN $0)))",
            "stitch_canonical": "(lam (prev_dc_inv_4 RPAREN empty (cons LPAREN $0)))",
            "arity": 0
        },
        {
            "name": "fn_9",
            "dreamcoder": "#(lambda (#(lambda (lambda (unfold $0 $1 (lambda (car $0)) (lambda (cdr $0))))) (lambda (char-eq? $1 (car $0)))))",
            "stitch_uncanonical": "(fn_5 (lam (char-eq? #0 (car $0))))",
            "stitch_canonical": "(fn_5 (lam (char-eq? #0 (car $0))))",
            "arity": 1
        }
    ]
}