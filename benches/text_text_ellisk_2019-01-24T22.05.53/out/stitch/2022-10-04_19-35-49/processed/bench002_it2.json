{
    "bench_group": "text_text_ellisk_2019-01-24T22.05.53",
    "bench": "bench002_it2",
    "mode": "stitch",
    "run": "compression_benchmark/benches/text_text_ellisk_2019-01-24T22.05.53/out/stitch/2022-10-04_19-35-49",
    "metrics": {
        "time_binary_seconds": 0.01,
        "time_per_inv_with_rewrite": 2.0,
        "time_per_inv_no_rewrite": 2.0,
        "mem_peak_kb": 4028,
        "compression_ratio": 1.0383299476103924,
        "absolute_compression": 717,
        "compression_ratio_min": 1.0644110275689223
    },
    "num_inventions": 3,
    "inventions": [
        {
            "name": "fn_2",
            "dreamcoder": "#(lambda (lambda (lambda (map (lambda (if (char-eq? $0 $2) $3 $0)) $0))))",
            "stitch_uncanonical": "(lam (map (lam (if (char-eq? $0 #1) #0 $0)) $0))",
            "stitch_canonical": "(lam (map (lam (if (char-eq? $0 #0) #1 $0)) $0))",
            "arity": 2
        },
        {
            "name": "fn_3",
            "dreamcoder": "#(lambda (lambda (lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) ($2 (cons $3 $0)) $1)))))",
            "stitch_uncanonical": "(lam (lam (prev_dc_inv_0 (#1 (cons #0 $0)) $1)))",
            "stitch_canonical": "(lam (lam (prev_dc_inv_0 (#0 (cons #1 $0)) $1)))",
            "arity": 2
        },
        {
            "name": "fn_4",
            "dreamcoder": "#(lambda (lambda (cons (car $0) (cons $1 empty))))",
            "stitch_uncanonical": "(lam (cons (car $0) (cons #0 empty)))",
            "stitch_canonical": "(lam (cons (car $0) (cons #0 empty)))",
            "arity": 1
        }
    ]
}