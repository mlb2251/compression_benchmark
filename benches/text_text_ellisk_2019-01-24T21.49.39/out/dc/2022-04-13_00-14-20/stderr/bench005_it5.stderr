Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 35080
Constructed version spaces and coalesced candidates in 42.5563s.
Timing point -1 right before normalizing: 46.0376s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 46.0402s.
Timing Comparison Point A (vspace+beam) (millis): 46040
Rewrote topK in 25.2025s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 25.2028s.
sanity check for timing comparison, should be same as comparison point: 1.18738m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 71243
Initial score: -618.366857
Initial language score: 0.000000
Initial joint score: -618.366857 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 2.16849s.
Best MDL score: -617.131530 with (+ 1)
Scored candidates with language and grammar in 2.09764s.
Best joint score: -617.131530 with (+ 1)
Timing point 3 (all scoring): 4.28088s.
Improved score to -617.131530 (dScore=1.235327) w/ new primitive
	#(+ 1) : int -> int
rewrote all of the frontiers in 14.7476s.
Timing point 4 (rewrite final frontiers): 14.7477s.
Completed one step of memory consolidation in 1.50469m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (#(+ 1) 1)))
  (lambda (#(lambda (lambda (map (lambda (index $0 $2)) (range $0)))) $0 (#(+ 1) (#(+ 1) (#(+ 1) 1)))))
Total number of candidates: 34656
Constructed version spaces and coalesced candidates in 43.4431s.
Timing point -1 right before normalizing: 47.9206s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 47.9226s.
Timing Comparison Point A (vspace+beam) (millis): 47922
Rewrote topK in 26.3078s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 26.3082s.
sanity check for timing comparison, should be same as comparison point: 1.23718m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 74230
Initial score: -617.206966
Initial language score: 0.000000
Initial joint score: -617.206966 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 2.16928s.
Best MDL score: -617.080336 with (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) (cdr ($0 (lambda (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) $2 $0) $2 (lambda (lambda (cdr $0)))))))))) $0 (lambda ($0 RPAREN))))
Scored candidates with language and grammar in 2.25106s.
Best joint score: -617.080336 with (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) (cdr ($0 (lambda (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) $2 $0) $2 (lambda (lambda (cdr $0)))))))))) $0 (lambda ($0 RPAREN))))
Timing point 3 (all scoring): 4.43829s.
Improved score to -617.080336 (dScore=0.126630) w/ new primitive
	#(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) (cdr ($0 (lambda (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) $2 $0) $2 (lambda (lambda (cdr $0)))))))))) $0 (lambda ($0 RPAREN)))) : list(char) -> char -> list(char)
rewrote all of the frontiers in 15.6094s.
Timing point 4 (rewrite final frontiers): 15.6095s.
Completed one step of memory consolidation in 1.5715m.
New primitive is used 3 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) (cdr ($0 (lambda (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) $2 $0) $2 (lambda (lambda (cdr $0)))))))))) $0 (lambda ($0 RPAREN)))) (#(lambda (lambda (#(lambda (lambda (fold $0 $1 (lambda (lambda (cons $1 $0)))))) (cons $0 $1)))) $0 SPACE $0) SPACE))
  (lambda (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) (cdr ($0 (lambda (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) $2 $0) $2 (lambda (lambda (cdr $0)))))))))) $0 (lambda ($0 RPAREN)))) $0 ','))
  (lambda (#(lambda (lambda (cons (car $1) (cons '.' (cons (car $0) (cons '.' empty)))))) $0 (#(lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) (cdr ($0 (lambda (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) $2 $0) $2 (lambda (lambda (cdr $0)))))))))) $0 (lambda ($0 RPAREN)))) $0 SPACE)))
Total number of candidates: 34217
Constructed version spaces and coalesced candidates in 40.5931s.
Timing point -1 right before normalizing: 44.4843s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 44.4872s.
Timing Comparison Point A (vspace+beam) (millis): 44487
Rewrote topK in 26.0453s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 26.0456s.
sanity check for timing comparison, should be same as comparison point: 1.17555m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 70532
Initial score: -617.163949
Initial language score: 0.000000
Initial joint score: -617.163949 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 2.14789s.
Best MDL score: -619.545165 with (lambda (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) (cdr ($0 (lambda (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) $2 $0) $2 (lambda (lambda (cdr $0)))))))))) $1 (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) ($0 $3) $1)) $2))))
No improvement possible with MDL.
Scored candidates with language and grammar in 2.24637s.
Best joint score: -619.545165 with (lambda (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) (cdr ($0 (lambda (fold (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) $2 $0) $2 (lambda (lambda (cdr $0)))))))))) $1 (lambda (#(lambda (lambda (fold $1 $1 (lambda (lambda (if (char-eq? $2 $1) empty (cons $1 $0))))))) ($0 $3) $1)) $2))))
Timing point 3 (all scoring): 4.4071s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.24901m.
completed ocaml compression in 4.32542m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/text_text_ellisk_2019-01-24T21.49.39/bench005_it5.json"
	User time (seconds): 53.61
	System time (seconds): 2.45
	Percent of CPU this job got: 21%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 4:19.66
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 1565732
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 2542845
	Voluntary context switches: 403
	Involuntary context switches: 5721
	Swaps: 0
	File system inputs: 0
	File system outputs: 96
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
