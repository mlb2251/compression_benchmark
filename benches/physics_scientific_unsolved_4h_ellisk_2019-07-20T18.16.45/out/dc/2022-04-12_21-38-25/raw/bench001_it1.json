{
  "DSL": {
    "logVariable": -0.5003231007290578,
    "productions": [
      {
        "expression":
          "#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (cons $0 (cons $1 empty)))))",
        "logProbability": -2.804864691137364
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (/. $1 $0))) $1 $0)))",
        "logProbability": -2.804844715694369
      },
      {
        "expression":
          "#(lambda (lambda (lambda (lambda (+. $3 (*. $0 (+. $2 (*. $0 (#(lambda (/. $0 (+. 1. 1.))) $1)))))))))",
        "logProbability": -2.804844274983291
      },
      {
        "expression":
          "#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi))))",
        "logProbability": -2.891854073423816
      },
      {
        "expression":
          "#(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 (/. $2 (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $0) $0))))",
        "logProbability": -1.2736700617306167
      },
      { "expression": "map", "logProbability": -1.3471177082721604 },
      { "expression": "zip", "logProbability": -1.3433485245013586 },
      { "expression": "cdr", "logProbability": -1.4559916184997657 },
      { "expression": "empty", "logProbability": -1.4559829312256927 },
      { "expression": "cons", "logProbability": -1.4559742440270877 },
      { "expression": "*.", "logProbability": -1.690854856597309 },
      { "expression": "/.", "logProbability": -2.414150503715729 },
      { "expression": "+.", "logProbability": -2.724787425540784 },
      { "expression": "-.", "logProbability": -2.595620930148009 },
      { "expression": "pi", "logProbability": -2.682252467195936 },
      { "expression": "0.", "logProbability": -2.891855126950359 },
      { "expression": "1.", "logProbability": -2.683340235750282 },
      { "expression": "power", "logProbability": -2.786883817777729 },
      { "expression": "fold", "logProbability": -3.131859761929535 },
      { "expression": "car", "logProbability": -3.131859761929535 },
      {
        "expression": "#(lambda (map (lambda (*. $0 $1))))",
        "logProbability": -1.1107560730982455
      },
      {
        "expression": "#(lambda (/. 1. $0))",
        "logProbability": -2.486785913236746
      },
      {
        "expression": "#(lambda (/. $0 (+. 1. 1.)))",
        "logProbability": -2.3519628753541
      },
      {
        "expression": "#(lambda (fold $0 0. (lambda (lambda (+. $0 $1)))))",
        "logProbability": -2.650693070133471
      },
      {
        "expression": "#(lambda (lambda (/. (+. $0 $0) $1)))",
        "logProbability": -2.6557158047680236
      },
      {
        "expression":
          "#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "logProbability": -2.7085252757972977
      },
      {
        "expression":
          "#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0)))))",
        "logProbability": -2.805138656615815
      },
      {
        "expression":
          "#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1))))))",
        "logProbability": -2.822472474001785
      }
    ]
  },
  "frontiers": [
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (/. $0 (+. 1. 1.))) 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) (#(lambda (/. 1. $0)) 1.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (map (lambda $0) $0)) (#(lambda (/. $0 (+. 1. 1.))) 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $0) (#(lambda (/. $0 (+. 1. 1.))) (#(lambda (/. 1. $0)) 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $1 $0))) $0 (-. (*. $0 $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (cons $0 (cons $1 empty))))) $1 $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (cons $0 (cons $1 empty))))) $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (cons $0 (cons $1 (#(lambda (map (lambda (*. $0 $1)))) $0 empty)))) (#(lambda (/. $0 (+. 1. 1.))) 1.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (cons $0 (cons $1 (#(lambda (map (lambda (*. $0 $1)))) $1 empty)))) (#(lambda (/. $0 (+. 1. 1.))) 1.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (cons $1 (cons $0 (#(lambda (map (lambda (*. $0 $1)))) $0 empty)))) (#(lambda (/. $0 (+. 1. 1.))) 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (#(lambda (lambda (/. (+. $0 $0) $1))) $1 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (/. (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $1)) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (/. $0 (+. 1. 1.))) $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (/. $0 (+. 1. 1.))) $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $0 $1) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (*. $1 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $1 (/. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (/. $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. (*. $1 $1) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (#(lambda (lambda (/. (+. $0 $0) $1))) $1 $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (-. pi (#(lambda (/. 1. $0)) pi)) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. $0 (#(lambda (/. $0 (+. 1. 1.))) (-. pi (#(lambda (/. 1. $0)) pi)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. $0 (power (#(lambda (lambda (/. (+. $0 $0) $1))) $0 $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. $0 (power (#(lambda (/. $0 (+. 1. 1.))) 1.) (#(lambda (/. $0 (+. 1. 1.))) 1.))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (power (#(lambda (/. $0 (+. 1. 1.))) 1.) (#(lambda (/. $0 (+. 1. 1.))) 1.)) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (/. $0 (+. 1. 1.))) (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (/. $0 (+. 1. 1.))) (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (*. $0 (#(lambda (/. $0 (+. 1. 1.))) $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (*. $1 (#(lambda (/. $0 (+. 1. 1.))) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (/. $0 (+. 1. 1.))) (*. $0 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (/. $0 (+. 1. 1.))) (*. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (/. $0 (+. 1. 1.))) (*. $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (/. $0 (+. 1. 1.))) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (/. $0 (+. 1. 1.))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (/. $0 (+. 1. 1.))) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (/. $1 (#(lambda (lambda (/. (+. $0 $0) $1))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (/. $0 (+. 1. 1.))) (/. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (/. (#(lambda (/. $0 (+. 1. 1.))) $1) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (/. $0 (+. 1. 1.))) (/. $1 $0)) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (/. (#(lambda (/. $0 (+. 1. 1.))) $1) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (*. 1. (#(lambda (/. 1. $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. $0 (+. 1. 1.))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (-. $0 (#(lambda (/. $0 (+. 1. 1.))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. $0 (#(lambda (lambda (/. (+. $0 $0) $1))) $0 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (*. $0 (#(lambda (/. $0 (+. 1. 1.))) 1.)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (*. (#(lambda (/. $0 (+. 1. 1.))) 1.) $0))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (map (lambda $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (map (lambda $0) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $0 (map (lambda $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1))))))) (map (lambda $0) $0) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      {
                        "constructor": "->",
                        "arguments": [
                          { "constructor": "real", "arguments": [] },
                          { "constructor": "real", "arguments": [] }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $0 $3) (*. $1 $2)) $4))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (-. (/. $0 (#(lambda (/. 1. $0)) $3)) (*. $1 $2))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (/. $0 (#(lambda (/. 1. $0)) $1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. $3 (*. $0 (+. $2 (#(lambda (/. $0 (+. 1. 1.))) (*. $0 $1)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. $3 (*. $0 (+. $2 (#(lambda (/. $0 (+. 1. 1.))) (*. $1 $0)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. $3 (*. $0 (+. $2 (*. $0 (#(lambda (/. $0 (+. 1. 1.))) $1))))))))) $3 $2 $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. $3 (*. $0 (+. $2 (*. $1 (#(lambda (/. $0 (+. 1. 1.))) $0)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. $3 (*. (+. $2 (*. $0 (#(lambda (/. $0 (+. 1. 1.))) $1))) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (/. $0 (+. 1. 1.))) (*. $1 (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (/. $0 (+. 1. 1.))) (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (/. $0 (+. 1. 1.))) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (/. $0 (+. 1. 1.))) $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (/. $0 (+. 1. 1.))) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0)) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (/. $0 (+. 1. 1.))) (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (#(lambda (/. $0 (+. 1. 1.))) (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (*. $0 (#(lambda (/. $0 (+. 1. 1.))) $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $0 (*. $1 (#(lambda (/. $0 (+. 1. 1.))) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (/. $0 (+. 1. 1.))) (*. $0 $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              },
              {
                "constructor": "list",
                "arguments": [ { "constructor": "real", "arguments": [] } ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) $1 (map (lambda $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (map (lambda $0) (#(lambda (map (lambda (*. $0 $1)))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (/. $0 (+. 1. 1.))) $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  {
                    "constructor": "->",
                    "arguments": [
                      { "constructor": "real", "arguments": [] },
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. $3 (*. $0 (+. $2 (#(lambda (/. $0 (+. 1. 1.))) (*. $0 $1)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. $3 (*. $0 (+. $2 (#(lambda (/. $0 (+. 1. 1.))) (*. $1 $0)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (#(lambda (lambda (lambda (lambda (+. $3 (*. $0 (+. $2 (*. $0 (#(lambda (/. $0 (+. 1. 1.))) $1))))))))) $3 $2 $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. $3 (*. $0 (+. $2 (*. $1 (#(lambda (/. $0 (+. 1. 1.))) $0)))))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (lambda (+. $3 (*. (+. $2 (*. $0 (#(lambda (/. $0 (+. 1. 1.))) $1))) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  { "constructor": "real", "arguments": [] },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (+. $2 (/. $0 (#(lambda (/. 1. $0)) $1))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 pi))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (/. pi (#(lambda (/. $0 (+. 1. 1.))) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (/. 1. $0)) (#(lambda (/. $0 (+. 1. 1.))) $0)) pi))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. pi (#(lambda (/. 1. $0)) (#(lambda (/. $0 (+. 1. 1.))) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. 1. (#(lambda (lambda (/. (+. $0 $0) $1))) $0 pi)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (/. $1 $0))) $1 $0))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (*. $1 $0))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (*. $1 $0))) $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (*. $1 $0))) $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (*. $1 $0))) $0 $1) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (/. $1 $0))) $1 $0))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (*. $1 $0))) $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. $1 (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (*. $1 $0))) $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (*. $1 $0))) $1 $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (*. (#(lambda (lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) (power ($2 $0 $1) (#(lambda (/. $0 (+. 1. 1.))) 1.)) pi)))) (lambda (lambda (*. $1 $0))) $0 $1) $1)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 (/. $2 (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $0) $0)))) $2 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 (/. $2 (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $0) $0)))) $1 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) (/. $1 (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $2 $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) (/. $2 (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $1 $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (/. (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 $2 $0) (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 (/. $2 (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $0) $0)))) $2 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 (/. $2 (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $0) $0)))) $1 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) (/. $1 (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $2 $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) (/. $2 (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $1 $0) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (map (lambda (*. $0 $1)))) (/. (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 $2 $0) (power (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0) (#(lambda (/. $0 (+. 1. 1.))) 1.))) $0))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $2 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 $2 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $2 $1 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (*. (/. $1 (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0)) $2))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              {
                "constructor": "->",
                "arguments": [
                  {
                    "constructor": "list",
                    "arguments": [
                      { "constructor": "real", "arguments": [] }
                    ]
                  },
                  { "constructor": "real", "arguments": [] }
                ]
              }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 $2 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $2 $1 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $1 $2 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (#(lambda (lambda (lambda (/. (*. $2 $1) (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))) $2 $1 (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (lambda (*. $1 (/. $2 (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) $0))))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program": "(lambda (lambda (*. $0 (*. $1 (-. 0. $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. (-. 0. $0) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (-. 0. (*. $0 $1)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (-. 0. (*. $1 $0)))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $1 (*. $0 (-. 0. $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. $1 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (*. $0 $1)))", "logLikelihood": 0.0 },
        { "program": "(lambda (lambda (*. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (/. $0 (#(lambda (/. 1. $0)) $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (/. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. $0 (*. $1 1.))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (*. 1. (#(lambda (/. 1. $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program": "(lambda (#(lambda (/. 1. $0)) $0))",
          "logLikelihood": 0.0
        },
        { "program": "(lambda (/. 1. $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. $0 (*. $0 $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (/. (/. $0 $0) $0))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (*. 1. (#(lambda (/. 1. $0)) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        { "program": "(lambda (lambda (/. $1 $0)))", "logLikelihood": 0.0 },
        {
          "program": "(lambda (lambda (*. $1 (#(lambda (/. 1. $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (*. (#(lambda (/. 1. $0)) $0) $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (#(lambda (/. 1. $0)) (/. $0 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (/. (+. $0 $0) $1))) $0 (#(lambda (/. $0 (+. 1. 1.))) $1))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (#(lambda (map (lambda (*. $0 $1)))) 1. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0) 1.))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. 1. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda $0) $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (#(lambda (map (lambda (*. $0 $1)))) 1. $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0) 1.))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (*. 1. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) $0)))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          {
            "constructor": "list",
            "arguments": [ { "constructor": "real", "arguments": [] } ]
          },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (#(lambda (/. 1. $0)) $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $0 (lambda (lambda (#(lambda (/. 1. $0)) $0)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (zip $0 $0 (lambda (lambda (#(lambda (/. 1. $0)) $1)))))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (/. 1. (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (#(lambda (/. 1. $0)) $0)) $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (#(lambda (/. 1. $0)) (#(lambda (fold $0 0. (lambda (lambda (+. $0 $1))))) (map (lambda (#(lambda (/. 1. $0)) $0)) (map (lambda $0) $0)))))",
          "logLikelihood": 0.0
        }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          { "constructor": "real", "arguments": [] }
        ]
      },
      "programs": [
        { "program": "(lambda (*. $0 (*. $0 pi)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. $0 (*. pi $0)))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 $0) pi))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. $0 pi) $0))", "logLikelihood": 0.0 },
        { "program": "(lambda (*. (*. pi $0) $0))", "logLikelihood": 0.0 }
      ]
    },
    {
      "request": {
        "constructor": "->",
        "arguments": [
          { "constructor": "real", "arguments": [] },
          {
            "constructor": "->",
            "arguments": [
              { "constructor": "real", "arguments": [] },
              { "constructor": "real", "arguments": [] }
            ]
          }
        ]
      },
      "programs": [
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (cons $0 (cons $1 empty))))) $1 $0)))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (cons $0 (cons $1 empty))))) $0 $1)))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
          "logLikelihood": 0.0
        },
        {
          "program": "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
          "logLikelihood": 0.0
        },
        {
          "program":
            "(lambda (lambda (#(lambda (fold $0 0. (lambda (lambda (+. $0 (*. $1 $1)))))) (cons $0 (cons $1 (#(lambda (map (lambda (*. $0 $1)))) $0 empty))))))",
          "logLikelihood": 0.0
        }
      ]
    }
  ]
}