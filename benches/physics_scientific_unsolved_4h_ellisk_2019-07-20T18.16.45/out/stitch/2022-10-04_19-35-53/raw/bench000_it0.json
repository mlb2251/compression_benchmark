{
  "cmd": "/scratch/mlbowers/proj/stitch/target/release/compress compression_benchmark/benches/physics_scientific_unsolved_4h_ellisk_2019-07-20T18.16.45/bench000_it0.json --max-arity=3 --threads=1 --iterations=8 --fmt=dreamcoder --dreamcoder-comparison --out=compression_benchmark/benches/physics_scientific_unsolved_4h_ellisk_2019-07-20T18.16.45/out/stitch/2022-10-04_19-35-53/raw/bench000_it0.json",
  "args": {
    "file": "compression_benchmark/benches/physics_scientific_unsolved_4h_ellisk_2019-07-20T18.16.45/bench000_it0.json",
    "out": "compression_benchmark/benches/physics_scientific_unsolved_4h_ellisk_2019-07-20T18.16.45/out/stitch/2022-10-04_19-35-53/raw/bench000_it0.json",
    "iterations": 8,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "args_from_json": false,
    "save_rewritten": null,
    "step": {
      "max_arity": 3,
      "threads": 1,
      "no_stats": false,
      "batch": 1,
      "dynamic_batch": false,
      "inv_candidates": 1,
      "hole_choice": "DepthFirst",
      "no_mismatch_check": false,
      "no_top_lambda": false,
      "track": null,
      "follow_track": false,
      "verbose_worklist": false,
      "verbose_best": false,
      "print_stats": 0,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_opt_arity_zero": false,
      "no_other_util": false,
      "rewrite_check": false,
      "utility_by_rewrite": false,
      "dreamcoder_comparison": true
    }
  },
  "original_cost": 142042,
  "original": [
    "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
    "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
    "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
    "(lam (lam (*. $1 (/. $1 $0))))",
    "(lam (lam (*. (/. $1 $0) $1)))",
    "(lam (lam (/. $1 (/. $0 $1))))",
    "(lam (lam (/. (*. $1 $1) $0)))",
    "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
    "(lam (lam (*. $0 (*. $0 $1))))",
    "(lam (lam (*. $0 (*. $1 $0))))",
    "(lam (lam (*. $1 (*. $0 $0))))",
    "(lam (lam (*. (*. $0 $0) $1)))",
    "(lam (lam (*. (*. $0 $1) $0)))",
    "(lam (lam (/. $1 $0)))",
    "(lam (lam (*. $1 (/. 1 $0))))",
    "(lam (lam (/. $1 (+. $0 0))))",
    "(lam (lam (/. $1 (+. 0 $0))))",
    "(lam (lam (/. $1 (-. $0 0))))",
    "(lam (lam (/. $1 $0)))",
    "(lam (lam (*. $1 (/. 1 $0))))",
    "(lam (lam (/. $1 (+. $0 0))))",
    "(lam (lam (/. $1 (+. 0 $0))))",
    "(lam (lam (/. $1 (-. $0 0))))",
    "(lam (lam (*. $0 (*. $1 $1))))",
    "(lam (lam (*. $1 (*. $0 $1))))",
    "(lam (lam (*. $1 (*. $1 $0))))",
    "(lam (lam (*. (*. $0 $1) $1)))",
    "(lam (lam (*. (*. $1 $0) $1)))",
    "(lam (lam (*. $1 (/. $1 $0))))",
    "(lam (lam (*. (/. $1 $0) $1)))",
    "(lam (lam (/. $1 (/. $0 $1))))",
    "(lam (lam (/. (*. $1 $1) $0)))",
    "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
    "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
    "(lam (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
    "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
    "(lam (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
    "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
    "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
    "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
    "(lam (lam (*. $1 (/. (*. $0 $0) (+. 1 1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
    "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
    "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
    "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
    "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
    "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
    "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
    "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
    "(lam (lam (/. (*. $1 $1) (+. $0 $0))))",
    "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
    "(lam (/. 1 $0))",
    "(lam (/. $0 (*. $0 $0)))",
    "(lam (/. (/. $0 $0) $0))",
    "(lam (/. 1 (+. $0 0)))",
    "(lam (/. 1 (+. 0 $0)))",
    "(lam (/. $0 (+. 1 1)))",
    "(lam (*. $0 (/. $0 (+. $0 $0))))",
    "(lam (/. (*. $0 $0) (+. $0 $0)))",
    "(lam (/. (-. $0 0) (+. 1 1)))",
    "(lam (/. (/. $0 (+. 1 1)) 1))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
    "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
    "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
    "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
    "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
    "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
    "(lam (lam (lam (lam (lam (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
    "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
    "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
    "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
    "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
    "(lam (lam (lam (lam (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
    "(lam (lam (lam (+. $2 (*. $0 $1)))))",
    "(lam (lam (lam (+. $2 (*. $1 $0)))))",
    "(lam (lam (lam (+. (*. $0 $1) $2))))",
    "(lam (lam (lam (+. (*. $1 $0) $2))))",
    "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
    "(lam (lam (map (lam (*. $0 $2)) $0)))",
    "(lam (lam (map (lam (*. $2 $0)) $0)))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
    "(lam (lam (map (lam (*. $0 $2)) $0)))",
    "(lam (lam (map (lam (*. $2 $0)) $0)))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
    "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
    "(lam (lam (/. (*. (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
    "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
    "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
    "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (/. (*. $1 $1) (+. 1 1)))))))))",
    "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
    "(lam (lam (*. $1 (/. (*. $0 $0) (+. 1 1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
    "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
    "(lam (lam (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
    "(lam (lam (map (lam (*. $0 $2)) $0)))",
    "(lam (lam (map (lam (*. $2 $0)) $0)))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
    "(lam (lam (map (lam (*. $0 $2)) $0)))",
    "(lam (lam (map (lam (*. $2 $0)) $0)))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
    "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
    "(lam (lam (/. $1 $0)))",
    "(lam (lam (*. $1 (/. 1 $0))))",
    "(lam (lam (/. $1 (+. $0 0))))",
    "(lam (lam (/. $1 (+. 0 $0))))",
    "(lam (lam (/. $1 (-. $0 0))))",
    "(lam (lam (lam (+. $2 (*. $0 $1)))))",
    "(lam (lam (lam (+. $2 (*. $1 $0)))))",
    "(lam (lam (lam (+. (*. $0 $1) $2))))",
    "(lam (lam (lam (+. (*. $1 $0) $2))))",
    "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
    "(lam (/. (+. pi pi) $0))",
    "(lam (*. pi (/. (+. 1 1) $0)))",
    "(lam (/. (-. (+. pi pi) 0) $0))",
    "(lam (/. (-. pi (-. 0 pi)) $0))",
    "(lam (/. (/. (+. pi pi) $0) 1))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
    "(lam (lam (lam (*. $1 (/. $2 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))))))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
    "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
    "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
    "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
    "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
    "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
    "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
    "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
    "(lam (lam (*. $0 $1)))",
    "(lam (lam (*. $1 $0)))",
    "(lam (lam (*. $1 (+. $0 0))))",
    "(lam (lam (*. $1 (-. $0 0))))",
    "(lam (lam (*. $1 (power $0 1))))",
    "(lam (lam (*. $0 $1)))",
    "(lam (lam (*. $1 $0)))",
    "(lam (lam (*. $1 (+. $0 0))))",
    "(lam (lam (*. $1 (-. $0 0))))",
    "(lam (lam (*. $1 (power $0 1))))",
    "(lam (/. 1 $0))",
    "(lam (/. $0 (*. $0 $0)))",
    "(lam (/. (/. $0 $0) $0))",
    "(lam (/. 1 (+. $0 0)))",
    "(lam (/. 1 (+. 0 $0)))",
    "(lam (/. 1 $0))",
    "(lam (/. $0 (*. $0 $0)))",
    "(lam (/. (/. $0 $0) $0))",
    "(lam (/. 1 (+. $0 0)))",
    "(lam (/. 1 (+. 0 $0)))",
    "(lam (lam (/. $1 $0)))",
    "(lam (lam (*. $1 (/. 1 $0))))",
    "(lam (lam (/. $1 (+. $0 0))))",
    "(lam (lam (/. $1 (+. 0 $0))))",
    "(lam (lam (/. $1 (-. $0 0))))",
    "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
    "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
    "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
    "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
    "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
    "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
    "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
    "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
    "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
    "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
    "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
    "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
    "(lam (/. 1 (fold (map (lam (/. 1 $0)) $0) 0 (lam (lam (+. $0 $1))))))",
    "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
    "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
    "(lam (*. $0 (*. $0 pi)))",
    "(lam (*. $0 (*. pi $0)))",
    "(lam (*. (*. $0 $0) pi))",
    "(lam (*. (*. $0 pi) $0))",
    "(lam (*. (*. pi $0) $0))",
    "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
    "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
    "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
    "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
    "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
  ],
  "invs": [
    {
      "body": "(/. (*. #1 #1) (+. #0 #0))",
      "dreamcoder": "#(lambda (lambda (/. (*. $0 $0) (+. $1 $1))))",
      "arity": 2,
      "name": "fn_0",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (/. (/. $0 (+. 1 1)) 1))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (/. (*. (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. pi (/. (+. 1 1) $0)))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (/. (/. (+. pi pi) $0) 1))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (*. $1 (/. $2 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
        "(lam (fold $0 0 (lam (lam (+. $0 $1)))))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $0 $1)))) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fold (map (lam (/. 1 $0)) $0) 0 (lam (lam (+. $0 $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (/. (/. $0 (+. 1 1)) 1))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fold (zip $1 $0 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (/. (*. (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) 1 $1))))))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (#(lambda (lambda (/. (*. $0 $0) (+. $1 $1)))) 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. pi (/. (+. 1 1) $0)))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (/. (/. (+. pi pi) $0) 1))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (*. $1 (/. $2 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $1 $0)))) 1))",
        "(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $0 $1)))) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fold (map (lambda (/. 1 $0)) $0) 0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 1512,
      "expected_cost": 23598,
      "final_cost": 23598,
      "multiplier": 1.0770404271548437,
      "multiplier_wrt_orig": 1.0770404271548437,
      "num_uses": 5,
      "uses": [
        {
          "fn_0 $0 $0": "(/. (*. $0 $0) (+. $0 $0))"
        },
        {
          "fn_0 1 $0": "(/. (*. $0 $0) (+. 1 1))"
        },
        {
          "fn_0 $0 $1": "(/. (*. $1 $1) (+. $0 $0))"
        },
        {
          "fn_0 1 $1": "(/. (*. $1 $1) (+. 1 1))"
        }
      ]
    },
    {
      "body": "(fold #0 0 (lam (lam (+. $0 $1))))",
      "dreamcoder": "#(lambda (fold $0 0 (lambda (lambda (+. $0 $1)))))",
      "arity": 1,
      "name": "fn_1",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (/. (/. $0 (+. 1 1)) 1))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (/. (*. (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "(lam (lam (map (lam (*. $2 $0)) $0)))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. pi (/. (+. 1 1) $0)))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (/. (/. (+. pi pi) $0) 1))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (*. $1 (/. $2 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fn_1 $0) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fn_1 (map (lam (/. 1 $0)) $0))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (/. (/. $0 (+. 1 1)) 1))",
        "(lambda (lambda (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (/. (*. (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. pi (/. (+. 1 1) $0)))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (/. (/. (+. pi pi) $0) 1))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (*. $1 (/. $2 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $1 $0)))) 1))",
        "(lambda (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) $0) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (#(lambda (fold $0 0 (lambda (lambda (+. $0 $1))))) (map (lambda (/. 1 $0)) $0))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 1320,
      "expected_cost": 21771,
      "final_cost": 21771,
      "multiplier": 1.083918974782968,
      "multiplier_wrt_orig": 1.1674245556014882,
      "num_uses": 10,
      "uses": [
        {
          "fn_1 $0": "(fold $0 0 (lam (lam (+. $0 $1))))"
        },
        {
          "fn_1 (map (lam (/. 1 $0)) $0)": "(fold (map (lam (/. 1 $0)) $0) 0 (lam (lam (+. $0 $1))))"
        },
        {
          "fn_1 (zip $0 $1 (lam (lam (*. $0 $1))))": "(fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))"
        },
        {
          "fn_1 (zip $0 $1 (lam (lam (*. $1 $0))))": "(fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $0 $1))))"
        },
        {
          "fn_1 (zip $1 $0 (lam (lam (*. $0 $1))))": "(fold (zip $1 $0 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $0 $1))))"
        }
      ]
    },
    {
      "body": "(lam (lam (map (lam (*. $2 $0)) $0)))",
      "dreamcoder": "#(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
      "arity": 0,
      "name": "fn_2",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (/. (/. $0 (+. 1 1)) 1))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (/. (*. (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. pi (/. (+. 1 1) $0)))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (/. (/. (+. pi pi) $0) 1))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (*. $1 (/. $2 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fn_1 $0) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fn_1 (map (lam (/. 1 $0)) $0))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (/. (/. $0 (+. 1 1)) 1))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "#(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "#(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (/. (*. (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "#(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "#(lambda (lambda (map (lambda (*. $2 $0)) $0)))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. pi (/. (+. 1 1) $0)))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (/. (/. (+. pi pi) $0) 1))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (*. $1 (/. $2 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $1 $0)))) 1))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fn_1 $0) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fn_1 (map (lambda (/. 1 $0)) $0))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 1121,
      "expected_cost": 20143,
      "final_cost": 20143,
      "multiplier": 1.0808221218289231,
      "multiplier_wrt_orig": 1.2617782852603883,
      "num_uses": 4,
      "uses": [
        {
          "fn_2 ": "(lam (lam (map (lam (*. $2 $0)) $0)))"
        }
      ]
    },
    {
      "body": "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
      "dreamcoder": "#(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
      "arity": 0,
      "name": "fn_3",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (lam (/. (*. $1 $1) $0)))",
        "(lam (lam (/. (power $1 (+. 1 1)) $0)))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (/. (/. $0 (+. 1 1)) 1))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (/. (*. (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (/. (+. pi pi) $0))",
        "(lam (*. pi (/. (+. 1 1) $0)))",
        "(lam (/. (-. (+. pi pi) 0) $0))",
        "(lam (/. (-. pi (-. 0 pi)) $0))",
        "(lam (/. (/. (+. pi pi) $0) 1))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "fn_3",
        "(lam (lam (lam (*. $1 (/. $2 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "fn_3",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. 1 $0))",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (lam (/. $1 $0)))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fn_1 $0) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fn_1 (map (lam (/. 1 $0)) $0))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (lambda (/. (*. $1 $1) $0)))",
        "(lambda (lambda (/. (power $1 (+. 1 1)) $0)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (/. (/. $0 (+. 1 1)) 1))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (/. (*. (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (/. (+. pi pi) $0))",
        "(lambda (*. pi (/. (+. 1 1) $0)))",
        "(lambda (/. (-. (+. pi pi) 0) $0))",
        "(lambda (/. (-. pi (-. 0 pi)) $0))",
        "(lambda (/. (/. (+. pi pi) $0) 1))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "#(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (*. $1 (/. $2 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "#(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. 1 $0))",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (lambda (/. $1 $0)))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $1 $0)))) 1))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fn_1 $0) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fn_1 (map (lambda (/. 1 $0)) $0))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 1016,
      "expected_cost": 17911,
      "final_cost": 17911,
      "multiplier": 1.124616157668472,
      "multiplier_wrt_orig": 1.4190162469990508,
      "num_uses": 2,
      "uses": [
        {
          "fn_3 ": "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))"
        }
      ]
    },
    {
      "body": "(lam (/. #0 $0))",
      "dreamcoder": "#(lambda (lambda (/. $1 $0)))",
      "arity": 1,
      "name": "fn_4",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_4 (*. $0 $0)))",
        "(lam (fn_4 (power $0 (+. 1 1))))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (*. $0 $0))))",
        "(lam (lam (*. (*. $0 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (*. $1 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_4 (*. $0 $0)))",
        "(lam (fn_4 (power $0 (+. 1 1))))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lam (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_4 1)",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (/. (/. $0 (+. 1 1)) 1))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lam (lam (/. (*. (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_4 (+. pi pi))",
        "(lam (*. pi (/. (+. 1 1) $0)))",
        "(fn_4 (-. (+. pi pi) 0))",
        "(fn_4 (-. pi (-. 0 pi)))",
        "(lam (/. (/. (+. pi pi) $0) 1))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "fn_3",
        "(lam (lam (lam (*. $1 (/. $2 (fold $0 0 (lam (lam (+. $0 (*. $1 $1))))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (*. $1 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (*. $1 $1)))))))))",
        "fn_3",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(fn_4 1)",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(fn_4 1)",
        "(lam (/. $0 (*. $0 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fn_1 $0) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fn_1 (map (fn_4 1) $0))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (*. $0 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (*. $0 $0) (*. $1 $1))))",
        "(lam (lam (+. (*. $1 $1) (*. $0 $0))))",
        "(lam (lam (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (#(lambda (lambda (/. $1 $0))) (*. $0 $0)))",
        "(lambda (#(lambda (lambda (/. $1 $0))) (power $0 (+. 1 1))))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (*. $0 $0))))",
        "(lambda (lambda (*. (*. $0 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(lambda (#(lambda (lambda (/. $1 $0))) $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (#(lambda (lambda (/. $1 $0))) $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (*. $1 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (#(lambda (lambda (/. $1 $0))) (*. $0 $0)))",
        "(lambda (#(lambda (lambda (/. $1 $0))) (power $0 (+. 1 1))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lambda (/. (+. (*. $0 $0) (*. $0 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(#(lambda (lambda (/. $1 $0))) 1)",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (/. (/. $0 (+. 1 1)) 1))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))) (+. 1 1))))",
        "(lambda (lambda (/. (*. (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))) $1) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (*. $0 $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (#(lambda (lambda (/. $1 $0))) $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(#(lambda (lambda (/. $1 $0))) (+. pi pi))",
        "(lambda (*. pi (/. (+. 1 1) $0)))",
        "(#(lambda (lambda (/. $1 $0))) (-. (+. pi pi) 0))",
        "(#(lambda (lambda (/. $1 $0))) (-. pi (-. 0 pi)))",
        "(lambda (/. (/. (+. pi pi) $0) 1))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "fn_3",
        "(lambda (lambda (lambda (*. $1 (/. $2 (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1))))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (*. $1 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (*. $1 $1)))))))))",
        "fn_3",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(#(lambda (lambda (/. $1 $0))) 1)",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(#(lambda (lambda (/. $1 $0))) 1)",
        "(lambda (/. $0 (*. $0 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (#(lambda (lambda (/. $1 $0))) $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $1 $0)))) 1))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fn_1 $0) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fn_1 (map (#(lambda (lambda (/. $1 $0))) 1) $0))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (*. $0 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (*. $0 $0) (*. $1 $1))))",
        "(lambda (lambda (+. (*. $1 $1) (*. $0 $0))))",
        "(lambda (lambda (+. (*. $0 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (*. $1 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (*. $0 $0))))"
      ],
      "utility": 919,
      "expected_cost": 16789,
      "final_cost": 16789,
      "multiplier": 1.0668294716778843,
      "multiplier_wrt_orig": 1.5138483530883315,
      "num_uses": 18,
      "uses": [
        {
          "fn_4 $0": "(lam (/. $1 $0))"
        },
        {
          "fn_4 (*. $0 $0)": "(lam (/. (*. $1 $1) $0))"
        },
        {
          "fn_4 (+. pi pi)": "(lam (/. (+. pi pi) $0))"
        },
        {
          "fn_4 (-. (+. pi pi) 0)": "(lam (/. (-. (+. pi pi) 0) $0))"
        },
        {
          "fn_4 (-. pi (-. 0 pi))": "(lam (/. (-. pi (-. 0 pi)) $0))"
        },
        {
          "fn_4 (/. #0 #0)": "(lam (/. (/. $0 $0) $0))"
        },
        {
          "fn_4 (power $0 (+. 1 1))": "(lam (/. (power $1 (+. 1 1)) $0))"
        },
        {
          "fn_4 1": "(lam (/. 1 $0))"
        }
      ]
    },
    {
      "body": "(*. #0 #0)",
      "dreamcoder": "#(lambda (*. $0 $0))",
      "arity": 1,
      "name": "fn_5",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_4 (fn_5 $0)))",
        "(lam (fn_4 (power $0 (+. 1 1))))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (fn_5 $0))))",
        "(lam (lam (*. (fn_5 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (fn_5 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_4 (fn_5 $0)))",
        "(lam (fn_4 (power $0 (+. 1 1))))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lam (/. (+. (fn_5 $0) (fn_5 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_4 1)",
        "(lam (/. $0 (fn_5 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (/. (/. $0 (+. 1 1)) 1))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $0 $1)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 (lam (lam (*. $0 $1)))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))) (+. 1 1))))",
        "(lam (lam (/. (*. (fold $0 0 (lam (lam (+. $0 (fn_5 $1))))) $1) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (/. $1 (/. (+. 1 1) (fn_5 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_4 (+. pi pi))",
        "(lam (*. pi (/. (+. 1 1) $0)))",
        "(fn_4 (-. (+. pi pi) 0))",
        "(fn_4 (-. pi (-. 0 pi)))",
        "(lam (/. (/. (+. pi pi) $0) 1))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_5 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lam (lam (lam (*. $1 (/. $2 (fold $0 0 (lam (lam (+. $0 (fn_5 $1))))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_5 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(lam (lam (*. $0 $1)))",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(fn_4 1)",
        "(lam (/. $0 (fn_5 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(fn_4 1)",
        "(lam (/. $0 (fn_5 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fn_1 $0) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fn_1 (map (fn_4 1) $0))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (fn_5 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (fn_5 $0) (fn_5 $1))))",
        "(lam (lam (+. (fn_5 $1) (fn_5 $0))))",
        "(lam (lam (+. (fn_5 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (fn_5 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (fn_5 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_4 (#(lambda (*. $0 $0)) $0)))",
        "(lambda (fn_4 (power $0 (+. 1 1))))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (#(lambda (*. $0 $0)) $0))))",
        "(lambda (lambda (*. (#(lambda (*. $0 $0)) $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (#(lambda (*. $0 $0)) $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_4 (#(lambda (*. $0 $0)) $0)))",
        "(lambda (fn_4 (power $0 (+. 1 1))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lambda (/. (+. (#(lambda (*. $0 $0)) $0) (#(lambda (*. $0 $0)) $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_4 1)",
        "(lambda (/. $0 (#(lambda (*. $0 $0)) $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (/. (/. $0 (+. 1 1)) 1))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 (lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))) (+. 1 1))))",
        "(lambda (lambda (/. (*. (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1))))) $1) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (#(lambda (*. $0 $0)) $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_4 (+. pi pi))",
        "(lambda (*. pi (/. (+. 1 1) $0)))",
        "(fn_4 (-. (+. pi pi) 0))",
        "(fn_4 (-. pi (-. 0 pi)))",
        "(lambda (/. (/. (+. pi pi) $0) 1))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (#(lambda (*. $0 $0)) $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "fn_3",
        "(lambda (lambda (lambda (*. $1 (/. $2 (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1))))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (#(lambda (*. $0 $0)) $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (#(lambda (*. $0 $0)) $1)))))))))",
        "fn_3",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(fn_4 1)",
        "(lambda (/. $0 (#(lambda (*. $0 $0)) $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(fn_4 1)",
        "(lambda (/. $0 (#(lambda (*. $0 $0)) $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $1 $0)))) 1))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fn_1 $0) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fn_1 (map (fn_4 1) $0))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (#(lambda (*. $0 $0)) $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (#(lambda (*. $0 $0)) $0) (#(lambda (*. $0 $0)) $1))))",
        "(lambda (lambda (+. (#(lambda (*. $0 $0)) $1) (#(lambda (*. $0 $0)) $0))))",
        "(lambda (lambda (+. (#(lambda (*. $0 $0)) $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (#(lambda (*. $0 $0)) $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (#(lambda (*. $0 $0)) $0))))"
      ],
      "utility": 605,
      "expected_cost": 16082,
      "final_cost": 16082,
      "multiplier": 1.0439621937569954,
      "multiplier_wrt_orig": 1.5804004477055094,
      "num_uses": 29,
      "uses": [
        {
          "fn_5 $0": "(*. $0 $0)"
        },
        {
          "fn_5 $1": "(*. $1 $1)"
        }
      ]
    },
    {
      "body": "(lam (lam (*. $0 $1)))",
      "dreamcoder": "#(lambda (lambda (*. $0 $1)))",
      "arity": 0,
      "name": "fn_6",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_4 (fn_5 $0)))",
        "(lam (fn_4 (power $0 (+. 1 1))))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (fn_5 $0))))",
        "(lam (lam (*. (fn_5 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (fn_5 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_4 (fn_5 $0)))",
        "(lam (fn_4 (power $0 (+. 1 1))))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lam (/. (+. (fn_5 $0) (fn_5 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_4 1)",
        "(lam (/. $0 (fn_5 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (/. (/. $0 (+. 1 1)) 1))",
        "(lam (lam (fn_1 (zip $0 $1 fn_6))))",
        "(lam (lam (fold (zip $0 $1 fn_6) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 fn_6))))",
        "(lam (lam (fn_1 (zip $0 $1 fn_6))))",
        "(lam (lam (fold (zip $0 $1 fn_6) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 fn_6))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))) (+. 1 1))))",
        "(lam (lam (/. (*. (fold $0 0 (lam (lam (+. $0 (fn_5 $1))))) $1) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (/. $1 (/. (+. 1 1) (fn_5 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (lam (+. $2 (*. $0 $1)))))",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_4 (+. pi pi))",
        "(lam (*. pi (/. (+. 1 1) $0)))",
        "(fn_4 (-. (+. pi pi) 0))",
        "(fn_4 (-. pi (-. 0 pi)))",
        "(lam (/. (/. (+. pi pi) $0) 1))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_5 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lam (lam (lam (*. $1 (/. $2 (fold $0 0 (lam (lam (+. $0 (fn_5 $1))))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_5 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "fn_6",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "fn_6",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(fn_4 1)",
        "(lam (/. $0 (fn_5 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(fn_4 1)",
        "(lam (/. $0 (fn_5 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fn_1 $0) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fn_1 (map (fn_4 1) $0))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (fn_5 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (fn_5 $0) (fn_5 $1))))",
        "(lam (lam (+. (fn_5 $1) (fn_5 $0))))",
        "(lam (lam (+. (fn_5 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (fn_5 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (fn_5 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_4 (fn_5 $0)))",
        "(lambda (fn_4 (power $0 (+. 1 1))))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (fn_5 $0))))",
        "(lambda (lambda (*. (fn_5 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (fn_5 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_4 (fn_5 $0)))",
        "(lambda (fn_4 (power $0 (+. 1 1))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lambda (/. (+. (fn_5 $0) (fn_5 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_4 1)",
        "(lambda (/. $0 (fn_5 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (/. (/. $0 (+. 1 1)) 1))",
        "(lambda (lambda (fn_1 (zip $0 $1 #(lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 #(lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 #(lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 #(lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (fold (zip $0 $1 #(lambda (lambda (*. $0 $1)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 #(lambda (lambda (*. $0 $1)))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))) (+. 1 1))))",
        "(lambda (lambda (/. (*. (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1))))) $1) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (fn_5 $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_4 (+. pi pi))",
        "(lambda (*. pi (/. (+. 1 1) $0)))",
        "(fn_4 (-. (+. pi pi) 0))",
        "(fn_4 (-. pi (-. 0 pi)))",
        "(lambda (/. (/. (+. pi pi) $0) 1))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_5 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lambda (lambda (lambda (*. $1 (/. $2 (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1))))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_5 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "#(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "#(lambda (lambda (*. $0 $1)))",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(fn_4 1)",
        "(lambda (/. $0 (fn_5 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(fn_4 1)",
        "(lambda (/. $0 (fn_5 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $1 $0)))) 1))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fn_1 $0) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fn_1 (map (fn_4 1) $0))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (fn_5 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (fn_5 $0) (fn_5 $1))))",
        "(lambda (lambda (+. (fn_5 $1) (fn_5 $0))))",
        "(lambda (lambda (+. (fn_5 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (fn_5 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (fn_5 $0))))"
      ],
      "utility": 512,
      "expected_cost": 15266,
      "final_cost": 15266,
      "multiplier": 1.0534521158129175,
      "multiplier_wrt_orig": 1.664876195467051,
      "num_uses": 8,
      "uses": [
        {
          "fn_6 ": "(lam (lam (*. $0 $1)))"
        }
      ]
    },
    {
      "body": "(lam (lam (lam (+. $2 (*. $0 $1)))))",
      "dreamcoder": "#(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
      "arity": 0,
      "name": "fn_7",
      "rewritten": [
        "(lam (lam (zip $0 $1 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $0 $1 (lam (lam (+. $1 $0))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $0 $1))))))",
        "(lam (lam (zip $1 $0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (map (lam $0) (zip $0 $1 (lam (lam (+. $0 $1)))))))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_4 (fn_5 $0)))",
        "(lam (fn_4 (power $0 (+. 1 1))))",
        "(lam (lam (*. $0 (*. $0 $1))))",
        "(lam (lam (*. $0 (*. $1 $0))))",
        "(lam (lam (*. $1 (fn_5 $0))))",
        "(lam (lam (*. (fn_5 $0) $1)))",
        "(lam (lam (*. (*. $0 $1) $0)))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (lam (*. $0 (fn_5 $1))))",
        "(lam (lam (*. $1 (*. $0 $1))))",
        "(lam (lam (*. $1 (*. $1 $0))))",
        "(lam (lam (*. (*. $0 $1) $1)))",
        "(lam (lam (*. (*. $1 $0) $1)))",
        "(lam (lam (*. $1 (/. $1 $0))))",
        "(lam (lam (*. (/. $1 $0) $1)))",
        "(lam (lam (/. $1 (/. $0 $1))))",
        "(lam (fn_4 (fn_5 $0)))",
        "(lam (fn_4 (power $0 (+. 1 1))))",
        "(lam (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lam (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lam (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lam (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lam (/. (+. (fn_5 $0) (fn_5 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lam (lam (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (*. $0 (/. $1 (+. 1 1)))))",
        "(lam (lam (*. $1 (/. $0 (+. 1 1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) $1))))",
        "(lam (lam (/. $1 (/. (+. 1 1) $0))))",
        "(lam (lam (/. (*. $0 $1) (+. 1 1))))",
        "(lam (lam (*. $1 (/. $1 (+. $0 $0)))))",
        "(lam (lam (*. (/. $1 (+. $0 $0)) $1)))",
        "(lam (lam (/. $1 (/. (+. $0 $0) $1))))",
        "(lam (lam (fn_0 $0 $1)))",
        "(lam (lam (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_4 1)",
        "(lam (/. $0 (fn_5 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (/. $0 (+. 1 1)))",
        "(lam (*. $0 (/. $0 (+. $0 $0))))",
        "(lam (fn_0 $0 $0))",
        "(lam (/. (-. $0 0) (+. 1 1)))",
        "(lam (/. (/. $0 (+. 1 1)) 1))",
        "(lam (lam (fn_1 (zip $0 $1 fn_6))))",
        "(lam (lam (fold (zip $0 $1 fn_6) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 fn_6))))",
        "(lam (lam (fn_1 (zip $0 $1 fn_6))))",
        "(lam (lam (fold (zip $0 $1 fn_6) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $0 $1 (lam (lam (*. $1 $0)))))))",
        "(lam (lam (fold (zip $0 $1 (lam (lam (*. $1 $0)))) 0 (lam (lam (+. $1 $0))))))",
        "(lam (lam (fn_1 (zip $1 $0 fn_6))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lam (lam (lam (lam (lam (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lam (lam (lam (lam (lam (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $0 $3) (*. $2 $1))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $1 $2))))))",
        "(lam (lam (lam (lam (-. (*. $3 $0) (*. $2 $1))))))",
        "(lam (lam (lam (lam (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "fn_7",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (/. (*. $1 (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))) (+. 1 1))))",
        "(lam (lam (/. (*. (fold $0 0 (lam (lam (+. $0 (fn_5 $1))))) $1) (+. 1 1))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lam (lam (fold $0 0 (lam (lam (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lam (lam (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lam (lam (*. $1 (fn_0 1 $0))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lam (lam (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lam (lam (/. $1 (/. (+. 1 1) (fn_5 $0)))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (lam (map (lam (*. $0 $2)) $0)))",
        "fn_2",
        "(lam (lam (zip $0 $0 (lam (lam (*. $0 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $1 $3))))))",
        "(lam (lam (zip $0 $0 (lam (lam (*. $3 $0))))))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "fn_7",
        "(lam (lam (lam (+. $2 (*. $1 $0)))))",
        "(lam (lam (lam (+. (*. $0 $1) $2))))",
        "(lam (lam (lam (+. (*. $1 $0) $2))))",
        "(lam (lam (lam (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_4 (+. pi pi))",
        "(lam (*. pi (/. (+. 1 1) $0)))",
        "(fn_4 (-. (+. pi pi) 0))",
        "(fn_4 (-. pi (-. 0 pi)))",
        "(lam (/. (/. (+. pi pi) $0) 1))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_5 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 1 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lam (lam (lam (*. $1 (/. $2 (fold $0 0 (lam (lam (+. $0 (fn_5 $1))))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "(lam (lam (lam (/. (*. $1 $2) (fold $0 0 (lam (lam (+. (fn_5 $1) $0))))))))",
        "(lam (lam (lam (/. (*. $2 $1) (fold $0 0 (lam (lam (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lam (lam (*. $0 (*. $1 (-. 0 $0)))))",
        "(lam (lam (*. $0 (*. (-. 0 $0) $1))))",
        "(lam (lam (*. $0 (-. 0 (*. $0 $1)))))",
        "(lam (lam (*. $0 (-. 0 (*. $1 $0)))))",
        "(lam (lam (*. $1 (*. $0 (-. 0 $0)))))",
        "fn_6",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "fn_6",
        "(lam (lam (*. $1 $0)))",
        "(lam (lam (*. $1 (+. $0 0))))",
        "(lam (lam (*. $1 (-. $0 0))))",
        "(lam (lam (*. $1 (power $0 1))))",
        "(fn_4 1)",
        "(lam (/. $0 (fn_5 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(fn_4 1)",
        "(lam (/. $0 (fn_5 $0)))",
        "(lam (/. (/. $0 $0) $0))",
        "(lam (/. 1 (+. $0 0)))",
        "(lam (/. 1 (+. 0 $0)))",
        "(lam (fn_4 $0))",
        "(lam (lam (*. $1 (/. 1 $0))))",
        "(lam (lam (/. $1 (+. $0 0))))",
        "(lam (lam (/. $1 (+. 0 $0))))",
        "(lam (lam (/. $1 (-. $0 0))))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fold $0 0 (lam (lam (+. $1 $0)))) 1))",
        "(lam (fn_1 $0))",
        "(lam (fold $0 0 (lam (lam (+. $1 $0)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $0 $1)))))",
        "(lam (fold (cdr $0) (car $0) (lam (lam (+. $1 $0)))))",
        "(lam (*. (fn_1 $0) 1))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. $0 (/. 1 $1)))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (+. (/. 1 $1) $0))))))",
        "(lam (/. 1 (fn_1 (map (fn_4 1) $0))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lam (/. 1 (fold $0 0 (lam (lam (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lam (*. $0 (*. $0 pi)))",
        "(lam (*. $0 (*. pi $0)))",
        "(lam (*. (fn_5 $0) pi))",
        "(lam (*. (*. $0 pi) $0))",
        "(lam (*. (*. pi $0) $0))",
        "(lam (lam (+. (fn_5 $0) (fn_5 $1))))",
        "(lam (lam (+. (fn_5 $1) (fn_5 $0))))",
        "(lam (lam (+. (fn_5 $0) (power $1 (+. 1 1)))))",
        "(lam (lam (+. (fn_5 $1) (power $0 (+. 1 1)))))",
        "(lam (lam (+. (power $1 (+. 1 1)) (fn_5 $0))))"
      ],
      "rewritten_dreamcoder": [
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $0 $1 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $0 $1))))))",
        "(lambda (lambda (zip $1 $0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (map (lambda $0) (zip $0 $1 (lambda (lambda (+. $0 $1)))))))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_4 (fn_5 $0)))",
        "(lambda (fn_4 (power $0 (+. 1 1))))",
        "(lambda (lambda (*. $0 (*. $0 $1))))",
        "(lambda (lambda (*. $0 (*. $1 $0))))",
        "(lambda (lambda (*. $1 (fn_5 $0))))",
        "(lambda (lambda (*. (fn_5 $0) $1)))",
        "(lambda (lambda (*. (*. $0 $1) $0)))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (lambda (*. $0 (fn_5 $1))))",
        "(lambda (lambda (*. $1 (*. $0 $1))))",
        "(lambda (lambda (*. $1 (*. $1 $0))))",
        "(lambda (lambda (*. (*. $0 $1) $1)))",
        "(lambda (lambda (*. (*. $1 $0) $1)))",
        "(lambda (lambda (*. $1 (/. $1 $0))))",
        "(lambda (lambda (*. (/. $1 $0) $1)))",
        "(lambda (lambda (/. $1 (/. $0 $1))))",
        "(lambda (fn_4 (fn_5 $0)))",
        "(lambda (fn_4 (power $0 (+. 1 1))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. 1 pi))))",
        "(lambda (/. (+. $0 $0) (+. (-. 0 (/. 1 pi)) pi)))",
        "(lambda (/. (+. $0 $0) (-. pi (/. $0 (*. pi $0)))))",
        "(lambda (/. (+. $0 $0) (-. pi (/. (*. $0 (/. 1 pi)) $0))))",
        "(lambda (/. (+. (fn_5 $0) (fn_5 $0)) (-. (*. pi $0) (/. $0 pi))))",
        "(lambda (lambda (*. $0 (/. (*. $0 $1) (+. 1 1)))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (*. $0 (/. $1 (+. 1 1)))))",
        "(lambda (lambda (*. $1 (/. $0 (+. 1 1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) $1))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) $0))))",
        "(lambda (lambda (/. (*. $0 $1) (+. 1 1))))",
        "(lambda (lambda (*. $1 (/. $1 (+. $0 $0)))))",
        "(lambda (lambda (*. (/. $1 (+. $0 $0)) $1)))",
        "(lambda (lambda (/. $1 (/. (+. $0 $0) $1))))",
        "(lambda (lambda (fn_0 $0 $1)))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (/. $1 $0)))))",
        "(fn_4 1)",
        "(lambda (/. $0 (fn_5 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (/. $0 (+. 1 1)))",
        "(lambda (*. $0 (/. $0 (+. $0 $0))))",
        "(lambda (fn_0 $0 $0))",
        "(lambda (/. (-. $0 0) (+. 1 1)))",
        "(lambda (/. (/. $0 (+. 1 1)) 1))",
        "(lambda (lambda (fn_1 (zip $0 $1 fn_6))))",
        "(lambda (lambda (fold (zip $0 $1 fn_6) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 fn_6))))",
        "(lambda (lambda (fn_1 (zip $0 $1 fn_6))))",
        "(lambda (lambda (fold (zip $0 $1 fn_6) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $0 $1 (lambda (lambda (*. $1 $0)))))))",
        "(lambda (lambda (fold (zip $0 $1 (lambda (lambda (*. $1 $0)))) 0 (lambda (lambda (+. $1 $0))))))",
        "(lambda (lambda (fn_1 (zip $1 $0 fn_6))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $0 $3) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $1 $2))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. $4 (-. (*. $3 $0) (*. $2 $1))))))))",
        "(lambda (lambda (lambda (lambda (lambda (*. (-. (*. $3 $0) (*. $2 $1)) $4))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $0 $3) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $1 $2))))))",
        "(lambda (lambda (lambda (lambda (-. (*. $3 $0) (*. $2 $1))))))",
        "(lambda (lambda (lambda (lambda (+. (-. 0 (*. $1 $2)) (*. $0 $3))))))",
        "#(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (/. (*. $1 (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))) (+. 1 1))))",
        "(lambda (lambda (/. (*. (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1))))) $1) (+. 1 1))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $1 $3) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $1 (/. (*. $3 $1) (+. 1 1)))))))))",
        "(lambda (lambda (fold $0 0 (lambda (lambda (+. $0 (*. $3 (fn_0 1 $1))))))))",
        "(lambda (lambda (*. $0 (/. (*. $1 $0) (+. 1 1)))))",
        "(lambda (lambda (*. $1 (fn_0 1 $0))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $0 $1)))))",
        "(lambda (lambda (/. $0 (/. (+. 1 1) (*. $1 $0)))))",
        "(lambda (lambda (/. $1 (/. (+. 1 1) (fn_5 $0)))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (lambda (map (lambda (*. $0 $2)) $0)))",
        "fn_2",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $0 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $1 $3))))))",
        "(lambda (lambda (zip $0 $0 (lambda (lambda (*. $3 $0))))))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "#(lambda (lambda (lambda (+. $2 (*. $0 $1)))))",
        "(lambda (lambda (lambda (+. $2 (*. $1 $0)))))",
        "(lambda (lambda (lambda (+. (*. $0 $1) $2))))",
        "(lambda (lambda (lambda (+. (*. $1 $0) $2))))",
        "(lambda (lambda (lambda (/. (+. $2 (*. $0 $1)) 1))))",
        "(fn_4 (+. pi pi))",
        "(lambda (*. pi (/. (+. 1 1) $0)))",
        "(fn_4 (-. (+. pi pi) 0))",
        "(fn_4 (-. pi (-. 0 pi)))",
        "(lambda (/. (/. (+. pi pi) $0) 1))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_5 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 1 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lambda (lambda (lambda (*. $1 (/. $2 (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1))))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "(lambda (lambda (lambda (/. (*. $1 $2) (fold $0 0 (lambda (lambda (+. (fn_5 $1) $0))))))))",
        "(lambda (lambda (lambda (/. (*. $2 $1) (fold $0 0 (lambda (lambda (+. $0 (fn_5 $1)))))))))",
        "fn_3",
        "(lambda (lambda (*. $0 (*. $1 (-. 0 $0)))))",
        "(lambda (lambda (*. $0 (*. (-. 0 $0) $1))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $0 $1)))))",
        "(lambda (lambda (*. $0 (-. 0 (*. $1 $0)))))",
        "(lambda (lambda (*. $1 (*. $0 (-. 0 $0)))))",
        "fn_6",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "fn_6",
        "(lambda (lambda (*. $1 $0)))",
        "(lambda (lambda (*. $1 (+. $0 0))))",
        "(lambda (lambda (*. $1 (-. $0 0))))",
        "(lambda (lambda (*. $1 (power $0 1))))",
        "(fn_4 1)",
        "(lambda (/. $0 (fn_5 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(fn_4 1)",
        "(lambda (/. $0 (fn_5 $0)))",
        "(lambda (/. (/. $0 $0) $0))",
        "(lambda (/. 1 (+. $0 0)))",
        "(lambda (/. 1 (+. 0 $0)))",
        "(lambda (fn_4 $0))",
        "(lambda (lambda (*. $1 (/. 1 $0))))",
        "(lambda (lambda (/. $1 (+. $0 0))))",
        "(lambda (lambda (/. $1 (+. 0 $0))))",
        "(lambda (lambda (/. $1 (-. $0 0))))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fold $0 0 (lambda (lambda (+. $1 $0)))) 1))",
        "(lambda (fn_1 $0))",
        "(lambda (fold $0 0 (lambda (lambda (+. $1 $0)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $0 $1)))))",
        "(lambda (fold (cdr $0) (car $0) (lambda (lambda (+. $1 $0)))))",
        "(lambda (*. (fn_1 $0) 1))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. $0 (/. 1 $1)))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (+. (/. 1 $1) $0))))))",
        "(lambda (/. 1 (fn_1 (map (fn_4 1) $0))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $0 $1)) $1))))))",
        "(lambda (/. 1 (fold $0 0 (lambda (lambda (/. (+. 1 (*. $1 $0)) $1))))))",
        "(lambda (*. $0 (*. $0 pi)))",
        "(lambda (*. $0 (*. pi $0)))",
        "(lambda (*. (fn_5 $0) pi))",
        "(lambda (*. (*. $0 pi) $0))",
        "(lambda (*. (*. pi $0) $0))",
        "(lambda (lambda (+. (fn_5 $0) (fn_5 $1))))",
        "(lambda (lambda (+. (fn_5 $1) (fn_5 $0))))",
        "(lambda (lambda (+. (fn_5 $0) (power $1 (+. 1 1)))))",
        "(lambda (lambda (+. (fn_5 $1) (power $0 (+. 1 1)))))",
        "(lambda (lambda (+. (power $1 (+. 1 1)) (fn_5 $0))))"
      ],
      "utility": 307,
      "expected_cost": 14452,
      "final_cost": 14452,
      "multiplier": 1.0563243841682812,
      "multiplier_wrt_orig": 1.7586493218931636,
      "num_uses": 2,
      "uses": [
        {
          "fn_7 ": "(lam (lam (lam (+. $2 (*. $0 $1)))))"
        }
      ]
    }
  ]
}