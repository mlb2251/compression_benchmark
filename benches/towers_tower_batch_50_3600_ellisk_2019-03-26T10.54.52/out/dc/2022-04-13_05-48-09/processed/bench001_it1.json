{
    "bench_group": "towers_tower_batch_50_3600_ellisk_2019-03-26T10.54.52",
    "bench": "bench001_it1",
    "mode": "dreamcoder",
    "run": "compression_benchmark/benches/towers_tower_batch_50_3600_ellisk_2019-03-26T10.54.52/out/dc/2022-04-13_05-48-09",
    "metrics": {
        "time_binary_seconds": 437.98,
        "time_per_inv_with_rewrite": 71136.0,
        "time_per_inv_no_rewrite": 37704.75,
        "mem_peak_kb": 744464,
        "compression_ratio": 1.2220485975466833,
        "absolute_compression": 11368,
        "compression_ratio_min": 1.4245379400018576
    },
    "num_inventions": 4,
    "inventions": [
        {
            "name": "fn_0",
            "dreamcoder": "#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0)))))",
            "stitch_uncanonical": "(fn_0 #0 (lam (1x3 (reverseHand $0))))",
            "stitch_canonical": "(fn_0 #0 (lam (1x3 (reverseHand $0))))",
            "arity": 1
        },
        {
            "name": "fn_1",
            "dreamcoder": "#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2)))",
            "stitch_uncanonical": "(moveHand 4 (fn_0 #0 (lam (reverseHand $0)) 2))",
            "stitch_canonical": "(moveHand 4 (fn_0 #0 (lam (reverseHand $0)) 2))",
            "arity": 1
        },
        {
            "name": "fn_2",
            "dreamcoder": "#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2)))))))",
            "stitch_uncanonical": "(tower_loopM #0 (lam (lam (fn_0 (moveHand #1 $0) (lam (reverseHand $0)) #2))))",
            "stitch_canonical": "(tower_loopM #0 (lam (lam (fn_0 (moveHand #1 $0) (lam (reverseHand $0)) #2))))",
            "arity": 3
        },
        {
            "name": "fn_3",
            "dreamcoder": "#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4))",
            "stitch_uncanonical": "(fn_2 #0 4)",
            "stitch_canonical": "(fn_2 #0 4)",
            "arity": 1
        }
    ]
}