{
    "bench_group": "towers_tower_batch_50_3600_ellisk_2019-03-26T10.54.52",
    "bench": "bench002_it2",
    "mode": "dreamcoder",
    "run": "benches/towers_tower_batch_50_3600_ellisk_2019-03-26T10.54.52/out/dc/2022-04-13_05-48-09",
    "metrics": {
        "time_binary_seconds": 848.53,
        "time_per_inv_with_rewrite": 98806.16666666667,
        "time_per_inv_no_rewrite": 57390.5,
        "mem_peak_kb": 1104268,
        "compression_ratio": 1.1322789360172538,
        "absolute_compression": 6992
    },
    "num_inventions": 6,
    "inventions": [
        {
            "name": "fn_0",
            "stitch_uncanonical": "(tower_loopM #1 (lam (lam (moveHand #2 (3x1 $0)))) #0)",
            "stitch_canonical": "(tower_loopM #0 (lam (lam (moveHand #1 (3x1 $0)))) #2)",
            "dreamcoder": "#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand $2 (3x1 $0)))) $2))))"
        },
        {
            "name": "fn_1",
            "stitch_uncanonical": "(tower_loopM 4 (lam (lam (tower_embed (lam (#1 $0)) (moveHand 6 $0)))) #0)",
            "stitch_canonical": "(tower_loopM 4 (lam (lam (tower_embed (lam (#0 $0)) (moveHand 6 $0)))) #1)",
            "dreamcoder": "#(lambda (lambda (tower_loopM 4 (lambda (lambda (tower_embed (lambda ($3 $0)) (moveHand 6 $0)))) $1)))"
        },
        {
            "name": "fn_2",
            "stitch_uncanonical": "(reverseHand (moveHand 6 (fn_4 #0)))",
            "stitch_canonical": "(reverseHand (moveHand 6 (fn_4 #0)))",
            "dreamcoder": "#(lambda (reverseHand (moveHand 6 (#(tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0))))) $0))))"
        },
        {
            "name": "fn_3",
            "stitch_uncanonical": "(tower_loopM #0 (lam (lam (tower_embed (lam (fn_7 $2 2 $0)) $0))))",
            "stitch_canonical": "(tower_loopM #0 (lam (lam (tower_embed (lam (fn_7 $2 2 $0)) $0))))",
            "dreamcoder": "#(lambda (tower_loopM $0 (lambda (lambda (tower_embed (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) $2 2 $0)) $0)))))"
        },
        {
            "name": "fn_4",
            "stitch_uncanonical": "(tower_embed (lam (fn_6 #1 $0)) (fn_7 #1 2 #0))",
            "stitch_canonical": "(tower_embed (lam (fn_6 #0 $0)) (fn_7 #0 2 #2))",
            "dreamcoder": "#(lambda (lambda (tower_embed (lambda (#(lambda (tower_loopM $0 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))))) (reverseHand (moveHand 4 $0)) 5))))) $1 $0)) (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) $0 2 $1))))"
        },
        {
            "name": "fn_5",
            "stitch_uncanonical": "(tower_embed (lam (fn_7 #0 #2 $0)) (fn_7 #0 2 #1))",
            "stitch_canonical": "(tower_embed (lam (fn_7 #0 #1 $0)) (fn_7 #0 2 #3))",
            "dreamcoder": "#(lambda (lambda (lambda (tower_embed (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) $3 $1 $0)) (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) $2 2 $1)))))"
        }
    ]
}