Stitch mode: none
Will write compression messages to cm_out_dir:  compressionMessages
Compression backend will run for most 20 iterations
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Found 0 alignments; 
Total number of candidates: 143799
Constructed version spaces and coalesced candidates in 38.9781s.
Timing point -1 right before normalizing: 46.0806s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 46.086s.
Timing Comparison Point A (vspace+beam) (millis): 46085
Rewrote topK in 38.5153s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 38.5157s.
sanity check for timing comparison, should be same as comparison point: 1.41003m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 84601
Initial score: -638.694293
Initial language score: 0.000000
Initial joint score: -638.694293 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.36654s.
Best MDL score: -553.044398 with (lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2)))))))
Scored candidates with language and grammar in 1.15707s.
Best joint score: -553.044398 with (lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2)))))))
Timing point 3 (all scoring): 2.53391s.
Improved score to -553.044398 (dScore=85.649895) w/ new primitive
	#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) : int -> int -> int -> tower -> tower
rewrote all of the frontiers in 23.3425s.
Timing point 4 (rewrite final frontiers): 23.3425s.
Completed one step of memory consolidation in 1.84139m.
New primitive is used 15 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 2 4 2 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 2 4 6 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 3 4 2 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 3 4 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 4 4 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 4 4 6 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 5 4 2 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 5 4 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 6 4 2 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 6 4 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 6 4 6 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 7 4 4 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 7 4 6 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 3 5 2 $0))
  (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) 4 6 2 $0))
Total number of candidates: 101418
Constructed version spaces and coalesced candidates in 31.6414s.
Timing point -1 right before normalizing: 37.0666s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 37.0712s.
Timing Comparison Point A (vspace+beam) (millis): 37071
Rewrote topK in 32.7493s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 32.7496s.
sanity check for timing comparison, should be same as comparison point: 1.16368m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 69820
Initial score: -552.897198
Initial language score: 0.000000
Initial joint score: -552.897198 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.12702s.
Best MDL score: -534.594352 with (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0)))))
Scored candidates with language and grammar in 1.15874s.
Best joint score: -534.594352 with (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0)))))
Timing point 3 (all scoring): 2.29857s.
Improved score to -534.594352 (dScore=18.302846) w/ new primitive
	#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))))) : tower -> int -> tower
rewrote all of the frontiers in 18.7771s.
Timing point 4 (rewrite final frontiers): 18.7771s.
Completed one step of memory consolidation in 1.51505m.
New primitive is used 6 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))))) $0 4))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))))) $0 5))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))))) $0 7))
  (lambda (tower_loopM 4 (lambda (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))))) (reverseHand (moveHand 4 $0)) 5))) $0))
  (lambda (tower_loopM 7 (lambda (lambda (moveHand 4 (#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))))) (reverseHand $0) 5)))) $0))
  (lambda (#(lambda (lambda (tower_loopM $0 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $3 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))))) 3 2 (reverseHand (moveHand 5 (#(lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (1x3 (reverseHand $0))))) $0 4)))))
Total number of candidates: 99915
Constructed version spaces and coalesced candidates in 29.0375s.
Timing point -1 right before normalizing: 33.8721s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 33.8757s.
Timing Comparison Point A (vspace+beam) (millis): 33875
Rewrote topK in 31.1781s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 31.1784s.
sanity check for timing comparison, should be same as comparison point: 1.08424m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 65054
Initial score: -534.498948
Initial language score: 0.000000
Initial joint score: -534.498948 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.1577s.
Best MDL score: -529.523896 with (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4))
Scored candidates with language and grammar in 1.19128s.
Best joint score: -529.523896 with (lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4))
Timing point 3 (all scoring): 2.35733s.
Improved score to -529.523896 (dScore=4.975052) w/ new primitive
	#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) : int -> int -> tower -> tower
rewrote all of the frontiers in 18.0848s.
Timing point 4 (rewrite final frontiers): 18.0848s.
Completed one step of memory consolidation in 1.42504m.
New primitive is used 13 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 2 2 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 2 6 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 3 2 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 3 4 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 4 4 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 4 6 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 5 2 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 5 4 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 6 2 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 6 4 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 6 6 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 7 4 $0))
  (lambda (#(lambda (#(lambda (lambda (lambda (tower_loopM $2 (lambda (lambda (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) (moveHand $3 $0) (lambda (reverseHand $0)) $2))))))) $0 4)) 7 6 $0))
Total number of candidates: 95968
Constructed version spaces and coalesced candidates in 29.001s.
Timing point -1 right before normalizing: 33.7863s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 33.789s.
Timing Comparison Point A (vspace+beam) (millis): 33788
Rewrote topK in 31.2797s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 31.28s.
sanity check for timing comparison, should be same as comparison point: 1.08448m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 65069
Initial score: -529.466196
Initial language score: 0.000000
Initial joint score: -529.466196 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.23742s.
Best MDL score: -525.171457 with (lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2)))
Scored candidates with language and grammar in 1.3093s.
Best joint score: -525.171457 with (lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2)))
Timing point 3 (all scoring): 2.55519s.
Improved score to -525.171457 (dScore=4.294739) w/ new primitive
	#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) : tower -> tower
rewrote all of the frontiers in 17.6012s.
Timing point 4 (rewrite final frontiers): 17.6012s.
Completed one step of memory consolidation in 1.42054m.
New primitive is used 2 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (tower_loopM 3 (lambda (lambda (reverseHand (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) $0)))) $0))
  (lambda (tower_loopM 3 (lambda (lambda (#(lambda (moveHand 4 (#(lambda (lambda (lambda (tower_loopM $0 (lambda (lambda (1x3 (moveHand 4 ($3 $0))))) (moveHand 2 (3x1 $2)))))) $0 (lambda (reverseHand $0)) 2))) (reverseHand $0)))) $0))
Total number of candidates: 78618
Constructed version spaces and coalesced candidates in 28.095s.
Timing point -1 right before normalizing: 32.6185s.
Trimmed down the beam, have only 300 best candidates
Timing point 1 (from start of compression_step_master to having topI candidates): 32.6201s.
Timing Comparison Point A (vspace+beam) (millis): 32620
Rewrote topK in 30.6874s.
Timing point 2 (from having topI candidates to BatchedRewrite under them): 30.6877s.
sanity check for timing comparison, should be same as comparison point: 1.05513m.
Timing Comparison Point B (vspace+beam+batched_rewrite) (millis): 63307
Initial score: -525.198615
Initial language score: 0.000000
Initial joint score: -525.198615 using LC of 0.000000
Here in the master worker: we still have 0 language alignments;
Scored candidates in 1.28789s.
Best MDL score: -528.175671 with (lambda (tower_loopM 4 (lambda (lambda ($2 (lambda (moveHand $0 $1)))))))
No improvement possible with MDL.
Scored candidates with language and grammar in 1.21047s.
Best joint score: -528.175671 with (lambda (tower_loopM 4 (lambda (lambda ($2 (lambda (moveHand $0 $1)))))))
Timing point 3 (all scoring): 2.51371s.
No improvement possible with joint score.
Completed one step of memory consolidation in 1.09704m.
completed ocaml compression in 7.29926m.
	Command being timed: "/scratch/mlbowers/proj/stitch/experiments/compression benches/towers_tower_batch_50_3600_ellisk_2019-03-26T10.54.52/bench001_it1.json"
	User time (seconds): 53.24
	System time (seconds): 1.49
	Percent of CPU this job got: 12%
	Elapsed (wall clock) time (h:mm:ss or m:ss): 7:17.98
	Average shared text size (kbytes): 0
	Average unshared data size (kbytes): 0
	Average stack size (kbytes): 0
	Average total size (kbytes): 0
	Maximum resident set size (kbytes): 744464
	Average resident set size (kbytes): 0
	Major (requiring I/O) page faults: 0
	Minor (reclaiming a frame) page faults: 1331036
	Voluntary context switches: 772
	Involuntary context switches: 5735
	Swaps: 0
	File system inputs: 0
	File system outputs: 72
	Socket messages sent: 0
	Socket messages received: 0
	Signals delivered: 0
	Page size (bytes): 4096
	Exit status: 0
