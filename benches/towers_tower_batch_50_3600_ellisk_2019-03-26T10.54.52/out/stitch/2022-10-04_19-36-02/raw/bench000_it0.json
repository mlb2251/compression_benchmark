{
  "cmd": "/scratch/mlbowers/proj/stitch/target/release/compress compression_benchmark/benches/towers_tower_batch_50_3600_ellisk_2019-03-26T10.54.52/bench000_it0.json --max-arity=3 --threads=1 --iterations=3 --fmt=dreamcoder --dreamcoder-comparison --out=compression_benchmark/benches/towers_tower_batch_50_3600_ellisk_2019-03-26T10.54.52/out/stitch/2022-10-04_19-36-02/raw/bench000_it0.json",
  "args": {
    "file": "compression_benchmark/benches/towers_tower_batch_50_3600_ellisk_2019-03-26T10.54.52/bench000_it0.json",
    "out": "compression_benchmark/benches/towers_tower_batch_50_3600_ellisk_2019-03-26T10.54.52/out/stitch/2022-10-04_19-36-02/raw/bench000_it0.json",
    "iterations": 3,
    "shuffle": false,
    "truncate": null,
    "fmt": "Dreamcoder",
    "no_opt": false,
    "args_from_json": false,
    "save_rewritten": null,
    "step": {
      "max_arity": 3,
      "threads": 1,
      "no_stats": false,
      "batch": 1,
      "dynamic_batch": false,
      "inv_candidates": 1,
      "hole_choice": "DepthFirst",
      "no_mismatch_check": false,
      "no_top_lambda": false,
      "track": null,
      "follow_track": false,
      "verbose_worklist": false,
      "verbose_best": false,
      "print_stats": 0,
      "show_rewritten": false,
      "no_opt_free_vars": false,
      "no_opt_single_use": false,
      "no_opt_single_task": false,
      "no_opt_upper_bound": false,
      "no_opt_force_multiuse": false,
      "no_opt_useless_abstract": false,
      "no_opt_arity_zero": false,
      "no_other_util": false,
      "rewrite_check": false,
      "utility_by_rewrite": false,
      "dreamcoder_comparison": true
    }
  },
  "original_cost": 26122,
  "original": [
    "(lam (tower_loopM 6 (lam (lam (reverseHand (tower_embed (lam (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
    "(lam (tower_loopM 6 (lam (lam (tower_embed (lam (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
    "(lam (tower_loopM 8 (lam (lam (reverseHand (tower_embed (lam (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
    "(lam (tower_loopM 8 (lam (lam (tower_embed (lam (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
    "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
    "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))",
    "(lam (tower_loopM 7 (lam (lam (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
    "(lam (tower_loopM 7 (lam (lam (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))",
    "(lam (tower_loopM 4 (lam (lam (3x1 (moveHand 7 $0)))) $0))",
    "(lam (tower_loopM 4 (lam (lam (moveHand 7 (3x1 $0)))) $0))",
    "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 3 $0)))) $0))",
    "(lam (tower_loopM 5 (lam (lam (moveHand 3 (1x3 $0)))) $0))",
    "(lam (tower_loopM 6 (lam (lam (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) $0))",
    "(lam (tower_loopM 6 (lam (lam (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) (moveHand 2 $0)))",
    "(lam (tower_loopM 2 (lam (lam (moveHand 3 (reverseHand (tower_loopM 4 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))",
    "(lam (tower_loopM 2 (lam (lam (moveHand 7 (reverseHand (moveHand 4 (tower_loopM 4 (lam (lam (moveHand 6 (3x1 $0)))) $0)))))) $0))",
    "(lam (tower_loopM 6 (lam (lam (moveHand 3 (reverseHand (tower_loopM 4 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))",
    "(lam (tower_loopM 2 (lam (lam (moveHand 3 (reverseHand (tower_loopM 5 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))",
    "(lam (tower_loopM 6 (lam (lam (moveHand 3 (reverseHand (tower_loopM 5 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))",
    "(lam (tower_loopM 8 (lam (lam (moveHand 3 (reverseHand (tower_loopM 5 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))",
    "(lam (tower_loopM 4 (lam (lam (moveHand 3 (reverseHand (tower_loopM 6 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))",
    "(lam (tower_loopM 6 (lam (lam (moveHand 3 (reverseHand (tower_loopM 6 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))"
  ],
  "invs": [
    {
      "body": "(lam (tower_loopM #1 (lam (lam (moveHand 3 (reverseHand (tower_loopM #0 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))",
      "dreamcoder": "#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0))))",
      "arity": 2,
      "name": "fn_0",
      "rewritten": [
        "(lam (tower_loopM 6 (lam (lam (reverseHand (tower_embed (lam (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(lam (tower_loopM 6 (lam (lam (tower_embed (lam (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
        "(lam (tower_loopM 8 (lam (lam (reverseHand (tower_embed (lam (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(lam (tower_loopM 8 (lam (lam (tower_embed (lam (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
        "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))",
        "(lam (tower_loopM 7 (lam (lam (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(lam (tower_loopM 7 (lam (lam (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))",
        "(lam (tower_loopM 4 (lam (lam (3x1 (moveHand 7 $0)))) $0))",
        "(lam (tower_loopM 4 (lam (lam (moveHand 7 (3x1 $0)))) $0))",
        "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 3 $0)))) $0))",
        "(lam (tower_loopM 5 (lam (lam (moveHand 3 (1x3 $0)))) $0))",
        "(lam (tower_loopM 6 (lam (lam (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) $0))",
        "(lam (tower_loopM 6 (lam (lam (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) (moveHand 2 $0)))",
        "(fn_0 4 2)",
        "(lam (tower_loopM 2 (lam (lam (moveHand 7 (reverseHand (moveHand 4 (tower_loopM 4 (lam (lam (moveHand 6 (3x1 $0)))) $0)))))) $0))",
        "(fn_0 4 6)",
        "(fn_0 5 2)",
        "(fn_0 5 6)",
        "(fn_0 5 8)",
        "(fn_0 6 4)",
        "(fn_0 6 6)"
      ],
      "rewritten_dreamcoder": [
        "(lambda (tower_loopM 6 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(lambda (tower_loopM 6 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
        "(lambda (tower_loopM 8 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(lambda (tower_loopM 8 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
        "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))",
        "(lambda (tower_loopM 7 (lambda (lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(lambda (tower_loopM 7 (lambda (lambda (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))",
        "(lambda (tower_loopM 4 (lambda (lambda (3x1 (moveHand 7 $0)))) $0))",
        "(lambda (tower_loopM 4 (lambda (lambda (moveHand 7 (3x1 $0)))) $0))",
        "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 3 $0)))) $0))",
        "(lambda (tower_loopM 5 (lambda (lambda (moveHand 3 (1x3 $0)))) $0))",
        "(lambda (tower_loopM 6 (lambda (lambda (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) $0))",
        "(lambda (tower_loopM 6 (lambda (lambda (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) (moveHand 2 $0)))",
        "(#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0)))) 4 2)",
        "(lambda (tower_loopM 2 (lambda (lambda (moveHand 7 (reverseHand (moveHand 4 (tower_loopM 4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))) $0))",
        "(#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0)))) 4 6)",
        "(#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0)))) 5 2)",
        "(#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0)))) 5 6)",
        "(#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0)))) 5 8)",
        "(#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0)))) 6 4)",
        "(#(lambda (lambda (lambda (tower_loopM $1 (lambda (lambda (moveHand 3 (reverseHand (tower_loopM $4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0))))) $0)))) 6 6)"
      ],
      "utility": 5988,
      "expected_cost": 9705,
      "final_cost": 9705,
      "multiplier": 1.7320968572900566,
      "multiplier_wrt_orig": 1.7320968572900566,
      "num_uses": 7,
      "uses": [
        {
          "fn_0 4 2": "(lam (tower_loopM 2 (lam (lam (moveHand 3 (reverseHand (tower_loopM 4 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))"
        },
        {
          "fn_0 5 2": "(lam (tower_loopM 2 (lam (lam (moveHand 3 (reverseHand (tower_loopM 5 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))"
        },
        {
          "fn_0 6 4": "(lam (tower_loopM 4 (lam (lam (moveHand 3 (reverseHand (tower_loopM 6 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))"
        },
        {
          "fn_0 4 6": "(lam (tower_loopM 6 (lam (lam (moveHand 3 (reverseHand (tower_loopM 4 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))"
        },
        {
          "fn_0 5 6": "(lam (tower_loopM 6 (lam (lam (moveHand 3 (reverseHand (tower_loopM 5 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))"
        },
        {
          "fn_0 6 6": "(lam (tower_loopM 6 (lam (lam (moveHand 3 (reverseHand (tower_loopM 6 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))"
        },
        {
          "fn_0 5 8": "(lam (tower_loopM 8 (lam (lam (moveHand 3 (reverseHand (tower_loopM 5 (lam (lam (moveHand 6 (3x1 $0)))) $0))))) $0))"
        }
      ]
    },
    {
      "body": "(lam (tower_loopM #0 (lam (lam (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))",
      "dreamcoder": "#(lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0)))))",
      "arity": 1,
      "name": "fn_1",
      "rewritten": [
        "(lam (tower_loopM 6 (lam (lam (reverseHand (tower_embed (lam (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(lam (tower_loopM 6 (lam (lam (tower_embed (lam (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
        "(lam (tower_loopM 8 (lam (lam (reverseHand (tower_embed (lam (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(lam (tower_loopM 8 (lam (lam (tower_embed (lam (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
        "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(fn_1 5)",
        "(lam (tower_loopM 7 (lam (lam (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(fn_1 7)",
        "(lam (tower_loopM 4 (lam (lam (3x1 (moveHand 7 $0)))) $0))",
        "(lam (tower_loopM 4 (lam (lam (moveHand 7 (3x1 $0)))) $0))",
        "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 3 $0)))) $0))",
        "(lam (tower_loopM 5 (lam (lam (moveHand 3 (1x3 $0)))) $0))",
        "(lam (tower_loopM 6 (lam (lam (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) $0))",
        "(lam (tower_loopM 6 (lam (lam (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) (moveHand 2 $0)))",
        "(fn_0 4 2)",
        "(lam (tower_loopM 2 (lam (lam (moveHand 7 (reverseHand (moveHand 4 (tower_loopM 4 (lam (lam (moveHand 6 (3x1 $0)))) $0)))))) $0))",
        "(fn_0 4 6)",
        "(fn_0 5 2)",
        "(fn_0 5 6)",
        "(fn_0 5 8)",
        "(fn_0 6 4)",
        "(fn_0 6 6)"
      ],
      "rewritten_dreamcoder": [
        "(lambda (tower_loopM 6 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(lambda (tower_loopM 6 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
        "(lambda (tower_loopM 8 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(lambda (tower_loopM 8 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
        "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(#(lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))) 5)",
        "(lambda (tower_loopM 7 (lambda (lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(#(lambda (lambda (tower_loopM $1 (lambda (lambda (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))) 7)",
        "(lambda (tower_loopM 4 (lambda (lambda (3x1 (moveHand 7 $0)))) $0))",
        "(lambda (tower_loopM 4 (lambda (lambda (moveHand 7 (3x1 $0)))) $0))",
        "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 3 $0)))) $0))",
        "(lambda (tower_loopM 5 (lambda (lambda (moveHand 3 (1x3 $0)))) $0))",
        "(lambda (tower_loopM 6 (lambda (lambda (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) $0))",
        "(lambda (tower_loopM 6 (lambda (lambda (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) (moveHand 2 $0)))",
        "(fn_0 4 2)",
        "(lambda (tower_loopM 2 (lambda (lambda (moveHand 7 (reverseHand (moveHand 4 (tower_loopM 4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))) $0))",
        "(fn_0 4 6)",
        "(fn_0 5 2)",
        "(fn_0 5 6)",
        "(fn_0 5 8)",
        "(fn_0 6 4)",
        "(fn_0 6 6)"
      ],
      "utility": 912,
      "expected_cost": 7679,
      "final_cost": 7679,
      "multiplier": 1.2638364370360724,
      "multiplier_wrt_orig": 2.1890871207188436,
      "num_uses": 2,
      "uses": [
        {
          "fn_1 5": "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))"
        },
        {
          "fn_1 7": "(lam (tower_loopM 7 (lam (lam (1x3 (moveHand 4 (reverseHand (1x3 $0)))))) (moveHand 2 (3x1 $0))))"
        }
      ]
    },
    {
      "body": "(lam (tower_loopM #0 (lam (lam (tower_embed (lam (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))",
      "dreamcoder": "#(lambda (lambda (tower_loopM $1 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0))))",
      "arity": 1,
      "name": "fn_2",
      "rewritten": [
        "(lam (tower_loopM 6 (lam (lam (reverseHand (tower_embed (lam (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(fn_2 6)",
        "(lam (tower_loopM 8 (lam (lam (reverseHand (tower_embed (lam (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(fn_2 8)",
        "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(fn_1 5)",
        "(lam (tower_loopM 7 (lam (lam (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(fn_1 7)",
        "(lam (tower_loopM 4 (lam (lam (3x1 (moveHand 7 $0)))) $0))",
        "(lam (tower_loopM 4 (lam (lam (moveHand 7 (3x1 $0)))) $0))",
        "(lam (tower_loopM 5 (lam (lam (1x3 (moveHand 3 $0)))) $0))",
        "(lam (tower_loopM 5 (lam (lam (moveHand 3 (1x3 $0)))) $0))",
        "(lam (tower_loopM 6 (lam (lam (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) $0))",
        "(lam (tower_loopM 6 (lam (lam (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) (moveHand 2 $0)))",
        "(fn_0 4 2)",
        "(lam (tower_loopM 2 (lam (lam (moveHand 7 (reverseHand (moveHand 4 (tower_loopM 4 (lam (lam (moveHand 6 (3x1 $0)))) $0)))))) $0))",
        "(fn_0 4 6)",
        "(fn_0 5 2)",
        "(fn_0 5 6)",
        "(fn_0 5 8)",
        "(fn_0 6 4)",
        "(fn_0 6 6)"
      ],
      "rewritten_dreamcoder": [
        "(lambda (tower_loopM 6 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(#(lambda (lambda (tower_loopM $1 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))) 6)",
        "(lambda (tower_loopM 8 (lambda (lambda (reverseHand (tower_embed (lambda (moveHand 2 (1x3 $0))) $0)))) (3x1 $0)))",
        "(#(lambda (lambda (tower_loopM $1 (lambda (lambda (tower_embed (lambda (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))) 8)",
        "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(fn_1 5)",
        "(lambda (tower_loopM 7 (lambda (lambda (1x3 (moveHand 4 (1x3 (reverseHand $0)))))) (moveHand 2 (3x1 $0))))",
        "(fn_1 7)",
        "(lambda (tower_loopM 4 (lambda (lambda (3x1 (moveHand 7 $0)))) $0))",
        "(lambda (tower_loopM 4 (lambda (lambda (moveHand 7 (3x1 $0)))) $0))",
        "(lambda (tower_loopM 5 (lambda (lambda (1x3 (moveHand 3 $0)))) $0))",
        "(lambda (tower_loopM 5 (lambda (lambda (moveHand 3 (1x3 $0)))) $0))",
        "(lambda (tower_loopM 6 (lambda (lambda (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) $0))",
        "(lambda (tower_loopM 6 (lambda (lambda (moveHand 2 (reverseHand (1x3 (moveHand 4 (reverseHand (1x3 (moveHand 2 (3x1 $0)))))))))) (moveHand 2 $0)))",
        "(fn_0 4 2)",
        "(lambda (tower_loopM 2 (lambda (lambda (moveHand 7 (reverseHand (moveHand 4 (tower_loopM 4 (lambda (lambda (moveHand 6 (3x1 $0)))) $0)))))) $0))",
        "(fn_0 4 6)",
        "(fn_0 5 2)",
        "(fn_0 5 6)",
        "(fn_0 5 8)",
        "(fn_0 6 4)",
        "(fn_0 6 6)"
      ],
      "utility": 812,
      "expected_cost": 5853,
      "final_cost": 5853,
      "multiplier": 1.3119767640526225,
      "multiplier_wrt_orig": 2.8720314368699813,
      "num_uses": 2,
      "uses": [
        {
          "fn_2 6": "(lam (tower_loopM 6 (lam (lam (tower_embed (lam (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))"
        },
        {
          "fn_2 8": "(lam (tower_loopM 8 (lam (lam (tower_embed (lam (moveHand 2 (1x3 $0))) (reverseHand $0)))) (3x1 $0)))"
        }
      ]
    }
  ]
}